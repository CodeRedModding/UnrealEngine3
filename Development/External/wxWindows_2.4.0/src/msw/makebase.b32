



# This file was automatically generated by tmake
# DO NOT CHANGE THIS FILE, YOUR CHANGES WILL BE LOST! CHANGE B32.T!

#
# File:     makebase.b32
# Author:   Julian Smart
# Created:  1998
# Updated:  Michael Fielding, 2002
# Copyright:
#
# "%W% %G%"
#
# Makefile : Builds wxWindows library wxbase.lib for MS Windows,
# and Borland C++ (32-bit).

# BCCDIR now defined in ../makeb32.env

!if "$(WXWIN)" == ""
!error You must define the WXWIN variable in autoexec.bat, e.g. WXWIN=c:\wx
!endif

WXDIR = $(WXWIN)
THISDIR = $(WXDIR)\src\msw

# Set all these to 1 if you want to build a dynamic library
!if "$(DLL)" == "1"
WXMAKINGDLL=1
WXBUILDDLL=1
!endif

wxUSE_GUI=0

!include $(WXDIR)\src\makeb32.env

PERIPH_LIBS=
PERIPH_TARGET=zlib regex $(PERIPH_TARGET)
PERIPH_CLEAN_TARGET=clean_zlib clean_regex $(PERIPH_CLEAN_TARGET)

!if "$(DLL)" == "0"
DUMMY=dummy
!else
DUMMY=dummydll
LIBS= cw32mti import32 ole2w32 odbc32 zlib winpng jpeg tiff regex
!endif

LIBTARGET=$(WXLIB)

GENDIR=..\generic
COMMDIR=..\common
HTMLDIR=..\html
OLEDIR=.\ole
MSWDIR=.

DOCDIR = $(WXDIR)\docs

COMMONOBJS = \
    $(MSWDIR)\appcmn.obj \
		$(MSWDIR)\clntdata.obj \
		$(MSWDIR)\cmdline.obj \
		$(MSWDIR)\config.obj \
		$(MSWDIR)\datetime.obj \
		$(MSWDIR)\datstrm.obj \
		$(MSWDIR)\db.obj \
		$(MSWDIR)\dbtable.obj \
		$(MSWDIR)\dircmn.obj \
		$(MSWDIR)\dynarray.obj \
		$(MSWDIR)\dynlib.obj \
		$(MSWDIR)\dynload.obj \
		$(MSWDIR)\encconv.obj \
		$(MSWDIR)\event.obj \
		$(MSWDIR)\extended.obj \
		$(MSWDIR)\ffile.obj \
		$(MSWDIR)\file.obj \
		$(MSWDIR)\fileconf.obj \
		$(MSWDIR)\filefn.obj \
		$(MSWDIR)\filename.obj \
		$(MSWDIR)\filesys.obj \
		$(MSWDIR)\fontmap.obj \
		$(MSWDIR)\fs_inet.obj \
		$(MSWDIR)\fs_mem.obj \
		$(MSWDIR)\fs_zip.obj \
		$(MSWDIR)\ftp.obj \
		$(MSWDIR)\hash.obj \
		$(MSWDIR)\hashmap.obj \
		$(MSWDIR)\http.obj \
		$(MSWDIR)\intl.obj \
		$(MSWDIR)\ipcbase.obj \
		$(MSWDIR)\list.obj \
		$(MSWDIR)\log.obj \
		$(MSWDIR)\longlong.obj \
		$(MSWDIR)\memory.obj \
		$(MSWDIR)\mimecmn.obj \
		$(MSWDIR)\module.obj \
		$(MSWDIR)\msgout.obj \
		$(MSWDIR)\mstream.obj \
		$(MSWDIR)\object.obj \
		$(MSWDIR)\process.obj \
		$(MSWDIR)\protocol.obj \
		$(MSWDIR)\regex.obj \
		$(MSWDIR)\sckaddr.obj \
		$(MSWDIR)\sckfile.obj \
		$(MSWDIR)\sckipc.obj \
		$(MSWDIR)\sckstrm.obj \
		$(MSWDIR)\socket.obj \
		$(MSWDIR)\strconv.obj \
		$(MSWDIR)\stream.obj \
		$(MSWDIR)\string.obj \
		$(MSWDIR)\sysopt.obj \
		$(MSWDIR)\textbuf.obj \
		$(MSWDIR)\textfile.obj \
		$(MSWDIR)\timercmn.obj \
		$(MSWDIR)\tokenzr.obj \
		$(MSWDIR)\txtstrm.obj \
		$(MSWDIR)\unzip.obj \
		$(MSWDIR)\url.obj \
		$(MSWDIR)\utilscmn.obj \
		$(MSWDIR)\variant.obj \
		$(MSWDIR)\wfstream.obj \
		$(MSWDIR)\wxchar.obj \
		$(MSWDIR)\zipstrm.obj \
		$(MSWDIR)\zstream.obj \
		$(MSWDIR)\init.obj

MSWOBJS = $(MSWDIR)\dde.obj \
		$(MSWDIR)\dir.obj \
		$(MSWDIR)\gsocket.obj \
		$(MSWDIR)\gsockmsw.obj \
		$(MSWDIR)\main.obj \
		$(MSWDIR)\mimetype.obj \
		$(MSWDIR)\regconf.obj \
		$(MSWDIR)\registry.obj \
		$(MSWDIR)\snglinst.obj \
		$(MSWDIR)\thread.obj \
		$(MSWDIR)\utils.obj \
		$(MSWDIR)\utilsexc.obj \
		$(MSWDIR)\volume.obj

OBJECTS = $(COMMONOBJS) $(MSWOBJS)

default:    wx

wx:    $(ARCHINCDIR)\wx makesetuph makearchsetuph $(CFG) $(DUMMY).obj $(OBJECTS) $(PERIPH_TARGET) $(LIBTARGET)

all:    wx

# Copy the in-CVS setup0.h to setup.h if necessary
makesetuph:
     cd $(WXDIR)\include\wx\msw
     if not exist setup.h copy setup0.h setup.h
     cd $(WXDIR)\src\msw

# Copy include\wx\msw\setup.h to the architecture-specific location
makearchsetuph:
     copy $(WXDIR)\include\wx\msw\setup.h $(ARCHSETUPH)
     cd $(WXDIR)\src\msw

$(ARCHINCDIR)\wx:
    -mkdir $(ARCHINCDIR)
    -mkdir $(ARCHINCDIR)\wx
    -erase $(CFG)

!if "$(DLL)" == "0"

$(LIBTARGET): $(DUMMY).obj $(OBJECTS)
    -erase $(WXLIB)
    tlib "$(WXLIB)" /P1024 @&&!
+$(OBJECTS:.obj =.obj +) +$(PERIPH_LIBS:.lib =.lib +)
!

!else

$(LIBTARGET): $(DUMMY).obj $(OBJECTS)
    -erase $(WXLIB)
    -erase $(WXDLL)
        $(LINK) $(LINK_FLAGS) /L$(WXLIBDIR);$(BCCDIR)\lib;$(BCCDIR)\lib\psdk /v @&&!
c0d32.obj $(OBJECTS)
$(WXLIBDIR)\$(WXLIBNAME)
nul
$(PERIPH_LIBS) $(LIBS)
wxb32
!
        implib -c $(LIBTARGET) $(WXLIBDIR)\$(WXLIBNAME).dll
!endif

dummy.obj: dummy.$(SRCSUFF) $(LOCALHEADERS) $(BASEHEADERS) $(WXDIR)\include\wx\wx.h
dummydll.obj: dummydll.$(SRCSUFF) $(LOCALHEADERS) $(BASEHEADERS) $(WXDIR)\include\wx\wx.h version.res

version.res:
    brc32 -r -i$(WXDIR)\include\ $(MSWDIR)\version.rc

$(MSWDIR)\dde.obj: $(MSWDIR)\dde.$(SRCSUFF)

$(MSWDIR)\dir.obj: $(MSWDIR)\dir.$(SRCSUFF)

$(MSWDIR)\gsocket.obj: $(MSWDIR)\gsocket.c

$(MSWDIR)\gsockmsw.obj: $(MSWDIR)\gsockmsw.c

$(MSWDIR)\main.obj: $(MSWDIR)\main.$(SRCSUFF)

$(MSWDIR)\mimetype.obj: $(MSWDIR)\mimetype.$(SRCSUFF)

$(MSWDIR)\regconf.obj: $(MSWDIR)\regconf.$(SRCSUFF)

$(MSWDIR)\registry.obj: $(MSWDIR)\registry.$(SRCSUFF)

$(MSWDIR)\snglinst.obj: $(MSWDIR)\snglinst.$(SRCSUFF)

$(MSWDIR)\thread.obj: $(MSWDIR)\thread.$(SRCSUFF)

$(MSWDIR)\utils.obj: $(MSWDIR)\utils.$(SRCSUFF)

$(MSWDIR)\utilsexc.obj: $(MSWDIR)\utilsexc.$(SRCSUFF)

$(MSWDIR)\volume.obj: $(MSWDIR)\volume.$(SRCSUFF)



########################################################
# Common objects (always compiled)

$(MSWDIR)\appcmn.obj: $(COMMDIR)\appcmn.$(SRCSUFF)

$(MSWDIR)\clntdata.obj: $(COMMDIR)\clntdata.$(SRCSUFF)

$(MSWDIR)\cmdline.obj: $(COMMDIR)\cmdline.$(SRCSUFF)

$(MSWDIR)\config.obj: $(COMMDIR)\config.$(SRCSUFF)

$(MSWDIR)\datetime.obj: $(COMMDIR)\datetime.$(SRCSUFF)

$(MSWDIR)\datstrm.obj: $(COMMDIR)\datstrm.$(SRCSUFF)

$(MSWDIR)\db.obj: $(COMMDIR)\db.$(SRCSUFF)

$(MSWDIR)\dbtable.obj: $(COMMDIR)\dbtable.$(SRCSUFF)

$(MSWDIR)\dircmn.obj: $(COMMDIR)\dircmn.$(SRCSUFF)

$(MSWDIR)\dynarray.obj: $(COMMDIR)\dynarray.$(SRCSUFF)

$(MSWDIR)\dynlib.obj: $(COMMDIR)\dynlib.$(SRCSUFF)

$(MSWDIR)\dynload.obj: $(COMMDIR)\dynload.$(SRCSUFF)

$(MSWDIR)\encconv.obj: $(COMMDIR)\encconv.$(SRCSUFF)

$(MSWDIR)\event.obj: $(COMMDIR)\event.$(SRCSUFF)

$(MSWDIR)\extended.obj: $(COMMDIR)\extended.c

$(MSWDIR)\ffile.obj: $(COMMDIR)\ffile.$(SRCSUFF)

$(MSWDIR)\file.obj: $(COMMDIR)\file.$(SRCSUFF)

$(MSWDIR)\fileconf.obj: $(COMMDIR)\fileconf.$(SRCSUFF)

$(MSWDIR)\filefn.obj: $(COMMDIR)\filefn.$(SRCSUFF)

$(MSWDIR)\filename.obj: $(COMMDIR)\filename.$(SRCSUFF)

$(MSWDIR)\filesys.obj: $(COMMDIR)\filesys.$(SRCSUFF)

$(MSWDIR)\fontmap.obj: $(COMMDIR)\fontmap.$(SRCSUFF)

$(MSWDIR)\fs_inet.obj: $(COMMDIR)\fs_inet.$(SRCSUFF)

$(MSWDIR)\fs_mem.obj: $(COMMDIR)\fs_mem.$(SRCSUFF)

$(MSWDIR)\fs_zip.obj: $(COMMDIR)\fs_zip.$(SRCSUFF)

$(MSWDIR)\ftp.obj: $(COMMDIR)\ftp.$(SRCSUFF)

$(MSWDIR)\hash.obj: $(COMMDIR)\hash.$(SRCSUFF)

$(MSWDIR)\hashmap.obj: $(COMMDIR)\hashmap.$(SRCSUFF)

$(MSWDIR)\http.obj: $(COMMDIR)\http.$(SRCSUFF)

$(MSWDIR)\intl.obj: $(COMMDIR)\intl.$(SRCSUFF)

$(MSWDIR)\ipcbase.obj: $(COMMDIR)\ipcbase.$(SRCSUFF)

$(MSWDIR)\list.obj: $(COMMDIR)\list.$(SRCSUFF)

$(MSWDIR)\log.obj: $(COMMDIR)\log.$(SRCSUFF)

$(MSWDIR)\longlong.obj: $(COMMDIR)\longlong.$(SRCSUFF)

$(MSWDIR)\memory.obj: $(COMMDIR)\memory.$(SRCSUFF)

$(MSWDIR)\mimecmn.obj: $(COMMDIR)\mimecmn.$(SRCSUFF)

$(MSWDIR)\module.obj: $(COMMDIR)\module.$(SRCSUFF)

$(MSWDIR)\msgout.obj: $(COMMDIR)\msgout.$(SRCSUFF)

$(MSWDIR)\mstream.obj: $(COMMDIR)\mstream.$(SRCSUFF)

$(MSWDIR)\object.obj: $(COMMDIR)\object.$(SRCSUFF)

$(MSWDIR)\process.obj: $(COMMDIR)\process.$(SRCSUFF)

$(MSWDIR)\protocol.obj: $(COMMDIR)\protocol.$(SRCSUFF)

$(MSWDIR)\regex.obj: $(COMMDIR)\regex.$(SRCSUFF)

$(MSWDIR)\sckaddr.obj: $(COMMDIR)\sckaddr.$(SRCSUFF)

$(MSWDIR)\sckfile.obj: $(COMMDIR)\sckfile.$(SRCSUFF)

$(MSWDIR)\sckipc.obj: $(COMMDIR)\sckipc.$(SRCSUFF)

$(MSWDIR)\sckstrm.obj: $(COMMDIR)\sckstrm.$(SRCSUFF)

$(MSWDIR)\socket.obj: $(COMMDIR)\socket.$(SRCSUFF)

$(MSWDIR)\strconv.obj: $(COMMDIR)\strconv.$(SRCSUFF)

$(MSWDIR)\stream.obj: $(COMMDIR)\stream.$(SRCSUFF)

$(MSWDIR)\string.obj: $(COMMDIR)\string.$(SRCSUFF)

$(MSWDIR)\sysopt.obj: $(COMMDIR)\sysopt.$(SRCSUFF)

$(MSWDIR)\textbuf.obj: $(COMMDIR)\textbuf.$(SRCSUFF)

$(MSWDIR)\textfile.obj: $(COMMDIR)\textfile.$(SRCSUFF)

$(MSWDIR)\timercmn.obj: $(COMMDIR)\timercmn.$(SRCSUFF)

$(MSWDIR)\tokenzr.obj: $(COMMDIR)\tokenzr.$(SRCSUFF)

$(MSWDIR)\txtstrm.obj: $(COMMDIR)\txtstrm.$(SRCSUFF)

$(MSWDIR)\unzip.obj: $(COMMDIR)\unzip.c

$(MSWDIR)\url.obj: $(COMMDIR)\url.$(SRCSUFF)

$(MSWDIR)\utilscmn.obj: $(COMMDIR)\utilscmn.$(SRCSUFF)

$(MSWDIR)\variant.obj: $(COMMDIR)\variant.$(SRCSUFF)

$(MSWDIR)\wfstream.obj: $(COMMDIR)\wfstream.$(SRCSUFF)

$(MSWDIR)\wxchar.obj: $(COMMDIR)\wxchar.$(SRCSUFF)

$(MSWDIR)\zipstrm.obj: $(COMMDIR)\zipstrm.$(SRCSUFF)

$(MSWDIR)\zstream.obj: $(COMMDIR)\zstream.$(SRCSUFF)

$(MSWDIR)\init.obj: $(COMMDIR)\init.$(SRCSUFF)




all_utils:
    cd $(WXDIR)\utils
    ${MAKE} -f makefile.b32
    cd $(WXDIR)\src\msw

all_samples:
    cd $(WXDIR)\samples
    ${MAKE} -f makefile.b32
    cd $(WXDIR)\src\msw

all_execs:
    cd $(WXDIR)\utils
    ${MAKE} -f makefile.b32 all_execs
    cd $(WXDIR)\src\msw

png:    $(CFG)
        cd $(WXDIR)\src\png
        ${MAKE} -f makefile.b32 wxUSE_GUI=0
        cd $(WXDIR)\src\msw

clean_png:
        cd $(WXDIR)\src\png
        ${MAKE} -f makefile.b32 clean
        cd $(WXDIR)\src\msw

zlib:   $(CFG)
        cd $(WXDIR)\src\zlib
        ${MAKE} -f makefile.b32 wxUSE_GUI=0 lib
        cd $(WXDIR)\src\msw

clean_zlib:
        cd $(WXDIR)\src\zlib
        ${MAKE} -f makefile.b32 clean
        cd $(WXDIR)\src\msw

jpeg:    $(CFG)
        cd $(WXDIR)\src\jpeg
        ${MAKE} -f makefile.b32 wxUSE_GUI=0
        cd $(WXDIR)\src\msw

clean_jpeg:
        cd $(WXDIR)\src\jpeg
        ${MAKE} -f makefile.b32 clean
        cd $(WXDIR)\src\msw

regex:   $(CFG)
        cd $(WXDIR)\src\regex
        ${MAKE} -f makefile.b32 wxUSE_GUI=0 lib
        cd $(WXDIR)\src\msw

clean_regex:
        cd $(WXDIR)\src\regex
        ${MAKE} -f makefile.b32 clean
        cd $(WXDIR)\src\msw

tiff:   $(CFG)
        cd $(WXDIR)\src\tiff
        ${MAKE} -f makefile.b32 wxUSE_GUI=0 lib
        cd $(WXDIR)\src\msw

clean_tiff:
        cd $(WXDIR)\src\tiff
        ${MAKE} -f makefile.b32 clean
        cd $(WXDIR)\src\msw

$(CFG): makebase.b32
    copy &&!
-Hc
-H=$(WXDIR)\src\msw\wx32.csm
-3
-d
-a1 # byte alignment
-R-
-X
-w-par
-w-aus
-w-hid # virtual function A hides virtual function B
-tWM
-tWC

-I$(ARCHINCDIR);$(WXINC);$(BCCDIR)\include;$(WXDIR)/src/generic;$(WXDIR)/src/png;$(WXDIR)/src/jpeg;$(WXDIR)/src/zlib;$(WXDIR)/src/tiff;$(THISDIR)
-I$(WXDIR)\include\wx\msw\gnuwin32

-L$(BCCDIR)\lib;$(BCCDIR)\lib\psdk
-D__WXWIN__
-D__WXMSW__
-D__WINDOWS__
-DWIN32
$(OPT)
$(DEBUG_FLAGS)
$(WIN95FLAG)
! $(CFG)

clean: $(PERIPH_CLEAN_TARGET)
    -erase $(WXLIBDIR)\wx.tds
    -erase $(WXLIBDIR)\wx.il?
    -erase *.obj
    -erase *.pch
    -erase *.csm
    -erase "wx32.#??"

cleanall: clean

self:
    cd $(WXWIN)\distrib\msw\tmake
    tmake -t $(MFTYPE) wxwin.pro -o makefile.$(MFTYPE)
    copy makefile.$(MFTYPE) $(WXWIN)\src\msw
