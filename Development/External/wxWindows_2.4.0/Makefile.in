#####################################################################
# File:     makefile.unx
# Purpose:  Makefile for Unix wxWindows ports (both GUI and wxBase)
# Author:   Julian Smart, Robert Roebling, Vadim Zeitlin, Ron Lee
# Created:  1993
# Version:  $Id: Makefile.in,v 1.211.2.12 2002/12/22 01:22:40 VZ Exp $
# Copyright:(c) 1993, AIAI, University of Edinburgh,
# Copyright:(c) 1999, Vadim Zeitlin
# Copyright:(c) 1999, Robert Roebling
# Copyright:(c) 2001, Ron Lee
#####################################################################

include ./src/make.env

#################### the implicit rules #############################

# NB: we use the old style suffix rules (.c.o) and not the GNU make
#     implicit rules (%.o: %.c) because they are more portable, in
#     particular the BSD make understands the former but not the
#     latter
.SUFFIXES: .o .c .cpp .cxx .rsrc .r

.c.o:
	$(CC) -c $(CFLAGS) $(PICFLAGS) -o $@ $<

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(PICFLAGS) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(PICFLAGS) -o $@ $<

.rsrc.r:
	$(DEREZ) $^ Carbon.r -useDF > $@

############################# Paths #################################

srcdir = @srcdir@
top_srcdir = @top_srcdir@

VP1 = @TOOLKIT_VPATH@
VP2 = @top_srcdir@/src/common
VP3 = @top_srcdir@/src/generic
VP4 = @top_srcdir@/src/unix
VP5 = @top_srcdir@/src/html
VP6 = @top_srcdir@/src/png
VP7 = @top_srcdir@/src/jpeg
VP8 = @top_srcdir@/src/tiff
VP9 = @top_srcdir@/src/zlib
VPA = @top_srcdir@/src/regex
VP10 = @top_srcdir@/src/iodbc
VP11 = @top_srcdir@/src/msw/ole

# the comment at the end of the next line is needed because otherwise autoconf
# would remove this line completely - it contains a built-in hack to remove
# any VPATH assignment not containing ':'
VPATH = $(VP1)@PATH_IFS@$(VP2)@PATH_IFS@$(VP3)@PATH_IFS@$(VP4)@PATH_IFS@$(VP5)@PATH_IFS@$(VP6)@PATH_IFS@$(VP7)@PATH_IFS@$(VP8)@PATH_IFS@$(VP9)@PATH_IFS@$(VPA)@PATH_IFS@$(VP10)@PATH_IFS@$(VP11) # ':' for autoconf

prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
datadir = @datadir@
libdir = @libdir@
mandir = @mandir@
includedir = @includedir@

localedir = $(datadir)/locale

top_builddir = .
build_libdir = $(top_builddir)/lib

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL@

build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@

USE_GUI=@USE_GUI@

############################# Dirs #################################

WXDIR = $(top_srcdir)

# Subordinate library possibilities

SRCDIR   = $(WXDIR)/src
GENDIR   = $(WXDIR)/src/generic
COMMDIR  = $(WXDIR)/src/common
HTMLDIR  = $(WXDIR)/src/html
UNIXDIR  = $(WXDIR)/src/unix
PNGDIR   = $(WXDIR)/src/png
JPEGDIR  = $(WXDIR)/src/jpeg
TIFFDIR  = $(WXDIR)/src/tiff
ZLIBDIR  = $(WXDIR)/src/zlib
REGEXDIR = $(WXDIR)/src/regex
GTKDIR   = $(WXDIR)/src/gtk
X11DIR   = $(WXDIR)/src/x11
MGLDIR   = $(WXDIR)/src/mgl
MOTIFDIR = $(WXDIR)/src/motif
MSWDIR   = $(WXDIR)/src/msw
PMDIR    = $(WXDIR)/src/os2
MACDIR   = $(WXDIR)/src/mac
ODBCDIR  = $(WXDIR)/src/iodbc
FTDIR    = $(WXDIR)/src/freetype
INCDIR   = $(WXDIR)/include
SAMPDIR  = $(WXDIR)/samples
DEMODIR  = $(WXDIR)/demos
UTILSDIR = $(WXDIR)/utils
MISCDIR  = $(WXDIR)/misc

DOCDIR   = $(WXDIR)/docs
INTLDIR  = $(WXDIR)/locale

########################## Archive name ###############################

# append a version suffix x.y.z to all file names
VER_MAJMIN=$(WX_MAJOR_VERSION_NUMBER).$(WX_MINOR_VERSION_NUMBER)
VER_SUFFIX=$(WX_MAJOR_VERSION_NUMBER).$(WX_MINOR_VERSION_NUMBER).$(WX_RELEASE_NUMBER)$(EXTRA_VER)
WXARCHIVE=@DISTDIR@-$(VER_SUFFIX).tar.gz
WXGLARCHIVE=@DISTDIR@-gl-$(VER_SUFFIX).tar.gz
WXSAMPLES=wx$(TOOLKIT)-samples-$(VER_SUFFIX).tar.gz
WXDEMOS=wx$(TOOLKIT)-demos-$(VER_SUFFIX).tar.gz
WXARCHIVE_ZIP=wxMSW-$(VER_SUFFIX).zip

WXARCHIVE_BZIP=@DISTDIR@-$(VER_SUFFIX).tar.bz2
WXGLARCHIVE_BZIP=@DISTDIR@-gl-$(VER_SUFFIX).tar.bz2
WXSAMPLES_BZIP=wx$(TOOLKIT)-samples-$(VER_SUFFIX).tar.bz2
WXDEMOS_BZIP=wx$(TOOLKIT)-demos-$(VER_SUFFIX).tar.bz2

DISTDIRNAME=@DISTDIR@-$(VER_SUFFIX)
DISTDIR=./_dist_dir/$(DISTDIRNAME)


############################## Files ##################################

WX_LINGUAS = `cd $(top_srcdir)/locale && ls *.mo 2> /dev/null | sed -n 's/\.mo//p'`

# this line will include a file which defines ALL_SOURCES, ALL_OBJECTS,
# ALL_DEPFILES and ALL_HEADERS variables with the complete list of .cpp, .o,
# .d and .h/.inl files for the current toolkit
include @PORT_FILES@

SOURCES = @ALL_SOURCES@
HEADERS = @ALL_HEADERS@

# for the objects and depfiles, we might be bulding only part of them
# depending on configure arguments, so select a subset of ALL
OBJECTS = @ALL_OBJECTS@

# the object files of sublibraries (we assume that they don't change [often],
# so we don't generate these lists with tmake but embed them here)
REGEXOBJS = \
		regcomp.o \
		regexec.o \
		regerror.o \
		regfree.o

ZLIBOBJS = \
		adler32.o \
		compress.o \
		crc32.o \
		gzio.o \
		uncompr.o \
		deflate.o \
		trees.o \
		zutil.o \
		inflate.o \
		infblock.o \
		inftrees.o \
		infcodes.o \
		infutil.o \
		inffast.o

PNGOBJS = \
		png.o \
		pngerror.o \
		pnggccrd.o \
		pngget.o \
		pngmem.o \
		pngpread.o \
		pngread.o \
		pngrio.o \
		pngrtran.o \
		pngrutil.o \
		pngset.o \
		pngtrans.o \
		pngvcrd.o \
		pngwio.o \
		pngwrite.o \
		pngwtran.o \
		pngwutil.o

JPEGOBJS = \
		jcomapi.o \
		jutils.o \
		jerror.o \
		jmemmgr.o \
		jmemnobs.o \
		jcapimin.o \
		jcapistd.o \
		jctrans.o \
		jcparam.o \
		jdatadst.o \
		jcinit.o \
		jcmaster.o \
		jcmarker.o \
		jcmainct.o \
		jcprepct.o \
		jccoefct.o \
		jccolor.o \
		jcsample.o \
		jchuff.o \
		jcphuff.o \
		jcdctmgr.o \
		jfdctfst.o \
		jfdctflt.o \
		jfdctint.o \
		jdapimin.o \
		jdapistd.o \
		jdtrans.o \
		jdatasrc.o \
		jdmaster.o \
		jdinput.o \
		jdmarker.o \
		jdhuff.o \
		jdphuff.o \
		jdmainct.o \
		jdcoefct.o \
		jdpostct.o \
		jddctmgr.o \
		jidctfst.o \
		jidctflt.o \
		jidctint.o \
		jidctred.o \
		jdsample.o \
		jdcolor.o \
		jquant1.o \
		jquant2.o \
		jdmerge.o

TIFFOBJS = \
		tif_aux.o \
		tif_close.o \
		tif_codec.o \
		tif_compress.o \
		tif_dir.o \
		tif_dirinfo.o \
		tif_dirread.o \
		tif_dirwrite.o \
		tif_dumpmode.o \
		tif_error.o \
		tif_fax3.o \
		tif_fax3sm.o \
		tif_getimage.o \
		tif_jpeg.o \
		tif_flush.o \
		tif_lzw.o \
		tif_luv.o \
		tif_next.o \
		tif_open.o \
		tif_packbits.o \
		tif_pixarlog.o \
		tif_predict.o \
		tif_print.o \
		tif_read.o \
		tif_swab.o \
		tif_strip.o \
		tif_thunder.o \
		tif_tile.o \
		tif_unix.o \
		tif_version.o \
		tif_warning.o \
		tif_write.o \
		tif_zip.o

IODBCOBJS = \
		catalog.o \
		connect.o \
		dlf.o \
		dlproc.o \
		execute.o \
		fetch.o \
		hdbc.o \
		henv.o \
		herr.o \
		hstmt.o \
		info.o \
		itrace.o \
		misc.o \
		prepare.o \
		result.o


############################## Rules ##################################

SONAME_FLAGS = @SONAME_FLAGS@
SONAME_FLAGS_GL = @SONAME_FLAGS_GL@

all: @WX_ALL@

$(build_libdir)/@WX_LIBRARY_NAME_STATIC@: $(OBJECTS)
	@$(INSTALL) -d $(build_libdir)
	@$(RM) $@
	$(AR) $(AROPTIONS) $@ $(OBJECTS)
	$(RANLIB) $@

$(build_libdir)/@WX_LIBRARY_NAME_STATIC_GL@: glcanvas.o
	@$(INSTALL) -d $(build_libdir)
	@$(RM) $@
	$(AR) $(AROPTIONS) $@ glcanvas.o
	$(RANLIB) $@

$(build_libdir)/@WX_LIBRARY_NAME_SHARED@: $(OBJECTS)
	@$(INSTALL) -d $(build_libdir)
	$(SHARED_LD) $@ $(SONAME_FLAGS) $(OBJECTS) $(EXTRALIBS)

# NB: we used to have "-L$(build_libdir) @WXCONFIG_LIBS@" in the SHARED_LD line
#     but this seems to result in problems with libwx_gtk being linked in twice
$(build_libdir)/@WX_LIBRARY_NAME_SHARED_GL@: glcanvas.o $(build_libdir)/@WX_LIBRARY_NAME_SHARED@
	@$(INSTALL) -d $(build_libdir)
	$(SHARED_LD) $@ $(SONAME_FLAGS_GL) glcanvas.o $(EXTRALIBS) $(OPENGLLIBS)

$(build_libdir)/@WX_RESOURCES_MACOSX_DATA@: $(MACRESOURCES)
	@$(INSTALL) -d $(build_libdir)
	$(RESCOMP) -d __UNIX__ -useDF $^ -o $@

$(build_libdir)/@WX_LIBRARY_LINK1@: $(build_libdir)/@WX_LIBRARY_NAME_SHARED@
	@$(RM) $(build_libdir)/@WX_LIBRARY_LINK1@
	@$(RM) $(build_libdir)/@WX_LIBRARY_LINK2@
	cd $(build_libdir) \
		&& $(LN_S) @WX_TARGET_LIBRARY@ @WX_LIBRARY_LINK1@ \
		&& $(LN_S) @WX_TARGET_LIBRARY@ @WX_LIBRARY_LINK2@

$(build_libdir)/@WX_LIBRARY_LINK1_GL@: $(build_libdir)/@WX_LIBRARY_NAME_SHARED_GL@
	@$(RM) $(build_libdir)/@WX_LIBRARY_LINK1_GL@
	@$(RM) $(build_libdir)/@WX_LIBRARY_LINK2_GL@
	cd $(build_libdir) \
		&& $(LN_S) @WX_TARGET_LIBRARY_GL@ @WX_LIBRARY_LINK1_GL@ \
		&& $(LN_S) @WX_TARGET_LIBRARY_GL@ @WX_LIBRARY_LINK2_GL@

$(OBJECTS): $(WXDIR)/include/wx/defs.h $(WXDIR)/include/wx/object.h

parser.o: parser.c lexer.c
	$(CCLEX) -c $(CFLAGS) -I. $(PICFLAGS) -o $@ parser.c

parser.c: $(COMMDIR)/parser.y lexer.c
	$(YACC) $(COMMDIR)/parser.y
	@sed -e "s;$(COMMDIR)/y.tab.c;parser.y;g" < y.tab.c | \
	sed -e "s/BUFSIZ/5000/g"            | \
	sed -e "s/YYLMAX 200/YYLMAX 5000/g" | \
	sed -e "s/yy/PROIO_yy/g"            | \
	sed -e "s/input/PROIO_input/g"      | \
	sed -e "s/unput/PROIO_unput/g"      > parser.c
	@$(RM) y.tab.c

lexer.c: $(COMMDIR)/lexer.l
	$(LEX) $(COMMDIR)/lexer.l
	@sed -e "s;$(COMMDIR)/@LEX_STEM@.c;lexer.l;g" < @LEX_STEM@.c | \
	sed -e "s/yy/PROIO_yy/g"            | \
	sed -e "s/input/PROIO_input/g"      | \
	sed -e "s/unput/PROIO_unput/g"      > lexer.c
	@$(RM) @LEX_STEM@.c

@IF_GNU_MAKE@-include $(OBJECTS:.o=.d)

CREATE_INSTALLED_LINKS: preinstall
	$(RM) $(libdir)/@WX_LIBRARY_LINK1@
	$(RM) $(libdir)/@WX_LIBRARY_LINK2@
	cd $(libdir) \
		&& $(LN_S) @WX_LIBRARY_NAME_SHARED@ @WX_LIBRARY_LINK1@ \
		&& $(LN_S) @WX_LIBRARY_NAME_SHARED@ @WX_LIBRARY_LINK2@

CREATE_INSTALLED_LINKS_GL: preinstall_gl
	$(RM) $(libdir)/@WX_LIBRARY_LINK1_GL@
	$(RM) $(libdir)/@WX_LIBRARY_LINK2_GL@
	cd $(libdir) \
		&& $(LN_S) @WX_LIBRARY_NAME_SHARED_GL@ @WX_LIBRARY_LINK1_GL@ \
		&& $(LN_S) @WX_LIBRARY_NAME_SHARED_GL@ @WX_LIBRARY_LINK2_GL@

afminstall: preinstall
	@if test ! -d $(datadir); then $(INSTALL) -d $(datadir); fi
	$(INSTALL) -d $(datadir)/wx
	$(INSTALL) -d $(datadir)/wx/$(VER_MAJMIN)
	$(INSTALL) -d $(datadir)/wx/$(VER_MAJMIN)/afm
	$(INSTALL) -d $(datadir)/wx/$(VER_MAJMIN)/gs_afm
	$(INSTALL_DATA) $(top_srcdir)/misc/afm/*.afm $(datadir)/wx/$(VER_MAJMIN)/afm
	$(INSTALL_DATA) $(top_srcdir)/misc/gs_afm/*.afm $(datadir)/wx/$(VER_MAJMIN)/gs_afm

m4datainstall: preinstall
	$(INSTALL) -d $(datadir)/aclocal
	$(INSTALL_DATA) $(top_srcdir)/wxwin.m4 $(datadir)/aclocal

win32install: preinstall
	$(INSTALL) -d $(includedir)/wx/msw
	$(INSTALL) -d $(includedir)/wx/msw/gnuwin32
	$(INSTALL) -d $(includedir)/wx/msw/gnuwin32/gl
	$(INSTALL_DATA) $(top_srcdir)/include/wx/msw/*.cur \
			$(top_srcdir)/include/wx/msw/*.ico \
			$(top_srcdir)/include/wx/msw/*.bmp \
			$(top_srcdir)/include/wx/msw/wx.rc \
				$(includedir)/wx/msw
	$(INSTALL_DATA) $(top_srcdir)/include/wx/msw/gnuwin32/*.h $(includedir)/wx/msw/gnuwin32
	$(INSTALL_DATA) $(top_srcdir)/include/wx/msw/gnuwin32/gl/*.h $(includedir)/wx/msw/gnuwin32/gl

# this is the real install target: copies the library, wx-config and the
# headers to the installation directory
preinstall: $(build_libdir)/@WX_TARGET_LIBRARY@ $(top_builddir)/wx@TOOLCHAIN_NAME@-config
	@echo " "
	@echo " Installing wxWindows..."
	@echo " "

	@if test ! -d $(prefix); then $(INSTALL) -d $(prefix); fi
	@if test ! -d $(bindir); then $(INSTALL) -d $(bindir); fi
	@if test ! -d $(libdir); then $(INSTALL) -d $(libdir); fi

	$(INSTALL_SCRIPT) $(top_builddir)/wx@TOOLCHAIN_NAME@-config $(bindir)/wx@TOOLCHAIN_NAME@-config
	cd $(bindir) && rm -f wx-config && $(LN_S) wx@TOOLCHAIN_NAME@-config wx-config
	@INSTALL_LIBRARY@ $(build_libdir)/@WX_TARGET_LIBRARY@ $(libdir)/@WX_TARGET_LIBRARY@
	@if test "x@WX_LIBRARY_IMPORTLIB@" != "x"; then \
		$(INSTALL_PROGRAM) $(top_builddir)/lib/@WX_LIBRARY_IMPORTLIB@ $(libdir)/@WX_LIBRARY_IMPORTLIB@; fi

	$(INSTALL) -d $(libdir)/wx
	$(INSTALL) -d $(libdir)/wx/include
	$(INSTALL) -d $(libdir)/wx/include/univ
	$(INSTALL) -d $(libdir)/wx/include/@TOOLCHAIN_NAME@
	$(INSTALL) -d $(libdir)/wx/include/@TOOLCHAIN_NAME@/wx
	$(INSTALL_DATA) $(build_libdir)/wx/include/@TOOLCHAIN_NAME@/wx/setup.h \
                    $(libdir)/wx/include/@TOOLCHAIN_NAME@/wx/setup.h

	$(INSTALL) -d $(includedir)/wx
	@# FIXME: This will erroneously install a wx/base dir for wxBase..
	@if test "$(USE_GUI)" = 1; then $(INSTALL) -d $(includedir)/wx/@TOOLKIT_DIR@; fi
	@if test "$(USE_GUI)" = 1; then $(INSTALL) -d $(includedir)/wx/html; fi
	@if test "$(USE_GUI)" = 1; then $(INSTALL) -d $(includedir)/wx/generic; fi
	@if test "$(USE_GUI)" = 1; then $(INSTALL) -d $(includedir)/wx/univ; fi
	@if test "@TOOLKIT_DIR@" = "msw"; then $(INSTALL) -d $(includedir)/wx/msw/ole; fi

	@# always install msw headers for wxBase, it's much simpler
	@if test "$(USE_GUI)" = 0; then $(INSTALL) -d $(includedir)/wx/msw; fi

	$(INSTALL) -d $(includedir)/wx/protocol
	$(INSTALL) -d $(includedir)/wx/unix
	@list='$(HEADERS)'; for p in $$list; do \
	  $(INSTALL_DATA) $(top_srcdir)/include/wx/$$p $(includedir)/wx/$$p; \
	  echo "$(INSTALL_DATA) $(top_srcdir)/include/wx/$$p $(includedir)/wx/$$p"; \
	done

	@if test ! -d $(localedir); then $(INSTALL) -d $(localedir); fi
	@for p in $(WX_LINGUAS); do \
	  if test ! -d $(localedir)/$$p; then $(INSTALL) -d $(localedir)/$$p; fi;\
	  if test ! -d $(localedir)/$$p/LC_MESSAGES; then $(INSTALL) -d $(localedir)/$$p/LC_MESSAGES; fi;\
	  $(INSTALL_DATA) $(top_srcdir)/locale/$$p.mo $(localedir)/$$p/LC_MESSAGES/wxstd.mo; \
	  echo "$(INSTALL_DATA) $(top_srcdir)/locale/$$p.mo $(localedir)/$$p/LC_MESSAGES/wxstd.mo"; \
	done

preinstall_res: $(build_libdir)/@WX_RESOURCES_MACOSX_ASCII@ $(build_libdir)/@WX_RESOURCES_MACOSX_DATA@
	@echo " "
	@echo " Installing wxWindows Mac resource ..."
	@echo " "
	@if test ! -d $(libdir); then $(INSTALL) -d $(libdir); fi
	$(INSTALL_PROGRAM) $(build_libdir)/@WX_RESOURCES_MACOSX_ASCII@ $(libdir)/@WX_RESOURCES_MACOSX_ASCII@
	$(INSTALL_PROGRAM) $(build_libdir)/@WX_RESOURCES_MACOSX_DATA@ $(libdir)/@WX_RESOURCES_MACOSX_DATA@

preinstall_gl: $(build_libdir)/@WX_TARGET_LIBRARY_GL@
	@echo " "
	@echo " Installing wxWindows OpenGl add-on..."
	@echo " "
	@if test ! -d $(libdir); then $(INSTALL) -d $(libdir); fi
	@INSTALL_LIBRARY@ $(build_libdir)/@WX_TARGET_LIBRARY_GL@ $(libdir)/@WX_TARGET_LIBRARY_GL@

install: @AFMINSTALL@ @WX_ALL_INSTALLED@ m4datainstall @WIN32INSTALL@
	@echo " "
	@echo " The installation of wxWindows is finished.  On certain"
	@echo " platforms (e.g. Linux) you'll now have to run ldconfig"
	@echo " if you installed a shared library and also modify the"
	@echo " LD_LIBRARY_PATH (or equivalent) environment variable."
	@echo " "
	@echo " wxWindows comes with no guarantees and doesn't claim"
	@echo " to be suitable for any purpose."
	@echo " "
	@echo " Read the wxWindows Licence on licencing conditions."
	@echo " "

uninstall:
	@echo " "
	@echo " Uninstalling wxWindows..."
	@echo " "
	@echo " Removing library..."
	@$(RM) $(libdir)/@WX_TARGET_LIBRARY@
	@$(RM) $(libdir)/@WX_LIBRARY_LINK1@
	@$(RM) $(libdir)/@WX_LIBRARY_LINK2@
	@echo " Removing GL library..."
	@$(RM) $(libdir)/@WX_TARGET_LIBRARY_GL@
	@$(RM) $(libdir)/@WX_LIBRARY_LINK1_GL@
	@$(RM) $(libdir)/@WX_LIBRARY_LINK2_GL@
	@echo " Removing helper files..."
	@$(RM) $(libdir)/wx/include/@TOOLCHAIN_NAME@/wx/setup.h
	@$(RM) $(bindir)/wx-config
	@$(RM) $(bindir)/wx@TOOLCHAIN_NAME@-config
	@$(RM) $(datadir)/wx/$(VER_MAJMIN)/afm/*
	@$(RM) $(datadir)/wx/$(VER_MAJMIN)/gs_afm/*
	# FIXME: wxBase doesnt install these next 3 dirs.
	@-rmdir $(datadir)/wx/$(VER_MAJMIN)/gs_afm
	@-rmdir $(datadir)/wx/$(VER_MAJMIN)/afm
	@-rmdir $(datadir)/wx/$(VER_MAJMIN)
	@-rmdir $(datadir)/wx
	@echo " Removing headers..."
	@list='$(HEADERS)'; for p in $$list; do \
	  $(RM) $(includedir)/wx/$$p; \
	done
	# TODO: uninstall the files installed by win32install
	@echo " Removing i18n files..."
	@-for p in $(WX_LINGUAS); do \
	  $(RM) $(localedir)/$$p/LC_MESSAGES/wxstd.mo; \
	  rmdir $(localedir)/$$p/LC_MESSAGES; \
	  rmdir $(localedir)/$$p; \
	done
	@echo " Removing directories..."
	@-rmdir $(localedir)
	@if test -d $(libdir)/wx/include/@TOOLCHAIN_NAME@/wx; then rmdir $(libdir)/wx/include/@TOOLCHAIN_NAME@/wx; fi
	@if test -d $(libdir)/wx/include/@TOOLCHAIN_NAME@; then rmdir $(libdir)/wx/include/@TOOLCHAIN_NAME@; fi
	@if test -d $(libdir)/wx/include; then rmdir $(libdir)/wx/include; fi
	@if test -d $(libdir)/wx; then rmdir $(libdir)/wx; fi
	@if test -d $(includedir)/wx/gtk; then rmdir $(includedir)/wx/gtk; fi
	@if test -d $(includedir)/wx/motif; then rmdir $(includedir)/wx/motif; fi
	@if test -d $(includedir)/wx/msw; then rmdir $(includedir)/wx/msw; fi
	@if test -d $(includedir)/wx/html; then rmdir $(includedir)/wx/html; fi
	@if test -d $(includedir)/wx/unix; then rmdir $(includedir)/wx/unix; fi
	@if test -d $(includedir)/wx/univ; then rmdir $(includedir)/wx/univ; fi
	@if test -d $(includedir)/wx/generic; then rmdir $(includedir)/wx/generic; fi
	@if test -d $(includedir)/wx/protocol; then rmdir $(includedir)/wx/protocol; fi
	@if test -d $(includedir)/wx; then rmdir $(includedir)/wx; fi

# this target should copy only the files common to really all ports (including
# wxBase) to the dist dir
ALL_DIST: distclean
	mkdir _dist_dir
	mkdir $(DISTDIR)
	cp $(WXDIR)/wxwin.m4 $(DISTDIR)
	cp $(WXDIR)/aclocal.m4 $(DISTDIR)
	cp $(WXDIR)/config.sub $(DISTDIR)
	cp $(WXDIR)/config.guess $(DISTDIR)
	cp $(WXDIR)/install-sh $(DISTDIR)
	cp $(WXDIR)/mkinstalldirs $(DISTDIR)
	cp $(WXDIR)/wx-config.in $(DISTDIR)
	cp $(WXDIR)/version-script.in $(DISTDIR)
	cp $(WXDIR)/setup.h.in $(DISTDIR)
	cp $(WXDIR)/setup.h_vms $(DISTDIR)
	cp $(WXDIR)/descrip.mms $(DISTDIR)
	cp $(WXDIR)/Makefile.in $(DISTDIR)
	cp $(WXDIR)/wxBase.spec $(DISTDIR)
	cp $(DOCDIR)/lgpl.txt $(DISTDIR)/COPYING.LIB
	cp $(DOCDIR)/licence.txt $(DISTDIR)/LICENCE.txt
	cp $(DOCDIR)/changes.txt $(DISTDIR)/CHANGES.txt
	mkdir $(DISTDIR)/lib
	cp $(WXDIR)/lib/vms.opt $(DISTDIR)/lib
	cp $(WXDIR)/lib/vms_gtk.opt $(DISTDIR)/lib
	mkdir $(DISTDIR)/src
	# temp hack for common/execcmn.cpp: it's not supported by tmake
	# yet (it's a header-like file but in src/common directory and it
	# shouldn't be distributed...)
	mkdir $(DISTDIR)/src/common
	cp $(SRCDIR)/common/execcmn.cpp $(DISTDIR)/src/common
	mkdir $(DISTDIR)/src/zlib
	cp $(ZLIBDIR)/*.h $(DISTDIR)/src/zlib
	cp $(ZLIBDIR)/*.c $(DISTDIR)/src/zlib
	cp $(ZLIBDIR)/README $(DISTDIR)/src/zlib
	cp $(ZLIBDIR)/*.mms $(DISTDIR)/src/zlib
	mkdir $(DISTDIR)/src/regex
	cp $(REGEXDIR)/*.h $(DISTDIR)/src/regex
	cp $(REGEXDIR)/*.ih $(DISTDIR)/src/regex
	cp $(REGEXDIR)/*.c $(DISTDIR)/src/regex
	cp $(REGEXDIR)/Makefile $(DISTDIR)/src/regex
	cp $(REGEXDIR)/makefile.* $(DISTDIR)/src/regex
	cp $(REGEXDIR)/COPYRIGHT $(DISTDIR)/src/regex
	cp $(REGEXDIR)/README $(DISTDIR)/src/regex
	cp $(REGEXDIR)/WHATSNEW $(DISTDIR)/src/regex
	cp $(REGEXDIR)/mkh $(DISTDIR)/src/regex
	cp $(REGEXDIR)/tests $(DISTDIR)/src/regex

# this target is the common part of distribution script for all GUI toolkits,
# but is not used when building wxBase distribution
ALL_GUI_DIST: ALL_DIST
	cp $(WXDIR)/configure.in $(DISTDIR)
	cp $(WXDIR)/configure $(DISTDIR)
	cp $(DOCDIR)/readme.txt $(DISTDIR)/README.txt
	cp $(DOCDIR)/$(TOOLKITDIR)/install.txt $(DISTDIR)/INSTALL.txt
	if test -f $(DOCDIR)/$(TOOLKITDIR)/changes.txt ; then \
	  cp $(DOCDIR)/$(TOOLKITDIR)/changes.txt $(DISTDIR)/CHANGES-$(TOOLKIT).txt ; fi
	cp $(DOCDIR)/$(TOOLKITDIR)/readme.txt $(DISTDIR)/README-$(TOOLKIT).txt
	if test -f $(DOCDIR)/$(TOOLKITDIR)/todo.txt ; then \
	  cp $(DOCDIR)/$(TOOLKITDIR)/todo.txt $(DISTDIR)/TODO.txt ; fi
	mkdir $(DISTDIR)/include
	mkdir $(DISTDIR)/include/wx
	mkdir $(DISTDIR)/include/wx/$(TOOLKITDIR)
	mkdir $(DISTDIR)/include/wx/generic
	mkdir $(DISTDIR)/include/wx/html
	mkdir $(DISTDIR)/include/wx/protocol
	mkdir $(DISTDIR)/include/wx/unix
	cp $(INCDIR)/wx/*.h $(DISTDIR)/include/wx
	cp $(INCDIR)/wx/*.inl $(DISTDIR)/include/wx
	cp $(INCDIR)/wx/*.cpp $(DISTDIR)/include/wx
	cp $(INCDIR)/wx/generic/*.h $(DISTDIR)/include/wx/generic
	cp $(INCDIR)/wx/html/*.h $(DISTDIR)/include/wx/html
	cp $(INCDIR)/wx/unix/*.h $(DISTDIR)/include/wx/unix
	cp $(INCDIR)/wx/protocol/*.h $(DISTDIR)/include/wx/protocol
	mkdir $(DISTDIR)/art
	mkdir $(DISTDIR)/art/gtk
	mkdir $(DISTDIR)/art/motif
	cp $(WXDIR)/art/*.xpm $(DISTDIR)/art
	cp $(WXDIR)/art/gtk/*.xpm $(DISTDIR)/art/gtk
	cp $(WXDIR)/art/motif/*.xpm $(DISTDIR)/art/motif
	mkdir $(DISTDIR)/src/generic
	mkdir $(DISTDIR)/src/html
	mkdir $(DISTDIR)/src/$(TOOLKITDIR)
	mkdir $(DISTDIR)/src/png
	mkdir $(DISTDIR)/src/jpeg
	mkdir $(DISTDIR)/src/tiff
	mkdir $(DISTDIR)/src/iodbc
	mkdir $(DISTDIR)/src/unix
	cp $(SRCDIR)/*.in $(DISTDIR)/src
	cp $(COMMDIR)/*.cpp $(DISTDIR)/src/common
	cp $(COMMDIR)/*.c $(DISTDIR)/src/common
	cp $(COMMDIR)/*.inc $(DISTDIR)/src/common
	cp $(COMMDIR)/*.l $(DISTDIR)/src/common
	cp $(COMMDIR)/*.h $(DISTDIR)/src/common
	cp $(COMMDIR)/*.y $(DISTDIR)/src/common
	cp $(COMMDIR)/*.mms $(DISTDIR)/src/common
	cp $(UNIXDIR)/*.c $(DISTDIR)/src/unix
	cp $(UNIXDIR)/*.cpp $(DISTDIR)/src/unix
	cp $(UNIXDIR)/*.mms $(DISTDIR)/src/unix
	cp $(GENDIR)/*.cpp $(DISTDIR)/src/generic
	cp $(GENDIR)/*.mms $(DISTDIR)/src/generic
	cp $(HTMLDIR)/*.cpp $(DISTDIR)/src/html
	cp $(PNGDIR)/*.h $(DISTDIR)/src/png
	cp $(PNGDIR)/*.c $(DISTDIR)/src/png
	cp $(PNGDIR)/README $(DISTDIR)/src/png
	cp $(JPEGDIR)/*.h $(DISTDIR)/src/jpeg
	cp $(JPEGDIR)/*.c $(DISTDIR)/src/jpeg
	cp $(JPEGDIR)/README $(DISTDIR)/src/jpeg
	cp $(TIFFDIR)/*.h $(DISTDIR)/src/tiff
	cp $(TIFFDIR)/*.c $(DISTDIR)/src/tiff
	cp $(TIFFDIR)/README $(DISTDIR)/src/tiff
	cp $(ODBCDIR)/*.h $(DISTDIR)/src/iodbc
	cp $(ODBCDIR)/*.c $(DISTDIR)/src/iodbc
	cp $(ODBCDIR)/*.ci $(DISTDIR)/src/iodbc
	cp $(ODBCDIR)/*.exp $(DISTDIR)/src/iodbc
	cp $(ODBCDIR)/README $(DISTDIR)/src/iodbc
	cp $(ODBCDIR)/NEWS $(DISTDIR)/src/iodbc
	cp $(ODBCDIR)/Changes.log $(DISTDIR)/src/iodbc

BASE_DIST: ALL_DIST
	# make --disable-gui the default
	sed 's/DEFAULT_wxUSE_GUI=yes/DEFAULT_wxUSE_GUI=no/' \
		$(WXDIR)/configure.in > $(DISTDIR)/configure.in
	sed 's/DEFAULT_wxUSE_GUI=yes/DEFAULT_wxUSE_GUI=no/' \
		$(WXDIR)/configure > $(DISTDIR)/configure
	chmod +x $(DISTDIR)/configure
	mkdir $(DISTDIR)/include
	mkdir $(DISTDIR)/include/wx
	mkdir $(DISTDIR)/include/wx/protocol
	mkdir $(DISTDIR)/include/wx/unix
	mkdir $(DISTDIR)/include/wx/msw
	mkdir $(DISTDIR)/src/unix
	mkdir $(DISTDIR)/src/msw
	cp @PORT_FILES@ $(DISTDIR)
	cp $(WXDIR)/src/wxBase*.dsp $(DISTDIR)
	cp $(WXDIR)/src/wxBase*.dsw $(DISTDIR)
	cp $(DOCDIR)/changes.txt $(DISTDIR)/CHANGES.txt
	cp $(DOCDIR)/base/readme.txt $(DISTDIR)/README.txt
	cp $(SRCDIR)/*.in $(DISTDIR)/src
	cp $(SRCDIR)/files.lst $(DISTDIR)/src
	cp $(WXDIR)/src/common/*.inc $(DISTDIR)/src/common
	cp $(WXDIR)/src/common/base.rc $(DISTDIR)/src/common
	cp $(WXDIR)/src/common/unzip.h $(DISTDIR)/src/common
	list='$(HEADERS)'; for p in $$list; do \
	  cp $(WXDIR)/include/wx/$$p $(DISTDIR)/include/wx/$$p; \
	done
	list='$(SOURCES)'; for p in $$list; do \
	  cp $(WXDIR)/src/$$p $(DISTDIR)/src/$$p; \
	done

	mkdir $(DISTDIR)/samples
	cp $(SAMPDIR)/Makefile.in $(DISTDIR)/samples
	cp $(SAMPDIR)/configure $(DISTDIR)/samples
	cp $(SAMPDIR)/configure.in $(DISTDIR)/samples

	mkdir $(DISTDIR)/samples/console
	cp $(SAMPDIR)/console/Makefile.in $(DISTDIR)/samples/console
	cp $(SAMPDIR)/console/makefile.unx $(DISTDIR)/samples/console
	cp $(SAMPDIR)/console/console.cpp $(DISTDIR)/samples/console
	cp $(SAMPDIR)/console/console.dsp $(DISTDIR)/samples/console
	cp $(SAMPDIR)/console/testdata.fc $(DISTDIR)/samples/console

GTK_DIST: ALL_GUI_DIST
	cp $(WXDIR)/wxGTK.spec $(DISTDIR)
	cp $(INCDIR)/wx/gtk/*.h $(DISTDIR)/include/wx/gtk
	cp $(GTKDIR)/files.lst $(DISTDIR)/src/gtk
	cp $(GTKDIR)/*.cpp $(DISTDIR)/src/gtk
	cp $(GTKDIR)/*.c $(DISTDIR)/src/gtk
	cp $(GTKDIR)/*.xbm $(DISTDIR)/src/gtk
	cp $(GTKDIR)/*.mms $(DISTDIR)/src/gtk
	mkdir $(DISTDIR)/contrib
	cp -R $(WXDIR)/contrib $(DISTDIR)

X11_DIST: ALL_GUI_DIST UNIV_DIST
	cp $(WXDIR)/wxX11.spec $(DISTDIR)
	cp $(INCDIR)/wx/x11/*.h $(DISTDIR)/include/wx/x11
	cp $(X11DIR)/files.lst $(DISTDIR)/src/x11
	cp $(X11DIR)/*.cpp $(DISTDIR)/src/x11
	cp $(X11DIR)/*.c $(DISTDIR)/src/x11
	cp $(X11DIR)/*.xbm $(DISTDIR)/src/x11
	mkdir $(DISTDIR)/contrib
	cp -R $(WXDIR)/contrib $(DISTDIR)

MOTIF_DIST: ALL_GUI_DIST
	cp $(WXDIR)/wxMotif.spec $(DISTDIR)
	cp $(INCDIR)/wx/motif/*.h $(DISTDIR)/include/wx/motif
	cp $(MOTIFDIR)/files.lst $(DISTDIR)/src/motif
	cp $(MOTIFDIR)/*.cpp $(DISTDIR)/src/motif
	cp $(MOTIFDIR)/*.c $(DISTDIR)/src/motif
	cp $(MOTIFDIR)/*.xbm $(DISTDIR)/src/motif
	mkdir $(DISTDIR)/src/motif/xmcombo
	cp $(MOTIFDIR)/xmcombo/*.c $(DISTDIR)/src/motif/xmcombo
	cp $(MOTIFDIR)/xmcombo/*.h $(DISTDIR)/src/motif/xmcombo
	cp $(MOTIFDIR)/xmcombo/copying.txt $(DISTDIR)/src/motif/xmcombo

MACX_DIST: ALL_GUI_DIST
	cp $(INCDIR)/*.* $(DISTDIR)/include
	cp $(INCDIR)/wx/mac/*.h $(DISTDIR)/include/wx/mac
	cp $(MACDIR)/files.lst $(DISTDIR)/src/mac
	cp $(MACDIR)/*.cpp $(DISTDIR)/src/mac
	cp $(MACDIR)/*.c $(DISTDIR)/src/mac
	cp $(MACDIR)/*.h $(DISTDIR)/src/mac
	cp $(MACDIR)/*.r $(DISTDIR)/src/mac
	mkdir $(DISTDIR)/src/mac/morefile
	cp $(MACDIR)/morefile/*.h $(DISTDIR)/src/mac/morefile
	cp $(MACDIR)/morefile/*.c $(DISTDIR)/src/mac/morefile
	mkdir $(DISTDIR)/src/mac/macsock
	cp $(MACDIR)/macsock/*.lib $(DISTDIR)/src/mac/macsock

MSW_DIST: ALL_GUI_DIST
	cp $(WXDIR)/wxWINE.spec $(DISTDIR)
	mkdir $(DISTDIR)/include/wx/msw/ctl3d
	mkdir $(DISTDIR)/include/wx/msw/gnuwin32
	mkdir $(DISTDIR)/include/wx/msw/gnuwin32/gl
	mkdir $(DISTDIR)/include/wx/msw/ole
	cp $(INCDIR)/wx/msw/*.h $(DISTDIR)/include/wx/msw
	cp $(INCDIR)/wx/msw/*.cur $(DISTDIR)/include/wx/msw
	cp $(INCDIR)/wx/msw/*.ico $(DISTDIR)/include/wx/msw
	cp $(INCDIR)/wx/msw/*.bmp $(DISTDIR)/include/wx/msw
	cp $(INCDIR)/wx/msw/*.rc $(DISTDIR)/include/wx/msw
	cp $(INCDIR)/wx/msw/ctl3d/*.h $(DISTDIR)/include/wx/msw/ctl3d
	cp $(INCDIR)/wx/msw/gnuwin32/*.h $(DISTDIR)/include/wx/msw/gnuwin32
	cp $(INCDIR)/wx/msw/gnuwin32/gl/*.h $(DISTDIR)/include/wx/msw/gnuwin32/gl
	cp $(INCDIR)/wx/msw/gnuwin32/gl/*.def $(DISTDIR)/include/wx/msw/gnuwin32/gl
	cp $(INCDIR)/wx/msw/ole/*.h $(DISTDIR)/include/wx/msw/ole
	mkdir $(DISTDIR)/src/msw/ole
	cp $(MSWDIR)/files.lst $(DISTDIR)/src/msw
	cp $(MSWDIR)/*.cpp $(DISTDIR)/src/msw
	cp $(MSWDIR)/*.c $(DISTDIR)/src/msw
	cp $(MSWDIR)/*.def $(DISTDIR)/src/msw
	cp $(MSWDIR)/ole/*.cpp $(DISTDIR)/src/msw/ole

MSW_ZIP_TEXT_DIST: ALL_GUI_DIST
	cp $(WXDIR)/wxWINE.spec $(DISTDIR)
	mkdir $(DISTDIR)/include/wx/msw
	mkdir $(DISTDIR)/include/wx/msw/ctl3d
	mkdir $(DISTDIR)/include/wx/msw/gnuwin32
	mkdir $(DISTDIR)/include/wx/msw/gnuwin32/gl
	mkdir $(DISTDIR)/include/wx/msw/ole
	cp $(INCDIR)/wx/msw/*.h $(DISTDIR)/include/wx/msw
	cp $(INCDIR)/wx/msw/*.rc $(DISTDIR)/include/wx/msw
	cp $(INCDIR)/wx/msw/ctl3d/*.h $(DISTDIR)/include/wx/msw/ctl3d
	cp $(INCDIR)/wx/msw/gnuwin32/*.h $(DISTDIR)/include/wx/msw/gnuwin32
	cp $(INCDIR)/wx/msw/gnuwin32/gl/*.h $(DISTDIR)/include/wx/msw/gnuwin32/gl
	cp $(INCDIR)/wx/msw/gnuwin32/gl/*.def $(DISTDIR)/include/wx/msw/gnuwin32/gl
	cp $(INCDIR)/wx/msw/ole/*.h $(DISTDIR)/include/wx/msw/ole
	mkdir $(DISTDIR)/src/msw
	mkdir $(DISTDIR)/src/msw/ole
	cp $(MSWDIR)/files.lst $(DISTDIR)/src/msw
	cp $(MSWDIR)/*.cpp $(DISTDIR)/src/msw
	cp $(MSWDIR)/*.c $(DISTDIR)/src/msw
	cp $(MSWDIR)/*.def $(DISTDIR)/src/msw
	cp $(MSWDIR)/ole/*.cpp $(DISTDIR)/src/msw/ole
	cp $(SRCDIR)/*.??? $(DISTDIR)/src
	cp $(SRCDIR)/*.?? $(DISTDIR)/src
	cp $(MSWDIR)/?ake*.* $(DISTDIR)/src/msw
	mkdir $(DISTDIR)/contrib
	cp -R $(WXDIR)/contrib $(DISTDIR)

UNIV_DIST: ALL_GUI_DIST
	mkdir $(DISTDIR)/include/wx/univ
	mkdir $(DISTDIR)/src/univ
	mkdir $(DISTDIR)/src/univ/themes
	cp $(INCDIR)/wx/univ/*.h $(DISTDIR)/include/wx/univ
	cp $(INCDIR)/wx/univ/setup0.h $(DISTDIR)/include/wx/univ/setup.h
	cp $(SRCDIR)/univ/files.lst $(DISTDIR)/src/univ
	cp $(SRCDIR)/univ/*.cpp $(DISTDIR)/src/univ
	cp $(SRCDIR)/univ/themes/*.cpp $(DISTDIR)/src/univ/themes

MGL_DIST: UNIV_DIST
	cp $(WXDIR)/wxMGL.spec $(DISTDIR)
	cp $(INCDIR)/wx/mgl/*.h $(DISTDIR)/include/wx/mgl
	cp $(SRCDIR)/mgl/files.lst $(DISTDIR)/src/mgl
	cp $(SRCDIR)/mgl/make* $(DISTDIR)/src/mgl
	cp $(SRCDIR)/mgl/*.cpp $(DISTDIR)/src/mgl
	mkdir $(DISTDIR)/contrib
	cp -R $(WXDIR)/contrib $(DISTDIR)

DEMOS_DIST: ALL_GUI_DIST
	mkdir $(DISTDIR)/demos
	cp $(DEMODIR)/Makefile.in $(DISTDIR)/demos
	cp $(DEMODIR)/configure $(DISTDIR)/demos
	cp $(DEMODIR)/configure.in $(DISTDIR)/demos

	mkdir $(DISTDIR)/demos/bombs
	cp $(DEMODIR)/bombs/Makefile.in $(DISTDIR)/demos/bombs
	cp $(DEMODIR)/bombs/makefile.unx $(DISTDIR)/demos/bombs
	cp $(DEMODIR)/bombs/*.cpp $(DISTDIR)/demos/bombs
	cp $(DEMODIR)/bombs/*.h $(DISTDIR)/demos/bombs
	cp $(DEMODIR)/bombs/*.xpm $(DISTDIR)/demos/bombs
	cp $(DEMODIR)/bombs/readme.txt $(DISTDIR)/demos/bombs

	cp -R $(DEMODIR)/dbbrowse $(DISTDIR)/demos/dbbrowse

	mkdir $(DISTDIR)/demos/forty
	cp $(DEMODIR)/forty/Makefile.in $(DISTDIR)/demos/forty
	cp $(DEMODIR)/forty/makefile.unx $(DISTDIR)/demos/forty
	cp $(DEMODIR)/forty/*.h $(DISTDIR)/demos/forty
	cp $(DEMODIR)/forty/*.cpp $(DISTDIR)/demos/forty
	cp $(DEMODIR)/forty/*.xpm $(DISTDIR)/demos/forty
	cp $(DEMODIR)/forty/*.xbm $(DISTDIR)/demos/forty

	mkdir $(DISTDIR)/demos/life
	mkdir $(DISTDIR)/demos/life/bitmaps
	cp $(DEMODIR)/life/Makefile.in $(DISTDIR)/demos/life
	cp $(DEMODIR)/life/makefile.unx $(DISTDIR)/demos/life
	cp $(DEMODIR)/life/*.cpp $(DISTDIR)/demos/life
	cp $(DEMODIR)/life/*.h $(DISTDIR)/demos/life
	cp $(DEMODIR)/life/*.xpm $(DISTDIR)/demos/life
	cp $(DEMODIR)/life/*.inc $(DISTDIR)/demos/life
	cp $(DEMODIR)/life/*.lif $(DISTDIR)/demos/life
	cp $(DEMODIR)/life/bitmaps/*.xpm $(DISTDIR)/demos/life/bitmaps

	mkdir $(DISTDIR)/demos/poem
	cp $(DEMODIR)/poem/Makefile.in $(DISTDIR)/demos/poem
	cp $(DEMODIR)/poem/makefile.unx $(DISTDIR)/demos/poem
	cp $(DEMODIR)/poem/*.h $(DISTDIR)/demos/poem
	cp $(DEMODIR)/poem/*.cpp $(DISTDIR)/demos/poem
	cp $(DEMODIR)/poem/*.xpm $(DISTDIR)/demos/poem
	cp $(DEMODIR)/poem/*.dat $(DISTDIR)/demos/poem
	cp $(DEMODIR)/poem/*.txt $(DISTDIR)/demos/poem

	mkdir $(DISTDIR)/demos/fractal
	cp $(DEMODIR)/fractal/Makefile.in $(DISTDIR)/demos/fractal
	cp $(DEMODIR)/fractal/makefile.unx $(DISTDIR)/demos/fractal
	cp $(DEMODIR)/fractal/*.cpp $(DISTDIR)/demos/fractal

SAMPLES_DIST: ALL_GUI_DIST
	mkdir $(DISTDIR)/samples
	cp $(SAMPDIR)/Makefile.in $(DISTDIR)/samples
	cp $(SAMPDIR)/configure $(DISTDIR)/samples
	cp $(SAMPDIR)/configure.in $(DISTDIR)/samples

	mkdir $(DISTDIR)/samples/artprov
	cp $(SAMPDIR)/artprov/Makefile.in $(DISTDIR)/samples/artprov
	cp $(SAMPDIR)/artprov/makefile.unx $(DISTDIR)/samples/artprov
	cp $(SAMPDIR)/artprov/*.cpp $(DISTDIR)/samples/artprov
	cp $(SAMPDIR)/artprov/*.h $(DISTDIR)/samples/artprov
	cp $(SAMPDIR)/artprov/*.xpm $(DISTDIR)/samples/artprov

	mkdir $(DISTDIR)/samples/calendar
	cp $(SAMPDIR)/calendar/Makefile.in $(DISTDIR)/samples/calendar
	cp $(SAMPDIR)/calendar/makefile.unx $(DISTDIR)/samples/calendar
	cp $(SAMPDIR)/calendar/*.cpp $(DISTDIR)/samples/calendar

	mkdir $(DISTDIR)/samples/caret
	cp $(SAMPDIR)/caret/Makefile.in $(DISTDIR)/samples/caret
	cp $(SAMPDIR)/caret/makefile.unx $(DISTDIR)/samples/caret
	cp $(SAMPDIR)/caret/*.cpp $(DISTDIR)/samples/caret
	cp $(SAMPDIR)/caret/*.xpm $(DISTDIR)/samples/caret

	mkdir $(DISTDIR)/samples/checklst
	cp $(SAMPDIR)/checklst/Makefile.in $(DISTDIR)/samples/checklst
	cp $(SAMPDIR)/checklst/makefile.unx $(DISTDIR)/samples/checklst
	cp $(SAMPDIR)/checklst/*.cpp $(DISTDIR)/samples/checklst
	cp $(SAMPDIR)/checklst/*.xpm $(DISTDIR)/samples/checklst
	cp $(SAMPDIR)/checklst/*.mms $(DISTDIR)/samples/checklst

	mkdir $(DISTDIR)/samples/config
	cp $(SAMPDIR)/config/Makefile.in $(DISTDIR)/samples/config
	cp $(SAMPDIR)/config/makefile.unx $(DISTDIR)/samples/config
	cp $(SAMPDIR)/config/*.cpp $(DISTDIR)/samples/config

	mkdir $(DISTDIR)/samples/console
	cp $(SAMPDIR)/console/Makefile.in $(DISTDIR)/samples/console
	cp $(SAMPDIR)/console/makefile.unx $(DISTDIR)/samples/console
	cp $(SAMPDIR)/console/*.cpp $(DISTDIR)/samples/console

	mkdir $(DISTDIR)/samples/controls
	mkdir $(DISTDIR)/samples/controls/icons
	cp $(SAMPDIR)/controls/Makefile.in $(DISTDIR)/samples/controls
	cp $(SAMPDIR)/controls/makefile.unx $(DISTDIR)/samples/controls
	cp $(SAMPDIR)/controls/*.cpp $(DISTDIR)/samples/controls
	cp $(SAMPDIR)/controls/*.xpm $(DISTDIR)/samples/controls
	cp $(SAMPDIR)/controls/*.mms $(DISTDIR)/samples/controls
	cp $(SAMPDIR)/controls/icons/*.??? $(DISTDIR)/samples/controls/icons

	mkdir $(DISTDIR)/samples/db
	cp $(SAMPDIR)/db/Makefile.in $(DISTDIR)/samples/db
	cp $(SAMPDIR)/db/makefile.unx $(DISTDIR)/samples/db
	cp $(SAMPDIR)/db/*.cpp $(DISTDIR)/samples/db
	cp $(SAMPDIR)/db/*.h $(DISTDIR)/samples/db
	cp $(SAMPDIR)/db/*.xpm $(DISTDIR)/samples/db

	mkdir $(DISTDIR)/samples/dialogs
	cp $(SAMPDIR)/dialogs/Makefile.in $(DISTDIR)/samples/dialogs
	cp $(SAMPDIR)/dialogs/makefile.unx $(DISTDIR)/samples/dialogs
	cp $(SAMPDIR)/dialogs/*.cpp $(DISTDIR)/samples/dialogs
	cp $(SAMPDIR)/dialogs/*.h $(DISTDIR)/samples/dialogs
	cp $(SAMPDIR)/dialogs/*.txt $(DISTDIR)/samples/dialogs
	cp $(SAMPDIR)/dialogs/*.mms $(DISTDIR)/samples/dialogs

	mkdir $(DISTDIR)/samples/dnd
	cp $(SAMPDIR)/dnd/Makefile.in $(DISTDIR)/samples/dnd
	cp $(SAMPDIR)/dnd/makefile.unx $(DISTDIR)/samples/dnd
	cp $(SAMPDIR)/dnd/*.wxr $(DISTDIR)/samples/dnd
	cp $(SAMPDIR)/dnd/*.cpp $(DISTDIR)/samples/dnd
	cp $(SAMPDIR)/dnd/*.xpm $(DISTDIR)/samples/dnd
	cp $(SAMPDIR)/dnd/*.txt $(DISTDIR)/samples/dnd
	cp $(SAMPDIR)/dnd/*.png $(DISTDIR)/samples/dnd

	mkdir $(DISTDIR)/samples/docview
	cp $(SAMPDIR)/docview/Makefile.in $(DISTDIR)/samples/docview
	cp $(SAMPDIR)/docview/makefile.unx $(DISTDIR)/samples/docview
	cp $(SAMPDIR)/docview/*.cpp $(DISTDIR)/samples/docview
	cp $(SAMPDIR)/docview/*.h $(DISTDIR)/samples/docview
	cp $(SAMPDIR)/docview/*.xpm $(DISTDIR)/samples/docview

	mkdir $(DISTDIR)/samples/docvwmdi
	cp $(SAMPDIR)/docvwmdi/Makefile.in $(DISTDIR)/samples/docvwmdi
	cp $(SAMPDIR)/docvwmdi/makefile.unx $(DISTDIR)/samples/docvwmdi
	cp $(SAMPDIR)/docvwmdi/*.cpp $(DISTDIR)/samples/docvwmdi
	cp $(SAMPDIR)/docvwmdi/*.h $(DISTDIR)/samples/docvwmdi

	mkdir $(DISTDIR)/samples/dragimag
	cp $(SAMPDIR)/dragimag/Makefile.in $(DISTDIR)/samples/dragimag
	cp $(SAMPDIR)/dragimag/makefile.unx $(DISTDIR)/samples/dragimag
	cp $(SAMPDIR)/dragimag/*.cpp $(DISTDIR)/samples/dragimag
	cp $(SAMPDIR)/dragimag/*.h $(DISTDIR)/samples/dragimag
	cp $(SAMPDIR)/dragimag/*.xpm $(DISTDIR)/samples/dragimag
	cp $(SAMPDIR)/dragimag/*.png $(DISTDIR)/samples/dragimag

	mkdir $(DISTDIR)/samples/drawing
	cp $(SAMPDIR)/drawing/Makefile.in $(DISTDIR)/samples/drawing
	cp $(SAMPDIR)/drawing/makefile.unx $(DISTDIR)/samples/drawing
	cp $(SAMPDIR)/drawing/*.cpp $(DISTDIR)/samples/drawing
	cp $(SAMPDIR)/drawing/*.xpm $(DISTDIR)/samples/drawing
	cp $(SAMPDIR)/drawing/*.bmp $(DISTDIR)/samples/drawing

	mkdir $(DISTDIR)/samples/dynamic
	cp $(SAMPDIR)/dynamic/Makefile.in $(DISTDIR)/samples/dynamic
	cp $(SAMPDIR)/dynamic/makefile.unx $(DISTDIR)/samples/dynamic
	cp $(SAMPDIR)/dynamic/*.cpp $(DISTDIR)/samples/dynamic
	cp $(SAMPDIR)/dynamic/*.xpm $(DISTDIR)/samples/dynamic

	mkdir $(DISTDIR)/samples/erase
	cp $(SAMPDIR)/erase/Makefile.in $(DISTDIR)/samples/erase
	cp $(SAMPDIR)/erase/makefile.unx $(DISTDIR)/samples/erase
	cp $(SAMPDIR)/erase/*.cpp $(DISTDIR)/samples/erase

	mkdir $(DISTDIR)/samples/event
	cp $(SAMPDIR)/event/Makefile.in $(DISTDIR)/samples/event
	cp $(SAMPDIR)/event/makefile.unx $(DISTDIR)/samples/event
	cp $(SAMPDIR)/event/*.cpp $(DISTDIR)/samples/event

	mkdir $(DISTDIR)/samples/exec
	cp $(SAMPDIR)/exec/Makefile.in $(DISTDIR)/samples/exec
	cp $(SAMPDIR)/exec/makefile.unx $(DISTDIR)/samples/exec
	cp $(SAMPDIR)/exec/*.cpp $(DISTDIR)/samples/exec

	mkdir $(DISTDIR)/samples/font
	cp $(SAMPDIR)/font/Makefile.in $(DISTDIR)/samples/font
	cp $(SAMPDIR)/font/makefile.unx $(DISTDIR)/samples/font
	cp $(SAMPDIR)/font/*.cpp $(DISTDIR)/samples/font

	mkdir $(DISTDIR)/samples/grid
	cp $(SAMPDIR)/grid/Makefile.in $(DISTDIR)/samples/grid
	cp $(SAMPDIR)/grid/makefile.unx $(DISTDIR)/samples/grid
	cp $(SAMPDIR)/grid/*.cpp $(DISTDIR)/samples/grid

	mkdir $(DISTDIR)/samples/help
	mkdir $(DISTDIR)/samples/help/doc
	cp $(SAMPDIR)/help/Makefile.in $(DISTDIR)/samples/help
	cp $(SAMPDIR)/help/makefile.unx $(DISTDIR)/samples/help
	cp $(SAMPDIR)/help/*.cpp $(DISTDIR)/samples/help
	cp $(SAMPDIR)/help/*.xpm $(DISTDIR)/samples/help
	cp $(SAMPDIR)/help/doc/*.* $(DISTDIR)/samples/help/doc

	mkdir $(DISTDIR)/samples/html
	cp $(SAMPDIR)/html/Makefile.in $(DISTDIR)/samples/html
	mkdir $(DISTDIR)/samples/html/about
	cp $(SAMPDIR)/html/about/Makefile.in $(DISTDIR)/samples/html/about
	cp $(SAMPDIR)/html/about/*.cpp $(DISTDIR)/samples/html/about
	mkdir $(DISTDIR)/samples/html/about/data
	cp $(SAMPDIR)/html/about/data/*.htm $(DISTDIR)/samples/html/about/data
	cp $(SAMPDIR)/html/about/data/*.png $(DISTDIR)/samples/html/about/data
	mkdir $(DISTDIR)/samples/html/help
	cp $(SAMPDIR)/html/help/Makefile.in $(DISTDIR)/samples/html/help
	cp $(SAMPDIR)/html/help/*.cpp $(DISTDIR)/samples/html/help
	mkdir $(DISTDIR)/samples/html/help/helpfiles
	cp $(SAMPDIR)/html/help/helpfiles/*.??? $(DISTDIR)/samples/html/help/helpfiles
	mkdir $(DISTDIR)/samples/html/helpview
	cp $(SAMPDIR)/html/helpview/Makefile.in $(DISTDIR)/samples/html/helpview
	cp $(SAMPDIR)/html/helpview/*.cpp $(DISTDIR)/samples/html/helpview
	cp $(SAMPDIR)/html/helpview/*.zip $(DISTDIR)/samples/html/helpview
	mkdir $(DISTDIR)/samples/html/printing
	cp $(SAMPDIR)/html/printing/Makefile.in $(DISTDIR)/samples/html/printing
	cp $(SAMPDIR)/html/printing/*.cpp $(DISTDIR)/samples/html/printing
	cp $(SAMPDIR)/html/printing/*.htm $(DISTDIR)/samples/html/printing
	mkdir $(DISTDIR)/samples/html/test
	cp $(SAMPDIR)/html/test/Makefile.in $(DISTDIR)/samples/html/test
	cp $(SAMPDIR)/html/test/*.cpp $(DISTDIR)/samples/html/test
	cp $(SAMPDIR)/html/test/*.bmp $(DISTDIR)/samples/html/test
	cp $(SAMPDIR)/html/test/*.png $(DISTDIR)/samples/html/test
	cp $(SAMPDIR)/html/test/*.gif $(DISTDIR)/samples/html/test
	cp $(SAMPDIR)/html/test/*.htm $(DISTDIR)/samples/html/test
	cp $(SAMPDIR)/html/test/*.html $(DISTDIR)/samples/html/test
	mkdir $(DISTDIR)/samples/html/virtual
	cp $(SAMPDIR)/html/virtual/Makefile.in $(DISTDIR)/samples/html/virtual
	cp $(SAMPDIR)/html/virtual/*.cpp $(DISTDIR)/samples/html/virtual
	cp $(SAMPDIR)/html/virtual/*.htm $(DISTDIR)/samples/html/virtual
	mkdir $(DISTDIR)/samples/html/widget
	cp $(SAMPDIR)/html/widget/Makefile.in $(DISTDIR)/samples/html/widget
	cp $(SAMPDIR)/html/widget/*.cpp $(DISTDIR)/samples/html/widget
	cp $(SAMPDIR)/html/widget/*.htm $(DISTDIR)/samples/html/widget
	mkdir $(DISTDIR)/samples/html/zip
	cp $(SAMPDIR)/html/zip/Makefile.in $(DISTDIR)/samples/html/zip
	cp $(SAMPDIR)/html/zip/*.cpp $(DISTDIR)/samples/html/zip
	cp $(SAMPDIR)/html/zip/*.htm $(DISTDIR)/samples/html/zip
	cp $(SAMPDIR)/html/zip/*.zip $(DISTDIR)/samples/html/zip

	mkdir $(DISTDIR)/samples/image
	cp $(SAMPDIR)/image/Makefile.in $(DISTDIR)/samples/image
	cp $(SAMPDIR)/image/makefile.unx $(DISTDIR)/samples/image
	cp $(SAMPDIR)/image/*.cpp $(DISTDIR)/samples/image
	cp $(SAMPDIR)/image/*.mms $(DISTDIR)/samples/image
	cp $(SAMPDIR)/image/horse*.* $(DISTDIR)/samples/image
	cp $(SAMPDIR)/image/smile.xbm $(DISTDIR)/samples/image
	cp $(SAMPDIR)/image/smile.xpm $(DISTDIR)/samples/image

	mkdir $(DISTDIR)/samples/internat
	mkdir $(DISTDIR)/samples/internat/de
	mkdir $(DISTDIR)/samples/internat/fr
	mkdir $(DISTDIR)/samples/internat/ru
	cp $(SAMPDIR)/internat/Makefile.in $(DISTDIR)/samples/internat
	cp $(SAMPDIR)/internat/makefile.unx $(DISTDIR)/samples/internat
	cp $(SAMPDIR)/internat/*.cpp $(DISTDIR)/samples/internat
	cp $(SAMPDIR)/internat/*.xpm $(DISTDIR)/samples/internat
	cp $(SAMPDIR)/internat/*.txt $(DISTDIR)/samples/internat
	cp $(SAMPDIR)/internat/*.po $(DISTDIR)/samples/internat
	cp $(SAMPDIR)/internat/fr/*.mo $(DISTDIR)/samples/internat/fr
	cp $(SAMPDIR)/internat/de/*.mo $(DISTDIR)/samples/internat/de
	cp $(SAMPDIR)/internat/ru/*.mo $(DISTDIR)/samples/internat/ru
	cp $(SAMPDIR)/internat/fr/*.po $(DISTDIR)/samples/internat/fr
	cp $(SAMPDIR)/internat/de/*.po $(DISTDIR)/samples/internat/de
	cp $(SAMPDIR)/internat/ru/*.po $(DISTDIR)/samples/internat/ru

	mkdir $(DISTDIR)/samples/ipc
	cp $(SAMPDIR)/ipc/Makefile.in $(DISTDIR)/samples/ipc
	cp $(SAMPDIR)/ipc/makefile.unx $(DISTDIR)/samples/ipc
	cp $(SAMPDIR)/ipc/*.cpp $(DISTDIR)/samples/ipc
	cp $(SAMPDIR)/ipc/*.h $(DISTDIR)/samples/ipc
	cp $(SAMPDIR)/ipc/*.xpm $(DISTDIR)/samples/ipc

	mkdir $(DISTDIR)/samples/joytest
	cp $(SAMPDIR)/joytest/Makefile.in $(DISTDIR)/samples/joytest
	cp $(SAMPDIR)/joytest/makefile.unx $(DISTDIR)/samples/joytest
	cp $(SAMPDIR)/joytest/*.cpp $(DISTDIR)/samples/joytest
	cp $(SAMPDIR)/joytest/*.h $(DISTDIR)/samples/joytest
	cp $(SAMPDIR)/joytest/*.wav $(DISTDIR)/samples/joytest

	mkdir $(DISTDIR)/samples/keyboard
	cp $(SAMPDIR)/keyboard/Makefile.in $(DISTDIR)/samples/keyboard
	cp $(SAMPDIR)/keyboard/*.cpp $(DISTDIR)/samples/keyboard

	mkdir $(DISTDIR)/samples/layout
	cp $(SAMPDIR)/layout/Makefile.in $(DISTDIR)/samples/layout
	cp $(SAMPDIR)/layout/makefile.unx $(DISTDIR)/samples/layout
	cp $(SAMPDIR)/layout/*.cpp $(DISTDIR)/samples/layout
	cp $(SAMPDIR)/layout/*.h $(DISTDIR)/samples/layout

	mkdir $(DISTDIR)/samples/listctrl
	mkdir $(DISTDIR)/samples/listctrl/bitmaps
	cp $(SAMPDIR)/listctrl/Makefile.in $(DISTDIR)/samples/listctrl
	cp $(SAMPDIR)/listctrl/makefile.unx $(DISTDIR)/samples/listctrl
	cp $(SAMPDIR)/listctrl/*.cpp $(DISTDIR)/samples/listctrl
	cp $(SAMPDIR)/listctrl/*.h $(DISTDIR)/samples/listctrl
	cp $(SAMPDIR)/listctrl/*.xpm $(DISTDIR)/samples/listctrl
	cp $(SAMPDIR)/listctrl/bitmaps/*.xpm $(DISTDIR)/samples/listctrl/bitmaps

	mkdir $(DISTDIR)/samples/mdi
	mkdir $(DISTDIR)/samples/mdi/bitmaps
	cp $(SAMPDIR)/mdi/Makefile.in $(DISTDIR)/samples/mdi
	cp $(SAMPDIR)/mdi/makefile.unx $(DISTDIR)/samples/mdi
	cp $(SAMPDIR)/mdi/*.cpp $(DISTDIR)/samples/mdi
	cp $(SAMPDIR)/mdi/*.h $(DISTDIR)/samples/mdi
	cp $(SAMPDIR)/mdi/*.xpm $(DISTDIR)/samples/mdi
	cp $(SAMPDIR)/mdi/bitmaps/*.xpm $(DISTDIR)/samples/mdi/bitmaps

	mkdir $(DISTDIR)/samples/memcheck
	cp $(SAMPDIR)/memcheck/Makefile.in $(DISTDIR)/samples/memcheck
	cp $(SAMPDIR)/memcheck/makefile.unx $(DISTDIR)/samples/memcheck
	cp $(SAMPDIR)/memcheck/*.cpp $(DISTDIR)/samples/memcheck
	cp $(SAMPDIR)/memcheck/*.xpm $(DISTDIR)/samples/memcheck

	mkdir $(DISTDIR)/samples/menu
	cp $(SAMPDIR)/menu/Makefile.in $(DISTDIR)/samples/menu
	cp $(SAMPDIR)/menu/makefile.unx $(DISTDIR)/samples/menu
	cp $(SAMPDIR)/menu/*.cpp $(DISTDIR)/samples/menu

	mkdir $(DISTDIR)/samples/minifram
	mkdir $(DISTDIR)/samples/minifram/bitmaps
	cp $(SAMPDIR)/minifram/Makefile.in $(DISTDIR)/samples/minifram
	cp $(SAMPDIR)/minifram/makefile.unx $(DISTDIR)/samples/minifram
	cp $(SAMPDIR)/minifram/*.cpp $(DISTDIR)/samples/minifram
	cp $(SAMPDIR)/minifram/*.h $(DISTDIR)/samples/minifram
	cp $(SAMPDIR)/minifram/*.xpm $(DISTDIR)/samples/minifram
	cp $(SAMPDIR)/minifram/bitmaps/*.xpm $(DISTDIR)/samples/minifram/bitmaps

	mkdir $(DISTDIR)/samples/minimal
	cp $(SAMPDIR)/minimal/Makefile.in $(DISTDIR)/samples/minimal
	cp $(SAMPDIR)/minimal/makefile.unx $(DISTDIR)/samples/minimal
	cp $(SAMPDIR)/minimal/*.cpp $(DISTDIR)/samples/minimal
	cp $(SAMPDIR)/minimal/*.xpm $(DISTDIR)/samples/minimal
	cp $(SAMPDIR)/minimal/*.mms $(DISTDIR)/samples/minimal

	mkdir $(DISTDIR)/samples/mobile
	cp $(SAMPDIR)/mobile/Makefile.in $(DISTDIR)/samples/mobile
	mkdir $(DISTDIR)/samples/mobile/wxedit
	cp $(SAMPDIR)/mobile/wxedit/Makefile.in $(DISTDIR)/samples/mobile/wxedit
	cp $(SAMPDIR)/mobile/wxedit/*.cpp $(DISTDIR)/samples/mobile/wxedit
	cp $(SAMPDIR)/mobile/wxedit/*.h $(DISTDIR)/samples/mobile/wxedit
	mkdir $(DISTDIR)/samples/mobile/styles
	cp $(SAMPDIR)/mobile/styles/Makefile.in $(DISTDIR)/samples/mobile/styles
	cp $(SAMPDIR)/mobile/styles/*.cpp $(DISTDIR)/samples/mobile/styles
	cp $(SAMPDIR)/mobile/styles/*.h $(DISTDIR)/samples/mobile/styles
	cp $(SAMPDIR)/mobile/styles/*.jpg $(DISTDIR)/samples/mobile/styles
    
	mkdir $(DISTDIR)/samples/dialup
	cp $(SAMPDIR)/dialup/Makefile.in $(DISTDIR)/samples/dialup
	cp $(SAMPDIR)/dialup/makefile.unx $(DISTDIR)/samples/dialup
	cp $(SAMPDIR)/dialup/*.cpp $(DISTDIR)/samples/dialup

	mkdir $(DISTDIR)/samples/newgrid
	cp $(SAMPDIR)/newgrid/Makefile.in $(DISTDIR)/samples/newgrid
	cp $(SAMPDIR)/newgrid/makefile.unx $(DISTDIR)/samples/newgrid
	cp $(SAMPDIR)/newgrid/*.cpp $(DISTDIR)/samples/newgrid
	cp $(SAMPDIR)/newgrid/*.h $(DISTDIR)/samples/newgrid

	mkdir $(DISTDIR)/samples/notebook
	cp $(SAMPDIR)/notebook/Makefile.in $(DISTDIR)/samples/notebook
	cp $(SAMPDIR)/notebook/makefile.unx $(DISTDIR)/samples/notebook
	cp $(SAMPDIR)/notebook/*.cpp $(DISTDIR)/samples/notebook
	cp $(SAMPDIR)/notebook/*.h $(DISTDIR)/samples/notebook

	mkdir $(DISTDIR)/samples/opengl
	cp $(SAMPDIR)/opengl/Makefile.in $(DISTDIR)/samples/opengl
	mkdir $(DISTDIR)/samples/opengl/penguin
	cp $(SAMPDIR)/opengl/penguin/Makefile.in $(DISTDIR)/samples/opengl/penguin
	cp $(SAMPDIR)/opengl/penguin/makefile.unx $(DISTDIR)/samples/opengl/penguin
	cp $(SAMPDIR)/opengl/penguin/*.cpp $(DISTDIR)/samples/opengl/penguin
	cp $(SAMPDIR)/opengl/penguin/*.c $(DISTDIR)/samples/opengl/penguin
	cp $(SAMPDIR)/opengl/penguin/*.h $(DISTDIR)/samples/opengl/penguin
	cp $(SAMPDIR)/opengl/penguin/*.lwo $(DISTDIR)/samples/opengl/penguin
	mkdir $(DISTDIR)/samples/opengl/cube
	cp $(SAMPDIR)/opengl/cube/Makefile.in $(DISTDIR)/samples/opengl/cube
	cp $(SAMPDIR)/opengl/cube/makefile.unx $(DISTDIR)/samples/opengl/cube
	cp $(SAMPDIR)/opengl/cube/*.cpp $(DISTDIR)/samples/opengl/cube
	cp $(SAMPDIR)/opengl/cube/*.h $(DISTDIR)/samples/opengl/cube
	mkdir $(DISTDIR)/samples/opengl/isosurf
	cp $(SAMPDIR)/opengl/isosurf/Makefile.in $(DISTDIR)/samples/opengl/isosurf
	cp $(SAMPDIR)/opengl/isosurf/makefile.unx $(DISTDIR)/samples/opengl/isosurf
	cp $(SAMPDIR)/opengl/isosurf/*.cpp $(DISTDIR)/samples/opengl/isosurf
	cp $(SAMPDIR)/opengl/isosurf/*.h $(DISTDIR)/samples/opengl/isosurf
	cp $(SAMPDIR)/opengl/isosurf/*.gz $(DISTDIR)/samples/opengl/isosurf

	mkdir $(DISTDIR)/samples/png
	cp $(SAMPDIR)/png/Makefile.in $(DISTDIR)/samples/png
	cp $(SAMPDIR)/png/makefile.unx $(DISTDIR)/samples/png
	cp $(SAMPDIR)/png/*.cpp $(DISTDIR)/samples/png
	cp $(SAMPDIR)/png/*.h $(DISTDIR)/samples/png
	cp $(SAMPDIR)/png/*.png $(DISTDIR)/samples/png

	mkdir $(DISTDIR)/samples/printing
	cp $(SAMPDIR)/printing/Makefile.in $(DISTDIR)/samples/printing
	cp $(SAMPDIR)/printing/makefile.unx $(DISTDIR)/samples/printing
	cp $(SAMPDIR)/printing/*.cpp $(DISTDIR)/samples/printing
	cp $(SAMPDIR)/printing/*.h $(DISTDIR)/samples/printing
	cp $(SAMPDIR)/printing/*.xpm $(DISTDIR)/samples/printing
	cp $(SAMPDIR)/printing/*.xbm $(DISTDIR)/samples/printing

	mkdir $(DISTDIR)/samples/resource
	cp $(SAMPDIR)/resource/Makefile.in $(DISTDIR)/samples/resource
	cp $(SAMPDIR)/resource/makefile.unx $(DISTDIR)/samples/resource
	cp $(SAMPDIR)/resource/*.cpp $(DISTDIR)/samples/resource
	cp $(SAMPDIR)/resource/*.h $(DISTDIR)/samples/resource
	cp $(SAMPDIR)/resource/*.wxr $(DISTDIR)/samples/resource

	mkdir $(DISTDIR)/samples/rotate
	cp $(SAMPDIR)/rotate/Makefile.in $(DISTDIR)/samples/rotate
	cp $(SAMPDIR)/rotate/makefile.unx $(DISTDIR)/samples/rotate
	cp $(SAMPDIR)/rotate/*.cpp $(DISTDIR)/samples/rotate
	cp $(SAMPDIR)/rotate/*.bmp $(DISTDIR)/samples/rotate

	mkdir $(DISTDIR)/samples/richedit
	cp $(SAMPDIR)/richedit/Makefile.in $(DISTDIR)/samples/richedit
	cp $(SAMPDIR)/richedit/makefile.unx $(DISTDIR)/samples/richedit
	cp $(SAMPDIR)/richedit/*.cpp $(DISTDIR)/samples/richedit
	cp $(SAMPDIR)/richedit/*.h $(DISTDIR)/samples/richedit
	cp $(SAMPDIR)/richedit/*.xpm $(DISTDIR)/samples/richedit
	cp $(SAMPDIR)/richedit/README $(DISTDIR)/samples/richedit
	cp $(SAMPDIR)/richedit/TODO $(DISTDIR)/samples/richedit

	mkdir $(DISTDIR)/samples/proplist
	cp $(SAMPDIR)/proplist/Makefile.in $(DISTDIR)/samples/proplist
	cp $(SAMPDIR)/proplist/makefile.unx $(DISTDIR)/samples/proplist
	cp $(SAMPDIR)/proplist/*.cpp $(DISTDIR)/samples/proplist
	cp $(SAMPDIR)/proplist/*.h $(DISTDIR)/samples/proplist

	mkdir $(DISTDIR)/samples/propsize
	cp $(SAMPDIR)/propsize/Makefile.in $(DISTDIR)/samples/propsize
	cp $(SAMPDIR)/propsize/makefile.unx $(DISTDIR)/samples/propsize
	cp $(SAMPDIR)/propsize/*.cpp $(DISTDIR)/samples/propsize
	cp $(SAMPDIR)/propsize/*.xpm $(DISTDIR)/samples/propsize

	mkdir $(DISTDIR)/samples/sashtest
	cp $(SAMPDIR)/sashtest/Makefile.in $(DISTDIR)/samples/sashtest
	cp $(SAMPDIR)/sashtest/makefile.unx $(DISTDIR)/samples/sashtest
	cp $(SAMPDIR)/sashtest/*.cpp $(DISTDIR)/samples/sashtest
	cp $(SAMPDIR)/sashtest/*.h $(DISTDIR)/samples/sashtest

	mkdir $(DISTDIR)/samples/scroll
	cp $(SAMPDIR)/scroll/Makefile.in $(DISTDIR)/samples/scroll
	cp $(SAMPDIR)/scroll/makefile.unx $(DISTDIR)/samples/scroll
	cp $(SAMPDIR)/scroll/*.cpp $(DISTDIR)/samples/scroll

	mkdir $(DISTDIR)/samples/scrollsub
	cp $(SAMPDIR)/scrollsub/Makefile.in $(DISTDIR)/samples/scrollsub
	cp $(SAMPDIR)/scrollsub/makefile.unx $(DISTDIR)/samples/scrollsub
	cp $(SAMPDIR)/scrollsub/*.cpp $(DISTDIR)/samples/scrollsub

	mkdir $(DISTDIR)/samples/sockets
	cp $(SAMPDIR)/sockets/Makefile.in $(DISTDIR)/samples/sockets
	cp $(SAMPDIR)/sockets/makefile.unx $(DISTDIR)/samples/sockets
	cp $(SAMPDIR)/sockets/*.cpp $(DISTDIR)/samples/sockets
	cp $(SAMPDIR)/sockets/*.xpm $(DISTDIR)/samples/sockets

	mkdir $(DISTDIR)/samples/splitter
	cp $(SAMPDIR)/splitter/Makefile.in $(DISTDIR)/samples/splitter
	cp $(SAMPDIR)/splitter/makefile.unx $(DISTDIR)/samples/splitter
	cp $(SAMPDIR)/splitter/*.cpp $(DISTDIR)/samples/splitter

	mkdir $(DISTDIR)/samples/statbar
	cp $(SAMPDIR)/statbar/Makefile.in $(DISTDIR)/samples/statbar
	cp $(SAMPDIR)/statbar/makefile.unx $(DISTDIR)/samples/statbar
	cp $(SAMPDIR)/statbar/*.cpp $(DISTDIR)/samples/statbar
	cp $(SAMPDIR)/statbar/*.xpm $(DISTDIR)/samples/statbar

	mkdir $(DISTDIR)/samples/text
	cp $(SAMPDIR)/text/Makefile.in $(DISTDIR)/samples/text
	cp $(SAMPDIR)/text/makefile.unx $(DISTDIR)/samples/text
	cp $(SAMPDIR)/text/*.cpp $(DISTDIR)/samples/text
	cp $(SAMPDIR)/text/*.xpm $(DISTDIR)/samples/text

	mkdir $(DISTDIR)/samples/thread
	cp $(SAMPDIR)/thread/Makefile.in $(DISTDIR)/samples/thread
	cp $(SAMPDIR)/thread/makefile.unx $(DISTDIR)/samples/thread
	cp $(SAMPDIR)/thread/*.cpp $(DISTDIR)/samples/thread

	mkdir $(DISTDIR)/samples/toolbar
	cp $(SAMPDIR)/toolbar/Makefile.in $(DISTDIR)/samples/toolbar
	cp $(SAMPDIR)/toolbar/makefile.unx $(DISTDIR)/samples/toolbar
	cp $(SAMPDIR)/toolbar/*.cpp $(DISTDIR)/samples/toolbar
	cp $(SAMPDIR)/toolbar/*.xpm $(DISTDIR)/samples/toolbar
	mkdir $(DISTDIR)/samples/toolbar/bitmaps
	cp $(SAMPDIR)/toolbar/bitmaps/*.xpm $(DISTDIR)/samples/toolbar/bitmaps

	mkdir $(DISTDIR)/samples/treectrl
	cp $(SAMPDIR)/treectrl/Makefile.in $(DISTDIR)/samples/treectrl
	cp $(SAMPDIR)/treectrl/makefile.unx $(DISTDIR)/samples/treectrl
	cp $(SAMPDIR)/treectrl/*.cpp $(DISTDIR)/samples/treectrl
	cp $(SAMPDIR)/treectrl/*.h $(DISTDIR)/samples/treectrl
	cp $(SAMPDIR)/treectrl/*.xpm $(DISTDIR)/samples/treectrl

	mkdir $(DISTDIR)/samples/treelay
	cp $(SAMPDIR)/treelay/Makefile.in $(DISTDIR)/samples/treelay
	cp $(SAMPDIR)/treelay/makefile.unx $(DISTDIR)/samples/treelay
	cp $(SAMPDIR)/treelay/*.cpp $(DISTDIR)/samples/treelay
	cp $(SAMPDIR)/treelay/*.h $(DISTDIR)/samples/treelay

	mkdir $(DISTDIR)/samples/typetest
	cp $(SAMPDIR)/typetest/Makefile.in $(DISTDIR)/samples/typetest
	cp $(SAMPDIR)/typetest/makefile.unx $(DISTDIR)/samples/typetest
	cp $(SAMPDIR)/typetest/*.cpp $(DISTDIR)/samples/typetest
	cp $(SAMPDIR)/typetest/*.h $(DISTDIR)/samples/typetest
	cp $(SAMPDIR)/typetest/*.xpm $(DISTDIR)/samples/typetest

	mkdir $(DISTDIR)/samples/validate
	cp $(SAMPDIR)/validate/Makefile.in $(DISTDIR)/samples/validate
	cp $(SAMPDIR)/validate/makefile.unx $(DISTDIR)/samples/validate
	cp $(SAMPDIR)/validate/*.cpp $(DISTDIR)/samples/validate
	cp $(SAMPDIR)/validate/*.h $(DISTDIR)/samples/validate
	cp $(SAMPDIR)/validate/*.xpm $(DISTDIR)/samples/validate

	mkdir $(DISTDIR)/samples/wizard
	cp $(SAMPDIR)/wizard/Makefile.in $(DISTDIR)/samples/wizard
	cp $(SAMPDIR)/wizard/makefile.unx $(DISTDIR)/samples/wizard
	cp $(SAMPDIR)/wizard/*.cpp $(DISTDIR)/samples/wizard
	cp $(SAMPDIR)/wizard/*.xpm $(DISTDIR)/samples/wizard

	mkdir $(DISTDIR)/samples/widgets
	mkdir $(DISTDIR)/samples/widgets/icons
	cp $(SAMPDIR)/widgets/Makefile.in $(DISTDIR)/samples/widgets
	cp $(SAMPDIR)/widgets/*.cpp $(DISTDIR)/samples/widgets
	cp $(SAMPDIR)/widgets/*.h $(DISTDIR)/samples/widgets
	cp $(SAMPDIR)/widgets/*.rc $(DISTDIR)/samples/widgets
	cp $(SAMPDIR)/widgets/icons/*.xpm $(DISTDIR)/samples/widgets/icons

UTILS_DIST: ALL_GUI_DIST
	mkdir $(DISTDIR)/utils
	cp $(UTILSDIR)/Makefile.in $(DISTDIR)/utils
	cp $(UTILSDIR)/configure $(DISTDIR)/utils
	cp $(UTILSDIR)/configure.in $(DISTDIR)/utils

	mkdir $(DISTDIR)/utils/tex2rtf
	mkdir $(DISTDIR)/utils/tex2rtf/src
	cp $(UTILSDIR)/tex2rtf/*.in $(DISTDIR)/utils/tex2rtf
	cp $(UTILSDIR)/tex2rtf/src/*.h $(DISTDIR)/utils/tex2rtf/src
	cp $(UTILSDIR)/tex2rtf/src/*.in $(DISTDIR)/utils/tex2rtf/src
	cp $(UTILSDIR)/tex2rtf/src/*.cpp $(DISTDIR)/utils/tex2rtf/src
	cp $(UTILSDIR)/tex2rtf/src/tex2rtf.* $(DISTDIR)/utils/tex2rtf/src

	mkdir $(DISTDIR)/utils/emulator
	mkdir $(DISTDIR)/utils/emulator/src
	mkdir $(DISTDIR)/utils/emulator/docs
	cp $(UTILSDIR)/emulator/*.in $(DISTDIR)/utils/emulator
	cp $(UTILSDIR)/emulator/src/*.h $(DISTDIR)/utils/emulator/src
	cp $(UTILSDIR)/emulator/src/*.in $(DISTDIR)/utils/emulator/src
	cp $(UTILSDIR)/emulator/src/*.cpp $(DISTDIR)/utils/emulator/src
	cp $(UTILSDIR)/emulator/src/*.jpg $(DISTDIR)/utils/emulator/src
	cp $(UTILSDIR)/emulator/src/*.wxe $(DISTDIR)/utils/emulator/src
	cp $(UTILSDIR)/emulator/docs/*.txt $(DISTDIR)/utils/emulator/docs
	cp $(UTILSDIR)/emulator/docs/*.jpg $(DISTDIR)/utils/emulator/docs

	mkdir $(DISTDIR)/utils/makegen
	mkdir $(DISTDIR)/utils/makegen/templates
	cp $(UTILSDIR)/makegen/Makefile.in $(DISTDIR)/utils/makegen
	cp $(UTILSDIR)/makegen/*.cpp $(DISTDIR)/utils/makegen
	cp $(UTILSDIR)/makegen/templates/*.* $(DISTDIR)/utils/makegen/templates

	mkdir $(DISTDIR)/utils/hhp2cached
	cp $(UTILSDIR)/hhp2cached/*.* $(DISTDIR)/utils/hhp2cached

	mkdir $(DISTDIR)/utils/HelpGen
	mkdir $(DISTDIR)/utils/HelpGen/src
	cp $(UTILSDIR)/HelpGen/Makefile.in $(DISTDIR)/utils/HelpGen
	cp $(UTILSDIR)/HelpGen/src/*.* $(DISTDIR)/utils/HelpGen/src

	mkdir $(DISTDIR)/utils/dialoged
	mkdir $(DISTDIR)/utils/dialoged/src
	mkdir $(DISTDIR)/utils/dialoged/src/bitmaps
	mkdir $(DISTDIR)/utils/dialoged/docs
	cp $(UTILSDIR)/dialoged/Makefile.in $(DISTDIR)/utils/dialoged
	cp $(UTILSDIR)/dialoged/src/*.h $(DISTDIR)/utils/dialoged/src
	cp $(UTILSDIR)/dialoged/src/*.cpp $(DISTDIR)/utils/dialoged/src
	cp $(UTILSDIR)/dialoged/src/Makefile.in $(DISTDIR)/utils/dialoged/src
	cp $(UTILSDIR)/dialoged/src/makefile.unx $(DISTDIR)/utils/dialoged/src
	cp $(UTILSDIR)/dialoged/src/bitmaps/*.xpm $(DISTDIR)/utils/dialoged/src/bitmaps
	cp $(UTILSDIR)/dialoged/docs/*.tex $(DISTDIR)/utils/dialoged/docs
	cp $(UTILSDIR)/dialoged/docs/*.ini $(DISTDIR)/utils/dialoged/docs
	cp $(UTILSDIR)/dialoged/docs/*.gif $(DISTDIR)/utils/dialoged/docs

	mkdir $(DISTDIR)/utils/helpview
	mkdir $(DISTDIR)/utils/helpview/src
	mkdir $(DISTDIR)/utils/helpview/src/bitmaps
	cp $(UTILSDIR)/helpview/Makefile.in $(DISTDIR)/utils/helpview
	cp $(UTILSDIR)/helpview/src/*.h $(DISTDIR)/utils/helpview/src
	cp $(UTILSDIR)/helpview/src/*.cpp $(DISTDIR)/utils/helpview/src
	cp $(UTILSDIR)/helpview/src/Makefile.in $(DISTDIR)/utils/helpview/src
	cp $(UTILSDIR)/helpview/src/test.zip $(DISTDIR)/utils/helpview/src
	cp $(UTILSDIR)/helpview/src/bitmaps/*.xpm $(DISTDIR)/utils/helpview/src/bitmaps

MISC_DIST: ALL_GUI_DIST
	mkdir $(DISTDIR)/misc
	mkdir $(DISTDIR)/misc/afm
	cp $(MISCDIR)/afm/*.afm  $(DISTDIR)/misc/afm
	mkdir $(DISTDIR)/misc/gs_afm
	cp $(MISCDIR)/gs_afm/*.afm  $(DISTDIR)/misc/gs_afm

INTL_DIST:
	mkdir $(DISTDIR)/locale
	cp $(INTLDIR)/Makefile $(DISTDIR)/locale
	cp $(INTLDIR)/*.po $(DISTDIR)/locale
	-cp $(INTLDIR)/*.mo $(DISTDIR)/locale

MANUAL_DIST:
	mkdir $(DISTDIR)/docs
	mkdir $(DISTDIR)/docs/latex
	mkdir $(DISTDIR)/docs/latex/wx
	cp $(DOCDIR)/latex/wx/*.tex $(DISTDIR)/docs/latex/wx
	cp $(DOCDIR)/latex/wx/*.inc $(DISTDIR)/docs/latex/wx
	cp $(DOCDIR)/latex/wx/*.gif $(DISTDIR)/docs/latex/wx
	cp $(DOCDIR)/latex/wx/*.ini $(DISTDIR)/docs/latex/wx
	cp $(DOCDIR)/latex/wx/*.bib $(DISTDIR)/docs/latex/wx
	cp $(DOCDIR)/latex/wx/*.sty $(DISTDIR)/docs/latex/wx

# this target does not generate a complete wxPython dist, it only includes
# those files needed for the Debian source package.
# see utils/wxPython/distrib for scripts to make a proper wxPython dist.
PYTHON_DIST:
	mkdir $(DISTDIR)/wxPython
	mkdir $(DISTDIR)/wxPython/contrib
	mkdir $(DISTDIR)/wxPython/contrib/dllwidget
	mkdir $(DISTDIR)/wxPython/contrib/gizmos
	mkdir $(DISTDIR)/wxPython/contrib/glcanvas
	mkdir $(DISTDIR)/wxPython/contrib/glcanvas/gtk
	mkdir $(DISTDIR)/wxPython/contrib/ogl
	mkdir $(DISTDIR)/wxPython/contrib/stc
	mkdir $(DISTDIR)/wxPython/contrib/stc/gtk
	mkdir $(DISTDIR)/wxPython/contrib/xrc
	mkdir $(DISTDIR)/wxPython/demo
	mkdir $(DISTDIR)/wxPython/demo/bitmaps
	mkdir $(DISTDIR)/wxPython/demo/bmp_source
	mkdir $(DISTDIR)/wxPython/demo/data
	mkdir $(DISTDIR)/wxPython/demo/dllwidget
	mkdir $(DISTDIR)/wxPython/src
	mkdir $(DISTDIR)/wxPython/src/gtk
	mkdir $(DISTDIR)/wxPython/scripts
	mkdir $(DISTDIR)/wxPython/wxPython
	mkdir $(DISTDIR)/wxPython/wxPython/lib
	mkdir $(DISTDIR)/wxPython/wxPython/lib/PyCrust
	mkdir $(DISTDIR)/wxPython/wxPython/lib/editor
	mkdir $(DISTDIR)/wxPython/wxPython/lib/mixins
	mkdir $(DISTDIR)/wxPython/wxPython/tools
	mkdir $(DISTDIR)/wxPython/wxPython/tools/XRCed

	cp $(WXDIR)/wxPython/*.txt $(DISTDIR)/wxPython
	cp $(WXDIR)/wxPython/*.py $(DISTDIR)/wxPython
	cp $(WXDIR)/wxPython/setup.cfg $(DISTDIR)/wxPython
	cp $(WXDIR)/wxPython/MANIFEST.in $(DISTDIR)/wxPython
	cp $(WXDIR)/wxPython/contrib/dllwidget/*.{py,cpp,h,i} $(DISTDIR)/wxPython/contrib/dllwidget
	cp $(WXDIR)/wxPython/contrib/gizmos/*.{py,cpp,i} $(DISTDIR)/wxPython/contrib/gizmos
	-cp $(WXDIR)/wxPython/contrib/glcanvas/* $(DISTDIR)/wxPython/contrib/glcanvas
	cp $(WXDIR)/wxPython/contrib/glcanvas/gtk/glcanvas.* $(DISTDIR)/wxPython/contrib/glcanvas/gtk
	-cp $(WXDIR)/wxPython/contrib/ogl/* $(DISTDIR)/wxPython/contrib/ogl
	-cp $(WXDIR)/wxPython/contrib/stc/* $(DISTDIR)/wxPython/contrib/stc
	-cp $(WXDIR)/wxPython/contrib/stc/gtk/* $(DISTDIR)/wxPython/contrib/stc/gtk
	-cp $(WXDIR)/wxPython/contrib/xrc/xrc.* $(DISTDIR)/wxPython/contrib/xrc
	-cp $(WXDIR)/wxPython/demo/* $(DISTDIR)/wxPython/demo
	-cp $(WXDIR)/wxPython/demo/bitmaps/* $(DISTDIR)/wxPython/demo/bitmaps
	-cp $(WXDIR)/wxPython/demo/bmp_source/* $(DISTDIR)/wxPython/demo/bmp_source
	-cp $(WXDIR)/wxPython/demo/data/* $(DISTDIR)/wxPython/demo/data
	-cp $(WXDIR)/wxPython/demo/dllwidget/Makefile $(DISTDIR)/wxPython/demo/dllwidget
	-cp $(WXDIR)/wxPython/demo/dllwidget/test_* $(DISTDIR)/wxPython/demo/dllwidget
	-cp $(WXDIR)/wxPython/scripts/* $(DISTDIR)/wxPython/scripts
	-cp $(WXDIR)/wxPython/src/* $(DISTDIR)/wxPython/src
	cp $(WXDIR)/wxPython/src/gtk/*.py $(DISTDIR)/wxPython/src/gtk
	cp $(WXDIR)/wxPython/src/gtk/*.cpp $(DISTDIR)/wxPython/src/gtk
	cp $(WXDIR)/wxPython/wxPython/lib/*.py $(DISTDIR)/wxPython/wxPython/lib
	cp $(WXDIR)/wxPython/wxPython/lib/PyCrust/*.py $(DISTDIR)/wxPython/wxPython/lib/PyCrust
	cp $(WXDIR)/wxPython/wxPython/lib/editor/*.py $(DISTDIR)/wxPython/wxPython/lib/editor
	cp $(WXDIR)/wxPython/wxPython/lib/mixins/*.py $(DISTDIR)/wxPython/wxPython/lib/mixins
	cp $(WXDIR)/wxPython/wxPython/tools/*.py $(DISTDIR)/wxPython/wxPython/tools
	cp $(WXDIR)/wxPython/wxPython/tools/XRCed/*.{py,ico,sh,xrc} $(DISTDIR)/wxPython/wxPython/tools/XRCed

distclean:
	$(RM) -r _dist_dir

# VZ: the -only targets allow to do "make dist bzip-dist-only" without copying
#     the files twice
dist-only:
	@echo "*** Creating wxWindows distribution in $(DISTDIR)..."
	@cd _dist_dir && tar ch $(DISTDIRNAME) | gzip -f9 > ../$(WXARCHIVE);
	@if test "$(USE_GUI)" = 1; then \
	cd $(DISTDIR); \
	mv samples wxSamples-$(VER_SUFFIX); \
	echo "*** Creating wxSamples archive..."; \
	tar ch wxSamples-$(VER_SUFFIX) | gzip -f9 > ../../$(WXSAMPLES); \
	mv wxSamples-$(VER_SUFFIX) samples; \
	mv demos wxDemos-$(VER_SUFFIX); \
	echo "*** Creating wxDemos archive..."; \
	tar ch wxDemos-$(VER_SUFFIX) | gzip -f9 > ../../$(WXDEMOS); \
	mv wxDemos-$(VER_SUFFIX) demos; \
	fi

dist: @GUIDIST@
	@echo "*** Creating wxWindows distribution in $(DISTDIR)..."
	@# now prune away a lot of the crap included by using cp -R
	@# in other dist targets.
	find $(DISTDIR) \( -name "CVS" -o -name ".cvsignore" -o -name "*.dsp" -o -name "*.dsw" -o -name "*.hh*" -o \
			\( -name "makefile.*" -a ! -name "makefile.unx" \) \) \
			-print0 | xargs -0 rm -rf
	@cd _dist_dir && tar ch $(DISTDIRNAME) | gzip -f9 > ../$(WXARCHIVE);
	@if test "$(USE_GUI)" = 1; then \
	cd $(DISTDIR); \
	mv samples wxSamples-$(VER_SUFFIX); \
	echo "*** Creating wxSamples archive..."; \
	tar ch wxSamples-$(VER_SUFFIX) | gzip -f9 > ../../$(WXSAMPLES); \
	mv wxSamples-$(VER_SUFFIX) samples; \
	mv demos wxDemos-$(VER_SUFFIX); \
	echo "*** Creating wxDemos archive..."; \
	tar ch wxDemos-$(VER_SUFFIX) | gzip -f9 > ../../$(WXDEMOS); \
	mv wxDemos-$(VER_SUFFIX) demos; \
	fi

bzip-dist-only:
	@echo "*** Creating wxWindows distribution in $(DISTDIR)..."
	@cd _dist_dir && tar ch $(DISTDIRNAME) | bzip2 -f9 > ../$(WXARCHIVE_BZIP);
	@if test "$(USE_GUI)" = 1; then \
	cd $(DISTDIR); \
	mv samples wxSamples-${VER_SUFFIX}; \
	echo "*** Creating wxSamples archive..."; \
	tar ch wxSamples-${VER_SUFFIX} | bzip2 -f9 > ../../$(WXSAMPLES_BZIP); \
	mv wxSamples-${VER_SUFFIX} samples; \
	mv demos wxDemos-${VER_SUFFIX}; \
	echo "*** Creating wxDemos archive..."; \
	tar ch wxDemos-${VER_SUFFIX} | bzip2 -f9 > ../../$(WXDEMOS_BZIP); \
	mv wxDemos-${VER_SUFFIX} demos; \
	fi

bzip-dist: @GUIDIST@
	@echo "*** Creating wxWindows distribution in $(DISTDIR)..."
	@cd _dist_dir && tar ch $(DISTDIRNAME) | bzip2 -f9 > ../$(WXARCHIVE_BZIP)
	@if test "$(USE_GUI)" = 1; then \
	cd $(DISTDIR); \
	mv samples wxSamples; \
	tar ch wxSamples | bzip2 -f9 > ../../$(WXSAMPLES_BZIP); \
	mv wxSamples samples; \
	mv demos wxDemos; \
	tar ch wxDemos | bzip2 -f9 > ../../$(WXDEMOS_BZIP); \
	mv wxDemos demos; \
	fi

# RR: Copy text and binary data separatly
win-dist: MSW_ZIP_TEXT_DIST
	@echo "*** Creating wxWindows ZIP distribution in $(DISTDIR)..."
	@cd _dist_dir && mv $(DISTDIRNAME) wxMSW
	@cd _dist_dir && zip -r -l  ../$(WXARCHIVE_ZIP) *
	cp $(INCDIR)/wx/msw/*.cur _dist_dir/wxMSW/include/wx/msw
	cp $(INCDIR)/wx/msw/*.ico _dist_dir/wxMSW/include/wx/msw
	cp $(INCDIR)/wx/msw/*.bmp _dist_dir/wxMSW/include/wx/msw
	@cd _dist_dir && zip -r ../$(WXARCHIVE_ZIP) wxMSW/include/wx/msw/*.cur
	@cd _dist_dir && zip -r ../$(WXARCHIVE_ZIP) wxMSW/include/wx/msw/*.ico
	@cd _dist_dir && zip -r ../$(WXARCHIVE_ZIP) wxMSW/include/wx/msw/*.bmp

debian-dist: debian-native-dist debian-msw-dirs MSW_DIST
	mkdir $(DISTDIR)/debian
	-cp $(WXDIR)/debian/* $(DISTDIR)/debian
	cp $(DOCDIR)/licence.txt $(DISTDIR)/docs
	cp $(DOCDIR)/licendoc.txt $(DISTDIR)/docs
	cp $(DOCDIR)/preamble.txt $(DISTDIR)/docs
	rm -f $(DISTDIR)/*.spec

	@# now prune away a lot of the crap included by using cp -R
	@# in other dist targets.  Ugly and hardly portable but it
	@# will run on any Debian box and that's enough for now.

	find $(DISTDIR) \( -name "CVS" -o -name ".cvsignore" -o -name "*.dsp" -o -name "*.dsw" -o -name "*.hh*" -o \
			\( -name "makefile.*" -a ! -name "makefile.unx" \) \) \
			-print0 | xargs -0 rm -rf

	rm -rf $(WXDIR)/../wxwindows$(WX_MAJOR_VERSION_NUMBER).$(WX_MINOR_VERSION_NUMBER)-$(WX_MAJOR_VERSION_NUMBER).$(WX_MINOR_VERSION_NUMBER).$(WX_RELEASE_NUMBER)
	mv $(DISTDIR) $(WXDIR)/../wxwindows$(WX_MAJOR_VERSION_NUMBER).$(WX_MINOR_VERSION_NUMBER)-$(WX_MAJOR_VERSION_NUMBER).$(WX_MINOR_VERSION_NUMBER).$(WX_RELEASE_NUMBER)

debian-native-dist: @GUIDIST@ UNIV_DIST MANUAL_DIST PYTHON_DIST
	cp $(SRCDIR)/files.lst $(DISTDIR)/src

debian-msw-dirs:
	mkdir $(DISTDIR)/include/wx/msw
	mkdir $(DISTDIR)/src/msw


clean:
	$(RM) *.o
	$(RM) *.d
	$(RM) parser.c
	$(RM) lexer.c
	$(RM) $(build_libdir)/lib*
    # Don't remove this lot, configure will reuse it
    # if it's still good
	# $(RM) -r $(build_libdir)/wx/*

cleanall: clean


RPMTOP=_dist_dir/_rpm_top

rpm: bzip-dist
	@echo "*** Building RPMs ***"
	-mkdir $(RPMTOP)
	-mkdir $(RPMTOP)/SOURCES
	-mkdir $(RPMTOP)/SPECS
	-mkdir $(RPMTOP)/BUILD
	-mkdir $(RPMTOP)/RPMS
	-mkdir $(RPMTOP)/SRPMS
	cp -f $(WXARCHIVE_BZIP) $(RPMTOP)/SOURCES
	rpm -ba --define "_topdir `pwd`/$(RPMTOP)" $(WXDIR)/wx$(TOOLKIT).spec
	mv -f `find $(RPMTOP) -name "wx$(TARGET)*.rpm"` .

