#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrashReport.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CrashReport")]
	public partial class CrashReportDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBugg(Bugg instance);
    partial void UpdateBugg(Bugg instance);
    partial void DeleteBugg(Bugg instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertBugg_Crash(Bugg_Crash instance);
    partial void UpdateBugg_Crash(Bugg_Crash instance);
    partial void DeleteBugg_Crash(Bugg_Crash instance);
    partial void InsertBugg_UserGroup(Bugg_UserGroup instance);
    partial void UpdateBugg_UserGroup(Bugg_UserGroup instance);
    partial void DeleteBugg_UserGroup(Bugg_UserGroup instance);
    partial void InsertBugg_User(Bugg_User instance);
    partial void UpdateBugg_User(Bugg_User instance);
    partial void DeleteBugg_User(Bugg_User instance);
    partial void InsertCrash(Crash instance);
    partial void UpdateCrash(Crash instance);
    partial void DeleteCrash(Crash instance);
    partial void InsertCrash_FunctionCall(Crash_FunctionCall instance);
    partial void UpdateCrash_FunctionCall(Crash_FunctionCall instance);
    partial void DeleteCrash_FunctionCall(Crash_FunctionCall instance);
    partial void InsertFunctionCall(FunctionCall instance);
    partial void UpdateFunctionCall(FunctionCall instance);
    partial void DeleteFunctionCall(FunctionCall instance);
    partial void InsertNote(Note instance);
    partial void UpdateNote(Note instance);
    partial void DeleteNote(Note instance);
    partial void InsertUserGroup(UserGroup instance);
    partial void UpdateUserGroup(UserGroup instance);
    partial void DeleteUserGroup(UserGroup instance);
    #endregion
		
		public CrashReportDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CrashReportConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CrashReportDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CrashReportDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CrashReportDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CrashReportDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bugg> Buggs
		{
			get
			{
				return this.GetTable<Bugg>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Bugg_Crash> Bugg_Crashes
		{
			get
			{
				return this.GetTable<Bugg_Crash>();
			}
		}
		
		public System.Data.Linq.Table<Bugg_UserGroup> Bugg_UserGroups
		{
			get
			{
				return this.GetTable<Bugg_UserGroup>();
			}
		}
		
		public System.Data.Linq.Table<Bugg_User> Bugg_Users
		{
			get
			{
				return this.GetTable<Bugg_User>();
			}
		}
		
		public System.Data.Linq.Table<Crash> Crashes
		{
			get
			{
				return this.GetTable<Crash>();
			}
		}
		
		public System.Data.Linq.Table<Crash_FunctionCall> Crash_FunctionCalls
		{
			get
			{
				return this.GetTable<Crash_FunctionCall>();
			}
		}
		
		public System.Data.Linq.Table<FunctionCall> FunctionCalls
		{
			get
			{
				return this.GetTable<FunctionCall>();
			}
		}
		
		public System.Data.Linq.Table<Note> Notes
		{
			get
			{
				return this.GetTable<Note>();
			}
		}
		
		public System.Data.Linq.Table<UserGroup> UserGroups
		{
			get
			{
				return this.GetTable<UserGroup>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buggs")]
	public partial class Bugg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TTPID;
		
		private string _Title;
		
		private string _Summary;
		
		private System.Nullable<int> _Priority;
		
		private string _Pattern;
		
		private string _Type;
		
		private System.Nullable<int> _NumberOfCrashes;
		
		private System.Nullable<int> _NumberOfUsers;
		
		private System.Nullable<System.DateTime> _TimeOfFirstCrash;
		
		private System.Nullable<System.DateTime> _TimeOfLastCrash;
		
		private string _Status;
		
		private string _FixedChangeList;
		
		private string _Description;
		
		private string _ReproSteps;
		
		private EntitySet<Bugg_Crash> _Bugg_Crashes;
		
		private EntitySet<Bugg_UserGroup> _Bugg_UserGroups;
		
		private EntitySet<Bugg_User> _Bugg_Users;
		
		private EntitySet<Note> _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTTPIDChanging(string value);
    partial void OnTTPIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnPatternChanging(string value);
    partial void OnPatternChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnNumberOfCrashesChanging(System.Nullable<int> value);
    partial void OnNumberOfCrashesChanged();
    partial void OnNumberOfUsersChanging(System.Nullable<int> value);
    partial void OnNumberOfUsersChanged();
    partial void OnTimeOfFirstCrashChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeOfFirstCrashChanged();
    partial void OnTimeOfLastCrashChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeOfLastCrashChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnFixedChangeListChanging(string value);
    partial void OnFixedChangeListChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnReproStepsChanging(string value);
    partial void OnReproStepsChanged();
    #endregion
		
		public Bugg()
		{
			this._Bugg_Crashes = new EntitySet<Bugg_Crash>(new Action<Bugg_Crash>(this.attach_Bugg_Crashes), new Action<Bugg_Crash>(this.detach_Bugg_Crashes));
			this._Bugg_UserGroups = new EntitySet<Bugg_UserGroup>(new Action<Bugg_UserGroup>(this.attach_Bugg_UserGroups), new Action<Bugg_UserGroup>(this.detach_Bugg_UserGroups));
			this._Bugg_Users = new EntitySet<Bugg_User>(new Action<Bugg_User>(this.attach_Bugg_Users), new Action<Bugg_User>(this.detach_Bugg_Users));
			this._Notes = new EntitySet<Note>(new Action<Note>(this.attach_Notes), new Action<Note>(this.detach_Notes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTPID", DbType="VarChar(50)")]
		public string TTPID
		{
			get
			{
				return this._TTPID;
			}
			set
			{
				if ((this._TTPID != value))
				{
					this.OnTTPIDChanging(value);
					this.SendPropertyChanging();
					this._TTPID = value;
					this.SendPropertyChanged("TTPID");
					this.OnTTPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(120)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(250)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pattern", DbType="VarChar(250)")]
		public string Pattern
		{
			get
			{
				return this._Pattern;
			}
			set
			{
				if ((this._Pattern != value))
				{
					this.OnPatternChanging(value);
					this.SendPropertyChanging();
					this._Pattern = value;
					this.SendPropertyChanged("Pattern");
					this.OnPatternChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfCrashes", DbType="Int")]
		public System.Nullable<int> NumberOfCrashes
		{
			get
			{
				return this._NumberOfCrashes;
			}
			set
			{
				if ((this._NumberOfCrashes != value))
				{
					this.OnNumberOfCrashesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfCrashes = value;
					this.SendPropertyChanged("NumberOfCrashes");
					this.OnNumberOfCrashesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfUsers", DbType="Int")]
		public System.Nullable<int> NumberOfUsers
		{
			get
			{
				return this._NumberOfUsers;
			}
			set
			{
				if ((this._NumberOfUsers != value))
				{
					this.OnNumberOfUsersChanging(value);
					this.SendPropertyChanging();
					this._NumberOfUsers = value;
					this.SendPropertyChanged("NumberOfUsers");
					this.OnNumberOfUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOfFirstCrash", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeOfFirstCrash
		{
			get
			{
				return this._TimeOfFirstCrash;
			}
			set
			{
				if ((this._TimeOfFirstCrash != value))
				{
					this.OnTimeOfFirstCrashChanging(value);
					this.SendPropertyChanging();
					this._TimeOfFirstCrash = value;
					this.SendPropertyChanged("TimeOfFirstCrash");
					this.OnTimeOfFirstCrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOfLastCrash", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeOfLastCrash
		{
			get
			{
				return this._TimeOfLastCrash;
			}
			set
			{
				if ((this._TimeOfLastCrash != value))
				{
					this.OnTimeOfLastCrashChanging(value);
					this.SendPropertyChanging();
					this._TimeOfLastCrash = value;
					this.SendPropertyChanged("TimeOfLastCrash");
					this.OnTimeOfLastCrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedChangeList", DbType="VarChar(50)")]
		public string FixedChangeList
		{
			get
			{
				return this._FixedChangeList;
			}
			set
			{
				if ((this._FixedChangeList != value))
				{
					this.OnFixedChangeListChanging(value);
					this.SendPropertyChanging();
					this._FixedChangeList = value;
					this.SendPropertyChanged("FixedChangeList");
					this.OnFixedChangeListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReproSteps", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ReproSteps
		{
			get
			{
				return this._ReproSteps;
			}
			set
			{
				if ((this._ReproSteps != value))
				{
					this.OnReproStepsChanging(value);
					this.SendPropertyChanging();
					this._ReproSteps = value;
					this.SendPropertyChanged("ReproSteps");
					this.OnReproStepsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bugg_Bugg_Crash", Storage="_Bugg_Crashes", ThisKey="Id", OtherKey="BuggId")]
		public EntitySet<Bugg_Crash> Bugg_Crashes
		{
			get
			{
				return this._Bugg_Crashes;
			}
			set
			{
				this._Bugg_Crashes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bugg_Bugg_UserGroup", Storage="_Bugg_UserGroups", ThisKey="Id", OtherKey="BuggId")]
		public EntitySet<Bugg_UserGroup> Bugg_UserGroups
		{
			get
			{
				return this._Bugg_UserGroups;
			}
			set
			{
				this._Bugg_UserGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bugg_Bugg_User", Storage="_Bugg_Users", ThisKey="Id", OtherKey="BuggId")]
		public EntitySet<Bugg_User> Bugg_Users
		{
			get
			{
				return this._Bugg_Users;
			}
			set
			{
				this._Bugg_Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bugg_Note", Storage="_Notes", ThisKey="Id", OtherKey="BuggId")]
		public EntitySet<Note> Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				this._Notes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bugg_Crashes(Bugg_Crash entity)
		{
			this.SendPropertyChanging();
			entity.Bugg = this;
		}
		
		private void detach_Bugg_Crashes(Bugg_Crash entity)
		{
			this.SendPropertyChanging();
			entity.Bugg = null;
		}
		
		private void attach_Bugg_UserGroups(Bugg_UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.Bugg = this;
		}
		
		private void detach_Bugg_UserGroups(Bugg_UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.Bugg = null;
		}
		
		private void attach_Bugg_Users(Bugg_User entity)
		{
			this.SendPropertyChanging();
			entity.Bugg = this;
		}
		
		private void detach_Bugg_Users(Bugg_User entity)
		{
			this.SendPropertyChanging();
			entity.Bugg = null;
		}
		
		private void attach_Notes(Note entity)
		{
			this.SendPropertyChanging();
			entity.Bugg = this;
		}
		
		private void detach_Notes(Note entity)
		{
			this.SendPropertyChanging();
			entity.Bugg = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserName;
		
		private string _UserGroup;
		
		private System.Nullable<int> _UserGroupId;
		
		private EntitySet<Bugg_User> _Bugg_Users;
		
		private EntitySet<Crash> _Crashes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserGroupChanging(string value);
    partial void OnUserGroupChanged();
    partial void OnUserGroupIdChanging(System.Nullable<int> value);
    partial void OnUserGroupIdChanged();
    #endregion
		
		public User()
		{
			this._Bugg_Users = new EntitySet<Bugg_User>(new Action<Bugg_User>(this.attach_Bugg_Users), new Action<Bugg_User>(this.detach_Bugg_Users));
			this._Crashes = new EntitySet<Crash>(new Action<Crash>(this.attach_Crashes), new Action<Crash>(this.detach_Crashes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroup", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserGroup
		{
			get
			{
				return this._UserGroup;
			}
			set
			{
				if ((this._UserGroup != value))
				{
					this.OnUserGroupChanging(value);
					this.SendPropertyChanging();
					this._UserGroup = value;
					this.SendPropertyChanged("UserGroup");
					this.OnUserGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroupId", DbType="Int")]
		public System.Nullable<int> UserGroupId
		{
			get
			{
				return this._UserGroupId;
			}
			set
			{
				if ((this._UserGroupId != value))
				{
					this.OnUserGroupIdChanging(value);
					this.SendPropertyChanging();
					this._UserGroupId = value;
					this.SendPropertyChanged("UserGroupId");
					this.OnUserGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Bugg_User", Storage="_Bugg_Users", ThisKey="UserName", OtherKey="UserName")]
		public EntitySet<Bugg_User> Bugg_Users
		{
			get
			{
				return this._Bugg_Users;
			}
			set
			{
				this._Bugg_Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Crash", Storage="_Crashes", ThisKey="UserName", OtherKey="UserName")]
		public EntitySet<Crash> Crashes
		{
			get
			{
				return this._Crashes;
			}
			set
			{
				this._Crashes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bugg_Users(Bugg_User entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Bugg_Users(Bugg_User entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Crashes(Crash entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Crashes(Crash entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buggs_Crashes")]
	public partial class Bugg_Crash : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuggId;
		
		private int _CrashId;
		
		private EntityRef<Bugg> _Bugg;
		
		private EntityRef<Crash> _Crash;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuggIdChanging(int value);
    partial void OnBuggIdChanged();
    partial void OnCrashIdChanging(int value);
    partial void OnCrashIdChanged();
    #endregion
		
		public Bugg_Crash()
		{
			this._Bugg = default(EntityRef<Bugg>);
			this._Crash = default(EntityRef<Crash>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuggId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BuggId
		{
			get
			{
				return this._BuggId;
			}
			set
			{
				if ((this._BuggId != value))
				{
					if (this._Bugg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuggIdChanging(value);
					this.SendPropertyChanging();
					this._BuggId = value;
					this.SendPropertyChanged("BuggId");
					this.OnBuggIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrashId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CrashId
		{
			get
			{
				return this._CrashId;
			}
			set
			{
				if ((this._CrashId != value))
				{
					if (this._Crash.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCrashIdChanging(value);
					this.SendPropertyChanging();
					this._CrashId = value;
					this.SendPropertyChanged("CrashId");
					this.OnCrashIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bugg_Bugg_Crash", Storage="_Bugg", ThisKey="BuggId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Bugg Bugg
		{
			get
			{
				return this._Bugg.Entity;
			}
			set
			{
				Bugg previousValue = this._Bugg.Entity;
				if (((previousValue != value) 
							|| (this._Bugg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bugg.Entity = null;
						previousValue.Bugg_Crashes.Remove(this);
					}
					this._Bugg.Entity = value;
					if ((value != null))
					{
						value.Bugg_Crashes.Add(this);
						this._BuggId = value.Id;
					}
					else
					{
						this._BuggId = default(int);
					}
					this.SendPropertyChanged("Bugg");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Crash_Bugg_Crash", Storage="_Crash", ThisKey="CrashId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Crash Crash
		{
			get
			{
				return this._Crash.Entity;
			}
			set
			{
				Crash previousValue = this._Crash.Entity;
				if (((previousValue != value) 
							|| (this._Crash.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Crash.Entity = null;
						previousValue.Bugg_Crashes.Remove(this);
					}
					this._Crash.Entity = value;
					if ((value != null))
					{
						value.Bugg_Crashes.Add(this);
						this._CrashId = value.Id;
					}
					else
					{
						this._CrashId = default(int);
					}
					this.SendPropertyChanged("Crash");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buggs_UserGroups")]
	public partial class Bugg_UserGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuggId;
		
		private int _UserGroupId;
		
		private EntityRef<Bugg> _Bugg;
		
		private EntityRef<UserGroup> _UserGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuggIdChanging(int value);
    partial void OnBuggIdChanged();
    partial void OnUserGroupIdChanging(int value);
    partial void OnUserGroupIdChanged();
    #endregion
		
		public Bugg_UserGroup()
		{
			this._Bugg = default(EntityRef<Bugg>);
			this._UserGroup = default(EntityRef<UserGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuggId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BuggId
		{
			get
			{
				return this._BuggId;
			}
			set
			{
				if ((this._BuggId != value))
				{
					if (this._Bugg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuggIdChanging(value);
					this.SendPropertyChanging();
					this._BuggId = value;
					this.SendPropertyChanged("BuggId");
					this.OnBuggIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroupId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserGroupId
		{
			get
			{
				return this._UserGroupId;
			}
			set
			{
				if ((this._UserGroupId != value))
				{
					if (this._UserGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserGroupIdChanging(value);
					this.SendPropertyChanging();
					this._UserGroupId = value;
					this.SendPropertyChanged("UserGroupId");
					this.OnUserGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bugg_Bugg_UserGroup", Storage="_Bugg", ThisKey="BuggId", OtherKey="Id", IsForeignKey=true)]
		public Bugg Bugg
		{
			get
			{
				return this._Bugg.Entity;
			}
			set
			{
				Bugg previousValue = this._Bugg.Entity;
				if (((previousValue != value) 
							|| (this._Bugg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bugg.Entity = null;
						previousValue.Bugg_UserGroups.Remove(this);
					}
					this._Bugg.Entity = value;
					if ((value != null))
					{
						value.Bugg_UserGroups.Add(this);
						this._BuggId = value.Id;
					}
					else
					{
						this._BuggId = default(int);
					}
					this.SendPropertyChanged("Bugg");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserGroup_Bugg_UserGroup", Storage="_UserGroup", ThisKey="UserGroupId", OtherKey="Id", IsForeignKey=true)]
		public UserGroup UserGroup
		{
			get
			{
				return this._UserGroup.Entity;
			}
			set
			{
				UserGroup previousValue = this._UserGroup.Entity;
				if (((previousValue != value) 
							|| (this._UserGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserGroup.Entity = null;
						previousValue.Bugg_UserGroups.Remove(this);
					}
					this._UserGroup.Entity = value;
					if ((value != null))
					{
						value.Bugg_UserGroups.Add(this);
						this._UserGroupId = value.Id;
					}
					else
					{
						this._UserGroupId = default(int);
					}
					this.SendPropertyChanged("UserGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buggs_Users")]
	public partial class Bugg_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuggId;
		
		private string _UserName;
		
		private EntityRef<Bugg> _Bugg;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuggIdChanging(int value);
    partial void OnBuggIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public Bugg_User()
		{
			this._Bugg = default(EntityRef<Bugg>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuggId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BuggId
		{
			get
			{
				return this._BuggId;
			}
			set
			{
				if ((this._BuggId != value))
				{
					if (this._Bugg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuggIdChanging(value);
					this.SendPropertyChanging();
					this._BuggId = value;
					this.SendPropertyChanged("BuggId");
					this.OnBuggIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bugg_Bugg_User", Storage="_Bugg", ThisKey="BuggId", OtherKey="Id", IsForeignKey=true)]
		public Bugg Bugg
		{
			get
			{
				return this._Bugg.Entity;
			}
			set
			{
				Bugg previousValue = this._Bugg.Entity;
				if (((previousValue != value) 
							|| (this._Bugg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bugg.Entity = null;
						previousValue.Bugg_Users.Remove(this);
					}
					this._Bugg.Entity = value;
					if ((value != null))
					{
						value.Bugg_Users.Add(this);
						this._BuggId = value.Id;
					}
					else
					{
						this._BuggId = default(int);
					}
					this.SendPropertyChanged("Bugg");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Bugg_User", Storage="_User", ThisKey="UserName", OtherKey="UserName", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Bugg_Users.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Bugg_Users.Add(this);
						this._UserName = value.UserName;
					}
					else
					{
						this._UserName = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Crashes")]
	public partial class Crash : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _Summary;
		
		private string _GameName;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _TimeOfCrash;
		
		private string _ChangeListVersion;
		
		private string _PlatformName;
		
		private string _EngineMode;
		
		private string _Description;
		
		private string _RawCallStack;
		
		private string _Pattern;
		
		private string _CommandLine;
		
		private string _ComputerName;
		
		private System.Nullable<bool> _Selected;
		
		private string _FixedChangeList;
		
		private string _LanguageExt;
		
		private string _BuildVersion;
		
		private string _BaseDir;
		
		private System.Nullable<int> _Version;
		
		private string _UserName;
		
		private string _TTPID;
		
		private System.Nullable<int> _AutoReporterID;
		
		private System.Nullable<bool> _HasLogFile;
		
		private System.Nullable<bool> _HasMiniDumpFile;
		
		private System.Nullable<bool> _HasVideoFile;
		
		private string _Module;
		
		private EntitySet<Bugg_Crash> _Bugg_Crashes;
		
		private EntitySet<Crash_FunctionCall> _Crash_FunctionCalls;
		
		private EntitySet<Note> _Notes;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnGameNameChanging(string value);
    partial void OnGameNameChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnTimeOfCrashChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeOfCrashChanged();
    partial void OnChangeListVersionChanging(string value);
    partial void OnChangeListVersionChanged();
    partial void OnPlatformNameChanging(string value);
    partial void OnPlatformNameChanged();
    partial void OnEngineModeChanging(string value);
    partial void OnEngineModeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRawCallStackChanging(string value);
    partial void OnRawCallStackChanged();
    partial void OnPatternChanging(string value);
    partial void OnPatternChanged();
    partial void OnCommandLineChanging(string value);
    partial void OnCommandLineChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    partial void OnSelectedChanging(System.Nullable<bool> value);
    partial void OnSelectedChanged();
    partial void OnFixedChangeListChanging(string value);
    partial void OnFixedChangeListChanged();
    partial void OnLanguageExtChanging(string value);
    partial void OnLanguageExtChanged();
    partial void OnBuildVersionChanging(string value);
    partial void OnBuildVersionChanged();
    partial void OnBaseDirChanging(string value);
    partial void OnBaseDirChanged();
    partial void OnVersionChanging(System.Nullable<int> value);
    partial void OnVersionChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnTTPIDChanging(string value);
    partial void OnTTPIDChanged();
    partial void OnAutoReporterIDChanging(System.Nullable<int> value);
    partial void OnAutoReporterIDChanged();
    partial void OnHasLogFileChanging(System.Nullable<bool> value);
    partial void OnHasLogFileChanged();
    partial void OnHasMiniDumpFileChanging(System.Nullable<bool> value);
    partial void OnHasMiniDumpFileChanged();
    partial void OnHasVideoFileChanging(System.Nullable<bool> value);
    partial void OnHasVideoFileChanged();
    partial void OnModuleChanging(string value);
    partial void OnModuleChanged();
    #endregion
		
		public Crash()
		{
			this._Bugg_Crashes = new EntitySet<Bugg_Crash>(new Action<Bugg_Crash>(this.attach_Bugg_Crashes), new Action<Bugg_Crash>(this.detach_Bugg_Crashes));
			this._Crash_FunctionCalls = new EntitySet<Crash_FunctionCall>(new Action<Crash_FunctionCall>(this.attach_Crash_FunctionCalls), new Action<Crash_FunctionCall>(this.detach_Crash_FunctionCalls));
			this._Notes = new EntitySet<Note>(new Action<Note>(this.attach_Notes), new Action<Note>(this.detach_Notes));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NChar(20)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(140)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameName", DbType="VarChar(15)")]
		public string GameName
		{
			get
			{
				return this._GameName;
			}
			set
			{
				if ((this._GameName != value))
				{
					this.OnGameNameChanging(value);
					this.SendPropertyChanging();
					this._GameName = value;
					this.SendPropertyChanged("GameName");
					this.OnGameNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(15)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOfCrash", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeOfCrash
		{
			get
			{
				return this._TimeOfCrash;
			}
			set
			{
				if ((this._TimeOfCrash != value))
				{
					this.OnTimeOfCrashChanging(value);
					this.SendPropertyChanging();
					this._TimeOfCrash = value;
					this.SendPropertyChanged("TimeOfCrash");
					this.OnTimeOfCrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeListVersion", DbType="VarChar(50)")]
		public string ChangeListVersion
		{
			get
			{
				return this._ChangeListVersion;
			}
			set
			{
				if ((this._ChangeListVersion != value))
				{
					this.OnChangeListVersionChanging(value);
					this.SendPropertyChanging();
					this._ChangeListVersion = value;
					this.SendPropertyChanged("ChangeListVersion");
					this.OnChangeListVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformName", DbType="VarChar(50)")]
		public string PlatformName
		{
			get
			{
				return this._PlatformName;
			}
			set
			{
				if ((this._PlatformName != value))
				{
					this.OnPlatformNameChanging(value);
					this.SendPropertyChanging();
					this._PlatformName = value;
					this.SendPropertyChanged("PlatformName");
					this.OnPlatformNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineMode", DbType="VarChar(50)")]
		public string EngineMode
		{
			get
			{
				return this._EngineMode;
			}
			set
			{
				if ((this._EngineMode != value))
				{
					this.OnEngineModeChanging(value);
					this.SendPropertyChanging();
					this._EngineMode = value;
					this.SendPropertyChanged("EngineMode");
					this.OnEngineModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(300)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RawCallStack", DbType="VarChar(MAX)")]
		public string RawCallStack
		{
			get
			{
				return this._RawCallStack;
			}
			set
			{
				if ((this._RawCallStack != value))
				{
					this.OnRawCallStackChanging(value);
					this.SendPropertyChanging();
					this._RawCallStack = value;
					this.SendPropertyChanged("RawCallStack");
					this.OnRawCallStackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pattern", DbType="VarChar(800)")]
		public string Pattern
		{
			get
			{
				return this._Pattern;
			}
			set
			{
				if ((this._Pattern != value))
				{
					this.OnPatternChanging(value);
					this.SendPropertyChanging();
					this._Pattern = value;
					this.SendPropertyChanged("Pattern");
					this.OnPatternChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandLine", DbType="VarChar(512)")]
		public string CommandLine
		{
			get
			{
				return this._CommandLine;
			}
			set
			{
				if ((this._CommandLine != value))
				{
					this.OnCommandLineChanging(value);
					this.SendPropertyChanging();
					this._CommandLine = value;
					this.SendPropertyChanged("CommandLine");
					this.OnCommandLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="VarChar(50)")]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Selected", DbType="Bit")]
		public System.Nullable<bool> Selected
		{
			get
			{
				return this._Selected;
			}
			set
			{
				if ((this._Selected != value))
				{
					this.OnSelectedChanging(value);
					this.SendPropertyChanging();
					this._Selected = value;
					this.SendPropertyChanged("Selected");
					this.OnSelectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedChangeList", DbType="VarChar(140)")]
		public string FixedChangeList
		{
			get
			{
				return this._FixedChangeList;
			}
			set
			{
				if ((this._FixedChangeList != value))
				{
					this.OnFixedChangeListChanging(value);
					this.SendPropertyChanging();
					this._FixedChangeList = value;
					this.SendPropertyChanged("FixedChangeList");
					this.OnFixedChangeListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageExt", DbType="VarChar(20)")]
		public string LanguageExt
		{
			get
			{
				return this._LanguageExt;
			}
			set
			{
				if ((this._LanguageExt != value))
				{
					this.OnLanguageExtChanging(value);
					this.SendPropertyChanging();
					this._LanguageExt = value;
					this.SendPropertyChanged("LanguageExt");
					this.OnLanguageExtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildVersion", DbType="VarChar(80)")]
		public string BuildVersion
		{
			get
			{
				return this._BuildVersion;
			}
			set
			{
				if ((this._BuildVersion != value))
				{
					this.OnBuildVersionChanging(value);
					this.SendPropertyChanging();
					this._BuildVersion = value;
					this.SendPropertyChanged("BuildVersion");
					this.OnBuildVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseDir", DbType="VarChar(260)")]
		public string BaseDir
		{
			get
			{
				return this._BaseDir;
			}
			set
			{
				if ((this._BaseDir != value))
				{
					this.OnBaseDirChanging(value);
					this.SendPropertyChanging();
					this._BaseDir = value;
					this.SendPropertyChanged("BaseDir");
					this.OnBaseDirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int")]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTPID", DbType="VarChar(50)")]
		public string TTPID
		{
			get
			{
				return this._TTPID;
			}
			set
			{
				if ((this._TTPID != value))
				{
					this.OnTTPIDChanging(value);
					this.SendPropertyChanging();
					this._TTPID = value;
					this.SendPropertyChanged("TTPID");
					this.OnTTPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoReporterID", DbType="Int")]
		public System.Nullable<int> AutoReporterID
		{
			get
			{
				return this._AutoReporterID;
			}
			set
			{
				if ((this._AutoReporterID != value))
				{
					this.OnAutoReporterIDChanging(value);
					this.SendPropertyChanging();
					this._AutoReporterID = value;
					this.SendPropertyChanged("AutoReporterID");
					this.OnAutoReporterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasLogFile", DbType="Bit")]
		public System.Nullable<bool> HasLogFile
		{
			get
			{
				return this._HasLogFile;
			}
			set
			{
				if ((this._HasLogFile != value))
				{
					this.OnHasLogFileChanging(value);
					this.SendPropertyChanging();
					this._HasLogFile = value;
					this.SendPropertyChanged("HasLogFile");
					this.OnHasLogFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasMiniDumpFile", DbType="Bit")]
		public System.Nullable<bool> HasMiniDumpFile
		{
			get
			{
				return this._HasMiniDumpFile;
			}
			set
			{
				if ((this._HasMiniDumpFile != value))
				{
					this.OnHasMiniDumpFileChanging(value);
					this.SendPropertyChanging();
					this._HasMiniDumpFile = value;
					this.SendPropertyChanged("HasMiniDumpFile");
					this.OnHasMiniDumpFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasVideoFile", DbType="Bit")]
		public System.Nullable<bool> HasVideoFile
		{
			get
			{
				return this._HasVideoFile;
			}
			set
			{
				if ((this._HasVideoFile != value))
				{
					this.OnHasVideoFileChanging(value);
					this.SendPropertyChanging();
					this._HasVideoFile = value;
					this.SendPropertyChanged("HasVideoFile");
					this.OnHasVideoFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module")]
		public string Module
		{
			get
			{
				return this._Module;
			}
			set
			{
				if ((this._Module != value))
				{
					this.OnModuleChanging(value);
					this.SendPropertyChanging();
					this._Module = value;
					this.SendPropertyChanged("Module");
					this.OnModuleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Crash_Bugg_Crash", Storage="_Bugg_Crashes", ThisKey="Id", OtherKey="CrashId")]
		public EntitySet<Bugg_Crash> Bugg_Crashes
		{
			get
			{
				return this._Bugg_Crashes;
			}
			set
			{
				this._Bugg_Crashes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Crash_Crash_FunctionCall", Storage="_Crash_FunctionCalls", ThisKey="Id", OtherKey="CrashId")]
		public EntitySet<Crash_FunctionCall> Crash_FunctionCalls
		{
			get
			{
				return this._Crash_FunctionCalls;
			}
			set
			{
				this._Crash_FunctionCalls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Crash_Note", Storage="_Notes", ThisKey="Id", OtherKey="CrashId")]
		public EntitySet<Note> Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				this._Notes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Crash", Storage="_User", ThisKey="UserName", OtherKey="UserName", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Crashes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Crashes.Add(this);
						this._UserName = value.UserName;
					}
					else
					{
						this._UserName = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bugg_Crashes(Bugg_Crash entity)
		{
			this.SendPropertyChanging();
			entity.Crash = this;
		}
		
		private void detach_Bugg_Crashes(Bugg_Crash entity)
		{
			this.SendPropertyChanging();
			entity.Crash = null;
		}
		
		private void attach_Crash_FunctionCalls(Crash_FunctionCall entity)
		{
			this.SendPropertyChanging();
			entity.Crash = this;
		}
		
		private void detach_Crash_FunctionCalls(Crash_FunctionCall entity)
		{
			this.SendPropertyChanging();
			entity.Crash = null;
		}
		
		private void attach_Notes(Note entity)
		{
			this.SendPropertyChanging();
			entity.Crash = this;
		}
		
		private void detach_Notes(Note entity)
		{
			this.SendPropertyChanging();
			entity.Crash = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Crashes_FunctionCalls")]
	public partial class Crash_FunctionCall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CrashId;
		
		private int _FunctionCallId;
		
		private EntityRef<Crash> _Crash;
		
		private EntityRef<FunctionCall> _FunctionCall;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCrashIdChanging(int value);
    partial void OnCrashIdChanged();
    partial void OnFunctionCallIdChanging(int value);
    partial void OnFunctionCallIdChanged();
    #endregion
		
		public Crash_FunctionCall()
		{
			this._Crash = default(EntityRef<Crash>);
			this._FunctionCall = default(EntityRef<FunctionCall>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrashId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CrashId
		{
			get
			{
				return this._CrashId;
			}
			set
			{
				if ((this._CrashId != value))
				{
					if (this._Crash.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCrashIdChanging(value);
					this.SendPropertyChanging();
					this._CrashId = value;
					this.SendPropertyChanged("CrashId");
					this.OnCrashIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionCallId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FunctionCallId
		{
			get
			{
				return this._FunctionCallId;
			}
			set
			{
				if ((this._FunctionCallId != value))
				{
					if (this._FunctionCall.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctionCallIdChanging(value);
					this.SendPropertyChanging();
					this._FunctionCallId = value;
					this.SendPropertyChanged("FunctionCallId");
					this.OnFunctionCallIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Crash_Crash_FunctionCall", Storage="_Crash", ThisKey="CrashId", OtherKey="Id", IsForeignKey=true)]
		public Crash Crash
		{
			get
			{
				return this._Crash.Entity;
			}
			set
			{
				Crash previousValue = this._Crash.Entity;
				if (((previousValue != value) 
							|| (this._Crash.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Crash.Entity = null;
						previousValue.Crash_FunctionCalls.Remove(this);
					}
					this._Crash.Entity = value;
					if ((value != null))
					{
						value.Crash_FunctionCalls.Add(this);
						this._CrashId = value.Id;
					}
					else
					{
						this._CrashId = default(int);
					}
					this.SendPropertyChanged("Crash");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FunctionCall_Crash_FunctionCall", Storage="_FunctionCall", ThisKey="FunctionCallId", OtherKey="Id", IsForeignKey=true)]
		public FunctionCall FunctionCall
		{
			get
			{
				return this._FunctionCall.Entity;
			}
			set
			{
				FunctionCall previousValue = this._FunctionCall.Entity;
				if (((previousValue != value) 
							|| (this._FunctionCall.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FunctionCall.Entity = null;
						previousValue.Crash_FunctionCalls.Remove(this);
					}
					this._FunctionCall.Entity = value;
					if ((value != null))
					{
						value.Crash_FunctionCalls.Add(this);
						this._FunctionCallId = value.Id;
					}
					else
					{
						this._FunctionCallId = default(int);
					}
					this.SendPropertyChanged("FunctionCall");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FunctionCalls")]
	public partial class FunctionCall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Call;
		
		private EntitySet<Crash_FunctionCall> _Crash_FunctionCalls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCallChanging(string value);
    partial void OnCallChanged();
    #endregion
		
		public FunctionCall()
		{
			this._Crash_FunctionCalls = new EntitySet<Crash_FunctionCall>(new Action<Crash_FunctionCall>(this.attach_Crash_FunctionCalls), new Action<Crash_FunctionCall>(this.detach_Crash_FunctionCalls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Call", DbType="VarChar(MAX)")]
		public string Call
		{
			get
			{
				return this._Call;
			}
			set
			{
				if ((this._Call != value))
				{
					this.OnCallChanging(value);
					this.SendPropertyChanging();
					this._Call = value;
					this.SendPropertyChanged("Call");
					this.OnCallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FunctionCall_Crash_FunctionCall", Storage="_Crash_FunctionCalls", ThisKey="Id", OtherKey="FunctionCallId")]
		public EntitySet<Crash_FunctionCall> Crash_FunctionCalls
		{
			get
			{
				return this._Crash_FunctionCalls;
			}
			set
			{
				this._Crash_FunctionCalls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Crash_FunctionCalls(Crash_FunctionCall entity)
		{
			this.SendPropertyChanging();
			entity.FunctionCall = this;
		}
		
		private void detach_Crash_FunctionCalls(Crash_FunctionCall entity)
		{
			this.SendPropertyChanging();
			entity.FunctionCall = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notes")]
	public partial class Note : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Tag;
		
		private string _Text;
		
		private System.Nullable<int> _CrashId;
		
		private System.Nullable<int> _BuggId;
		
		private EntityRef<Bugg> _Bugg;
		
		private EntityRef<Crash> _Crash;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnCrashIdChanging(System.Nullable<int> value);
    partial void OnCrashIdChanged();
    partial void OnBuggIdChanging(System.Nullable<int> value);
    partial void OnBuggIdChanged();
    #endregion
		
		public Note()
		{
			this._Bugg = default(EntityRef<Bugg>);
			this._Crash = default(EntityRef<Crash>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="NChar(10)")]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NChar(10)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrashId", DbType="Int")]
		public System.Nullable<int> CrashId
		{
			get
			{
				return this._CrashId;
			}
			set
			{
				if ((this._CrashId != value))
				{
					if (this._Crash.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCrashIdChanging(value);
					this.SendPropertyChanging();
					this._CrashId = value;
					this.SendPropertyChanged("CrashId");
					this.OnCrashIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuggId", DbType="Int")]
		public System.Nullable<int> BuggId
		{
			get
			{
				return this._BuggId;
			}
			set
			{
				if ((this._BuggId != value))
				{
					if (this._Bugg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuggIdChanging(value);
					this.SendPropertyChanging();
					this._BuggId = value;
					this.SendPropertyChanged("BuggId");
					this.OnBuggIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bugg_Note", Storage="_Bugg", ThisKey="BuggId", OtherKey="Id", IsForeignKey=true)]
		public Bugg Bugg
		{
			get
			{
				return this._Bugg.Entity;
			}
			set
			{
				Bugg previousValue = this._Bugg.Entity;
				if (((previousValue != value) 
							|| (this._Bugg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bugg.Entity = null;
						previousValue.Notes.Remove(this);
					}
					this._Bugg.Entity = value;
					if ((value != null))
					{
						value.Notes.Add(this);
						this._BuggId = value.Id;
					}
					else
					{
						this._BuggId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bugg");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Crash_Note", Storage="_Crash", ThisKey="CrashId", OtherKey="Id", IsForeignKey=true)]
		public Crash Crash
		{
			get
			{
				return this._Crash.Entity;
			}
			set
			{
				Crash previousValue = this._Crash.Entity;
				if (((previousValue != value) 
							|| (this._Crash.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Crash.Entity = null;
						previousValue.Notes.Remove(this);
					}
					this._Crash.Entity = value;
					if ((value != null))
					{
						value.Notes.Add(this);
						this._CrashId = value.Id;
					}
					else
					{
						this._CrashId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Crash");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserGroups")]
	public partial class UserGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Bugg_UserGroup> _Bugg_UserGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public UserGroup()
		{
			this._Bugg_UserGroups = new EntitySet<Bugg_UserGroup>(new Action<Bugg_UserGroup>(this.attach_Bugg_UserGroups), new Action<Bugg_UserGroup>(this.detach_Bugg_UserGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserGroup_Bugg_UserGroup", Storage="_Bugg_UserGroups", ThisKey="Id", OtherKey="UserGroupId")]
		public EntitySet<Bugg_UserGroup> Bugg_UserGroups
		{
			get
			{
				return this._Bugg_UserGroups;
			}
			set
			{
				this._Bugg_UserGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bugg_UserGroups(Bugg_UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.UserGroup = this;
		}
		
		private void detach_Bugg_UserGroups(Bugg_UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.UserGroup = null;
		}
	}
}
#pragma warning restore 1591
