@model EpicGames.Tools.Builder.Frontend.Database.SP_GetCommandDetailsResult

@{
    Layout = null;

    string img;
    string title;

    if (Model.StartTime.HasValue)
    {
        img = "spinner.gif";
        title = "New Build in Progress since " + Model.StartTime.Value.ToLocalTime().ToString() + " on " + Model.Machine + " triggered by " + Model.Operator;
    }
    else
    {
        if (Model.LastAttemptedChangeList == Model.LastGoodChangeList)
        {
            img = "tick.png";
            title = "Last Build Succeeded";
        }
        else
        {
            img = "cross.png";
            title = "Last Build Failed";
        }
    }
}

@functions{
    string TriggerDelayToString (int delay)
    {
        string result = "";
        TimeSpan timespan = TimeSpan.FromMinutes(delay);

        if (timespan.TotalDays >= 1)
        {
            result += ((int)timespan.TotalDays).ToString() + " day(s) ";
        }

        if (timespan.Hours > 0)
        {
            result += timespan.Hours.ToString() + " hour(s) ";
        }

        if (timespan.Minutes > 0)
        {
            result += timespan.Minutes.ToString() + "min ";
        }

        return result;
    }
}

<div class="grid4">
    <a name="details"></a><h2>Command Details</h2>

    <p>
        This command is configured to be triggered <strong>@((Model.NextTriggerDelay.HasValue) ? "automatically every " + TriggerDelayToString(Model.NextTriggerDelay.Value) : "manually").</strong>
    </p>

    <table class="tableKeyValue">
        <tbody>
            <tr>
                <th>Name:</th>
                <td>
                    <img class="icon" src="~/Content/Themes/Base/Images/@img" alt="State" title="@title" />
                    @Model.Description
                </td>
            </tr>
            <tr>
                <th>Applies to Branch:</th>
                <td>@Html.ActionLink(Model.Branch, "Branch", "Build", new { id = Model.BranchConfigID }, null)</td>
            </tr>
            <tr>
                <th>Applies to Platform:</th>
                <td>@Model.Platform</td>
            </tr>
            <tr>
                <th>Last Operator:</th>
                <td>
                    @if (Model.Operator != "AutoTimer")
                    {
                        @Html.ActionLink(@Model.Operator, "UserProfile", "Home", new { id = @Model.Operator }, null)
                        <a href="mailto:@(Model.Operator + "@epicgames.com")?subject=Regarding build command @Model.Command on branch @Model.Branch"><img class="icon" src="~/Content/Themes/Base/Images/iconOutlook.png" alt="IM" /></a>
                        <a href="sip:@(Model.Operator + "@epicgames.com")"><img class="icon" src="~/Content/Themes/Base/Images/iconLync.png" alt="Send Email" /></a>
                    }
                    else
                    {
                        @Model.Operator
                    }
                </td>
            </tr>
            <tr>
                <th>Last Good Label</th>
                <td>@Model.LastGoodLabel</td>
            </tr>
            <tr>
                <th>Last Good Changelist:</th>
                <td>@Html.ActionLink("CL " + Model.LastGoodChangeList.ToString(), "Changelist", "Build", new { id = Model.LastGoodChangeList }, null) on @Model.LastGoodDateTime.ToString()</td>
            </tr>
            @if (Model.LastAttemptedChangeList != Model.LastGoodChangeList)
            {
                <tr class="bad">
                    <th>Last Attempted Changelist:</th>
                    <td>@Html.ActionLink("CL " + Model.LastAttemptedChangeList.ToString(), "Changelist", "Build", new { id = Model.LastAttemptedChangeList }, null) on @Model.LastAttemptedDateTime.ToString()</td>
                </tr>
            }
            @if (Model.Killing)
            {
                <tr>
                    <th>Is Being Killed By:</th>
                    <td>@Model.Killer</td>
                </tr>
            }
            @if (Model.NextTrigger.HasValue)
            {
                <tr>
                    <th>Next Trigger:</th>
                    <td>@Model.NextTrigger.Value.ToString()</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="grid2">
    <h2>&nbsp;</h2>

    @if (Model.Type == 3)
    {
        <a class="button" href="@Url.RouteUrl(new { action = "Promote", controller = "Build", id = Model.ID })" title="Stop Command">Promote a Label</a>
    }
    else if (Model.StartTime.HasValue || Model.Pending)
    {
        <a class="button" href="javascript: stopCommand(@Model.ID)" title="Stop Command">Stop Command</a>
    }
    else
    {
        <a class="button" href="javascript: triggerCommand(@Model.ID)" title="Trigger Command">Trigger Command</a>
    }
</div>