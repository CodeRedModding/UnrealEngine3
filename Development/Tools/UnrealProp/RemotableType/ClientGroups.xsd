<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ClientGroups" targetNamespace="http://tempuri.org/ClientGroups.xsd" xmlns:mstns="http://tempuri.org/ClientGroups.xsd" xmlns="http://tempuri.org/ClientGroups.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="UPropConnectionString" ConnectionStringObject="" IsAppSettingsProperty="True" Modifier="Assembly" Name="UPropConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.RemotableType.Properties.Settings.GlobalReference.Default.UPropConnectionString" Provider="System.Data.SqlClient">
          </Connection>
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ClientGroupsTableAdapter" GeneratorDataComponentClassName="ClientGroupsTableAdapter" Name="ClientGroups" UserDataComponentName="ClientGroupsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="UPropConnectionString (Settings)" DbObjectName="UnrealProp.dbo.ClientGroups" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="False" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>DELETE FROM [ClientGroups] WHERE (([ID] = @Original_ID) AND ([GroupName] = @Original_GroupName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_GroupName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>INSERT INTO [ClientGroups] ([GroupName]) VALUES (@GroupName);
SELECT ID, GroupName FROM ClientGroups WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT ID, GroupName FROM ClientGroups</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>UPDATE [ClientGroups] SET [GroupName] = @GroupName WHERE (([ID] = @Original_ID) AND ([GroupName] = @Original_GroupName));
SELECT ID, GroupName FROM ClientGroups WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_GroupName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="ID" ColumnName="ID" DataSourceName="UnrealProp.dbo.ClientGroups" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="ID" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GroupName" DataSetColumn="GroupName" />
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="UPropConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillForPlatform" GenerateMethods="Both" GenerateShortCommands="True" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FillForPlatform" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetDataBy" UserSourceName="FillForPlatform">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT DISTINCT ClientGroups.GroupName, ClientGroups.ID, ClientMachines.ClientGroupID, ClientMachines.PlatformID FROM ClientGroups INNER JOIN ClientMachines ON ClientMachines.ClientGroupID = ClientGroups.ID 
WHERE (ClientMachines.PlatformID = @PlatformID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="PlatformID" ColumnName="PlatformID" DataSourceName="UnrealProp.dbo.ClientMachines" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@PlatformID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="PlatformID" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ClientGroups" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="ClientGroups" msprop:Generator_DataSetName="ClientGroups">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ClientGroups" msprop:Generator_UserTableName="ClientGroups" msprop:Generator_RowDeletedName="ClientGroupsRowDeleted" msprop:Generator_RowChangedName="ClientGroupsRowChanged" msprop:Generator_RowClassName="ClientGroupsRow" msprop:Generator_RowChangingName="ClientGroupsRowChanging" msprop:Generator_RowEvArgName="ClientGroupsRowChangeEvent" msprop:Generator_RowEvHandlerName="ClientGroupsRowChangeEventHandler" msprop:Generator_TableClassName="ClientGroupsDataTable" msprop:Generator_TableVarName="tableClientGroups" msprop:Generator_RowDeletingName="ClientGroupsRowDeleting" msprop:Generator_TablePropName="_ClientGroups">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GroupName" msprop:Generator_UserColumnName="GroupName" msprop:Generator_ColumnVarNameInTable="columnGroupName" msprop:Generator_ColumnPropNameInRow="GroupName" msprop:Generator_ColumnPropNameInTable="GroupNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="32" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ClientGroups" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
</xs:schema>