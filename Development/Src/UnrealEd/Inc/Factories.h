/*=============================================================================
	Factories.h: Unreal Engine factory types.
	Copyright 1998-2013 Epic Games, Inc. All Rights Reserved.
=============================================================================*/

#ifndef __FACTORIES_H__
#define __FACTORIES_H__

class UTexture2DFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UTexture2DFactoryNew,UFactory,CLASS_CollapseCategories|0,UnrealEd)

	/** width of new texture */
	INT		Width;
	/** height of new texture */
	INT		Height;

	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew( UClass* InClass, UObject* InParent, FName InName, EObjectFlags Flags, UObject* Context, FFeedbackContext* Warn );
};

class UTextureCubeFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UTextureCubeFactoryNew,UFactory,CLASS_CollapseCategories|0,UnrealEd)
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew( UClass* InClass, UObject* InParent, FName InName, EObjectFlags Flags, UObject* Context, FFeedbackContext* Warn );
};

class UMaterialInstanceConstantFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UMaterialInstanceConstantFactoryNew,UFactory,CLASS_CollapseCategories|0,UnrealEd);
public:

	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};

class UMaterialInstanceTimeVaryingFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UMaterialInstanceTimeVaryingFactoryNew,UFactory,CLASS_CollapseCategories|0,UnrealEd);
public:
	void StaticConstructor();
	/**
	* Initializes property values for intrinsic classes.  It is called immediately after the class default object
	* is initialized against its archetype, but before any objects of this class are created.
	*/
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};

class UMaterialFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UMaterialFactory,UFactory,0,UnrealEd);
public:
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateText( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn );
	/**
	 *	Initializes the given Material from the MaterialData text block supplied.
	 *	The MaterialData text block is assumed to have been generated by the UMaterialExporterT3D.
	 *
	 */
	UBOOL InitializeFromT3DMaterialDataText(UMaterial* InMaterial, const FString& Text, FFeedbackContext* Warn );
};

class UMaterialFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UMaterialFactoryNew,UFactory,CLASS_CollapseCategories,UnrealEd);
public:

	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};

class UMaterialFunctionFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UMaterialFunctionFactoryNew,UFactory,CLASS_CollapseCategories,UnrealEd);
public:

	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};

class UDecalMaterialFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UDecalMaterialFactoryNew,UFactory,CLASS_CollapseCategories,UnrealEd);
public:

	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};

class UTerrainMaterialFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UTerrainMaterialFactoryNew,UFactory,CLASS_CollapseCategories,UnrealEd);
public:

	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};

class UTerrainLayerSetupFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UTerrainLayerSetupFactory,UFactory,CLASS_CollapseCategories,UnrealEd);
	UTerrainLayerSetupFactory();
	void StaticConstructor();
	UObject* FactoryCreateText(UClass* InClass, UObject* InParent, FName InName, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn);
};

class UTerrainLayerSetupFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UTerrainLayerSetupFactoryNew,UFactory,CLASS_CollapseCategories,UnrealEd);
public:

	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};

class UClassFactoryUC : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UClassFactoryUC,UFactory,0,UnrealEd)
	UClassFactoryUC();
	UObject* FactoryCreateText( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn );
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	static const TCHAR* const ProcessedFileExtension;
	static const TCHAR* const ProcessedFileDirectory;
	static const TCHAR* const ExportPostProcessedParameter;
	static const TCHAR* const SuppressPreprocessorParameter;

private:
	/**
	 * Parses the text specified for a collection of comma-delimited class names, surrounded by parenthesis, using the specified keyword.
	 *
	 * @param	InputText				pointer to the text buffer to parse; will be advanced past the text that was parsed.
	 * @param	GroupName				the group name to parse (i.e. DependsOn, Implements, Inherits, etc.)
	 * @param	out_ParsedClassNames	receives the list of class names that were parsed.
	 *
	 * @return	TRUE if the group name specified was found and entries were added to the list
	 */
	UBOOL ParseDependentClassGroup( const TCHAR*& InputText, const TCHAR* const GroupName, TArray<FName>& out_ParsedClassNames );
};

class ULevelFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC(ULevelFactory,UFactory,0,UnrealEd)
	ULevelFactory();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateText( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn );
};

class UPackageFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UPackageFactory,UFactory,0,UnrealEd)
	UPackageFactory();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateText( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn );
};

class UPolysFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UPolysFactory,UFactory,0,UnrealEd)
	UPolysFactory();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateText( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn );
};

class UModelFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UModelFactory,UFactory,0,UnrealEd)
	UModelFactory();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateText( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn );
};

class UStaticMeshFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UStaticMeshFactory,UFactory,0,UnrealEd)
	INT	Pitch,
		Roll,
		Yaw;
	UBOOL bOneConvexPerUCXObject;
	UBOOL bSingleSmoothGroupSingleTangent;
	// Whether or not to replace vertex colors with ones from the imported file.
	UBOOL bReplaceVertexColors;

	UStaticMeshFactory();
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateText( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn );

	/**
	 *	Initializes the given staticmesh from the SMData text block supplied.
	 *	The SMData text block is assumed to have been generated by the UStaticMeshExporterT3D.
	 *
	 */
	UBOOL InitializeFromT3DSMDataText(UStaticMesh* InStaticMesh, const FString& Text, FFeedbackContext* Warn );
};

class UReimportStaticMeshFactory : public UStaticMeshFactory, FReimportHandler
{
	DECLARE_CLASS_INTRINSIC(UReimportStaticMeshFactory,UStaticMeshFactory,CLASS_CollapseCategories,UnrealEd)    

	UReimportStaticMeshFactory();  

public:
	void StaticConstructor();
	/**
	* Initializes property values for intrinsic classes.  It is called immediately after the class default object
	* is initialized against its archetype, but before any objects of this class are created.
	*/
	void InitializeIntrinsicPropertyValues();

	/**
	* Re-imports specified static mesh from its source material, if the meta-data exists
	* @param Package static mesh to re-import
	*/
	virtual UBOOL Reimport( UObject* Obj );
};

class UFbxFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UFbxFactory,UFactory,0,UnrealEd)

	UFbxFactory();

	void StaticConstructor();

	/**
	* Initializes property values for intrinsic classes.  It is called immediately after the class default object
	* is initialized against its archetype, but before any objects of this class are created.
	*/
	void InitializeIntrinsicPropertyValues();

	UClass* ResolveSupportedClass();

	UObject* FactoryCreateBinary(UClass* InClass, UObject* InParent, FName InName, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const BYTE*& Buffer, const BYTE* BufferEnd, FFeedbackContext* Warn);

	/**
	 * Detect mesh type to import: Static Mesh or Skeletal Mesh.
	 * Only the first mesh will be detected.
	 *
	 * @param InFilename	FBX file name
	 * @return UBOOL	return TRUE if parse the file successfully
	 */
	UBOOL DetectImportType(const FFilename& InFilename);

	UFbxImportUI* ImportUI;

protected:

#if WITH_FBX

	UObject* RecursiveImportNode(void* FbxImporter, void* Node, UBOOL bDoCreateActors, UObject* InParent, FName InName, EObjectFlags Flags, INT& Index, INT Total);
	UObject* ImportANode(void* VoidFbxImporter, void* VoidNode, UBOOL bDoCreateActors, UObject* InParent, FName InName, EObjectFlags Flags, INT& NodeIndex, INT Total = 0, UObject* InMesh = NULL, int LODIndex = 0);
#endif	// WITH_FBX
};

class UReimportFbxStaticMeshFactory : public UFbxFactory, FReimportHandler
{
	DECLARE_CLASS_INTRINSIC(UReimportFbxStaticMeshFactory,UFbxFactory,CLASS_CollapseCategories,UnrealEd)

	UReimportFbxStaticMeshFactory();  

public:
	void StaticConstructor();
	/**
	* Initializes property values for intrinsic classes.  It is called immediately after the class default object
	* is initialized against its archetype, but before any objects of this class are created.
	*/
	void InitializeIntrinsicPropertyValues();

	/**
	* Re-imports specified static mesh from its source material, if the meta-data exists
	* @param Package static mesh to re-import
	*/
	virtual UBOOL Reimport( UObject* Obj );
};

class USkeletalMeshFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC(USkeletalMeshFactory,UFactory,0,UnrealEd)	
    UBOOL bAssumeMayaCoordinates;
	class FSkelMeshOptionalImportData* OptionalImportData;
	USkeletalMeshFactory(class FSkelMeshOptionalImportData* InOptionalImportData=NULL);
	void StaticConstructor();	
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateBinary( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const BYTE*& Buffer, const BYTE* BufferEnd, FFeedbackContext* Warn );
};

/**
 * Factory for re-importing skeletal meshes
 */
class UReimportSkeletalMeshFactory : public USkeletalMeshFactory, FReimportHandler
{
	DECLARE_CLASS_INTRINSIC(UReimportSkeletalMeshFactory,USkeletalMeshFactory,CLASS_CollapseCategories,UnrealEd)    

public:
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();

	/**
	 * Re-imports specified skeletal mesh from its source material, if the meta-data exists
	 * @param	Obj	Skeletal mesh to attempt to re-import
	 */
	virtual UBOOL Reimport( UObject* Obj );
};


class UReimportFbxSkeletalMeshFactory : public UFbxFactory, FReimportHandler
{
	DECLARE_CLASS_INTRINSIC(UReimportFbxSkeletalMeshFactory,UFbxFactory,CLASS_CollapseCategories,UnrealEd)

public:
	void StaticConstructor();
	/**
	* Initializes property values for intrinsic classes.  It is called immediately after the class default object
	* is initialized against its archetype, but before any objects of this class are created.
	*/
	void InitializeIntrinsicPropertyValues();

	/**
	* Re-imports specified skeletal mesh from its source material, if the meta-data exists
	* @param Obj Skeletal mesh to attempt to re-import
	*/
	virtual UBOOL Reimport( UObject* Obj );
};

class USoundFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC( USoundFactory, UFactory, 0, UnrealEd)
	USoundFactory( void );
	void StaticConstructor( void );
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues( void );
	UObject* FactoryCreateBinary( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const BYTE*& Buffer, const BYTE* BufferEnd, FFeedbackContext* Warn );
	
	/** Suppresses the import overwrite dialog until one iteration of FactoryCreateBinary completes; this is primarily used for reimporting sounds */
	static void SuppressImportOverwriteDialog();

	UBOOL bAutoCreateCue;

	/**
	 * If TRUE, include specific sound node
	 */
	UBOOL bIncludeAttenuationNode;
	UBOOL bIncludeLoopingNode;
	UBOOL bIncludeModulatorNode;

	FLOAT CueVolume;

	/** If not empty, imported waves will be placed in PackageCuePackageSuffix, but only if bAutoCreateCue is true. */
	FString CuePackageSuffix;

private:
	/** If TRUE, the overwrite dialog should not be shown while importing */
	static UBOOL bSuppressImportOverwriteDialog;
};

/** Factory for re-importing sound node waves */
class UReimportSoundFactory : public USoundFactory, FReimportHandler
{
	DECLARE_CLASS_INTRINSIC(UReimportSoundFactory,USoundFactory,CLASS_CollapseCategories,UnrealEd)
public:
	void StaticConstructor();
	
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();

	/**
	 * Re-imports specified skeletal mesh from its source material, if the meta-data exists
	 * @param	Obj	Sound node wave to attempt to re-import
	 */
	virtual UBOOL Reimport( UObject* Obj );
};

class USoundTTSFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC( USoundTTSFactory, UFactory, 0, UnrealEd)

	void StaticConstructor( void );

	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues( void );

	/** 
	 * Create a new instance of USoundNodeWave
	 */
	UObject* FactoryCreateNew( UClass* InClass, UObject* InParent, FName InName, EObjectFlags Flags, UObject* Context, FFeedbackContext* Warn );

	/** 
	 * Automatically create sound cue with this wave
	 */
	UBOOL bAutoCreateCue;

	/**
	 * If TRUE, include specific sound node
	 */
	UBOOL bIncludeAttenuationNode;
	UBOOL bIncludeLoopingNode;
	UBOOL bIncludeModulatorNode;

	UBOOL bUseTTS;
	FString SpokenText;
	FLOAT CueVolume;
};

class USoundSurroundFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC( USoundSurroundFactory, UFactory, 0, UnrealEd)
	USoundSurroundFactory( void );
	void StaticConstructor( void );
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues( void );
	UObject* FactoryCreateBinary( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const BYTE*& Buffer, const BYTE* BufferEnd, FFeedbackContext* Warn );
	UBOOL FactoryCanImport( const FFilename& Filename );

	FLOAT CueVolume;

	static const FString SpeakerLocations[SPEAKER_Count];
};

class USoundCueFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC( USoundCueFactoryNew, UFactory, 0, UnrealEd )
	void StaticConstructor( void );
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues( void );
	UObject* FactoryCreateNew( UClass* InClass, UObject* InParent, FName InName, EObjectFlags Flags, UObject* Context, FFeedbackContext* Warn );
};

class USoundModeFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC( USoundModeFactory, UFactory, 0, UnrealEd )
	USoundModeFactory( void );
	void StaticConstructor( void );
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues( void );
	UObject* FactoryCreateNew( UClass* InClass, UObject* InParent, FName InName, EObjectFlags Flags, UObject* Context, FFeedbackContext* Warn );
};

class USoundClassFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC( USoundClassFactory, UFactory, 0, UnrealEd )
	USoundClassFactory( void );
	void StaticConstructor( void );
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues( void );
	UObject* FactoryCreateNew( UClass* InClass, UObject* InParent, FName InName, EObjectFlags Flags, UObject* Context, FFeedbackContext* Warn );
};

class UFonixFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC( UFonixFactory, UFactory, 0, UnrealEd )
	UFonixFactory( void );
	void StaticConstructor( void );
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues( void );
	UObject* FactoryCreateNew( UClass* InClass, UObject* InParent, FName InName, EObjectFlags Flags, UObject* Context, FFeedbackContext* Warn );
};

class ULensFlareFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(ULensFlareFactoryNew,UFactory,0,UnrealEd)
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};

class UParticleSystemFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UParticleSystemFactoryNew,UFactory,0,UnrealEd)
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};

class UApexGenericAssetFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UApexGenericAssetFactory,UFactory,0,UnrealEd)
	UApexGenericAssetFactory();
	void StaticConstructor();
	/**
	* Initializes property values for intrinsic classes.  It is called immediately after the class default object
 	* is initialized against its archetype, but before any objects of this class are created.
	*/
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateBinary( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const BYTE*& Buffer, const BYTE* BufferEnd, FFeedbackContext* Warn );
	UObject* FactoryCreateNew( UClass* InClass, UObject* InParent, FName InName, EObjectFlags Flags, UObject* Context, FFeedbackContext* Warn );
};
/**
 * Factory for re-importing Apex assets
 */
class UReimportApexGenericAssetFactory : public UApexGenericAssetFactory, FReimportHandler
{
	DECLARE_CLASS_INTRINSIC(UReimportApexGenericAssetFactory,UApexGenericAssetFactory,CLASS_CollapseCategories,UnrealEd)    

public:
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();

	/**
	 * Re-imports specified skeletal mesh from its source material, if the meta-data exists
	 * @param	Obj	Skeletal mesh to attempt to re-import
	 */
	virtual UBOOL Reimport( UObject* Obj );
};
class UApexDestructibleDamageParametersFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UApexDestructibleDamageParametersFactoryNew,UFactory,0,UnrealEd)
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};
 
class UFractureMaterialFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UFractureMaterialFactoryNew,UFactory,0,UnrealEd)
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};
 
class UPhysXParticleSystemFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UPhysXParticleSystemFactoryNew,UFactory,0,UnrealEd)
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};

class UAnimSetFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UAnimSetFactoryNew,UFactory,0,UnrealEd)
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};

class UAnimTreeFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UAnimTreeFactoryNew,UFactory,0,UnrealEd)
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};


class UPostProcessFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UPostProcessFactoryNew,UFactory,0,UnrealEd)
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};

class UPhysicalMaterialFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UPhysicalMaterialFactoryNew,UFactory,0,UnrealEd)
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};

class UTextureMovieFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UTextureMovieFactory,UFactory,CLASS_CollapseCategories,UnrealEd);

	/** load to memory or stream from file */
	BYTE	MovieStreamSource;

	UTextureMovieFactory();
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateBinary( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const BYTE*& Buffer, const BYTE* BufferEnd, FFeedbackContext* Warn );
};

/** 
 * Factory that creates TextureRenderTarget objects
 */
class UTextureRenderTargetFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UTextureRenderTargetFactoryNew,UFactory,0,UnrealEd);

	/** width of new texture */
	INT		Width;
	/** height of new texture */
	INT		Height;
	/** surface format of new texture */
	BYTE	Format;
	
	UTextureRenderTargetFactoryNew();
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};

/** 
 * Factory that creates TextureRenderTargetCube objects
 */
class UTextureRenderTargetCubeFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UTextureRenderTargetCubeFactoryNew,UFactory,0,UnrealEd);

	/** width of new texture */
	INT		Width;
	/** surface format of new texture */
	BYTE	Format;
	
	UTextureRenderTargetCubeFactoryNew();
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};

class UTextureFactory : public UFactory
{
public:
	DECLARE_CLASS_INTRINSIC(UTextureFactory,UFactory,CLASS_CollapseCategories,UnrealEd)
	UBOOL						NoCompression,
								NoAlpha,
								bDeferCompression;
	BYTE						CompressionSettings;

	UBOOL bCreateMaterial, bRGBToDiffuse, bRGBToEmissive, bAlphaToSpecular, bAlphaToEmissive, bAlphaToOpacity, bAlphaToOpacityMask, bTwoSided;
	BYTE Blending;
	BYTE LightingModel;
	BYTE LODGroup;
	UBOOL bFlipBook;
	UBOOL bLightMap;
	UBOOL bDitherMipMapAlpha;
	UBOOL bPreserveBorderR;
	UBOOL bPreserveBorderG;
	UBOOL bPreserveBorderB;
	UBOOL bPreserveBorderA;
	BYTE MipGenSettings;
	UBOOL bFlipNormalMapGreen;

	UTextureFactory();
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateBinary( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const BYTE*& Buffer, const BYTE* BufferEnd, FFeedbackContext* Warn );
	/**
	* Create a texture given the appropriate input parameters
	*/
	virtual UTexture2D* CreateTexture( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags );

	/**
	 * Suppresses the dialog box that, when importing over an existing texture, asks if the users wishes to overwrite its settings.
	 * This is primarily for reimporting textures.
	 */
	static void SuppressImportOverwriteDialog();
 
	/* Suppresses any warning dialogs about import resolution from popping up during operations that aren't concerned with the warnings. */
	static void SuppressImportResolutionWarningDialog();

	/**
	 *	Initializes the given texture from the TextureData text block supplied.
	 *	The TextureData text block is assumed to have been generated by the UTextureExporterT3D.
	 *
	 *	@param	InTexture	The texture to initialize
	 *	@param	Text		The texture data text generated by the TextureExporterT3D
	 *	@param	Warn		Where to send warnings/errors
	 *
	 *	@return	UBOOL		TRUE if successful, FALSE if not
	 */
	UBOOL InitializeFromT3DTextureDataText(UTexture* InTexture, const FString& Text, FFeedbackContext* Warn);
	UBOOL InitializeFromT3DTexture2DDataText(UTexture2D* InTexture2D, const TCHAR*& Buffer, FFeedbackContext* Warn);
	void FindCubeMapFace(const FString& ParsedText, const FString& FaceString, UTextureCube& TextureCube, UTexture2D*& TextureFace);
	UBOOL InitializeFromT3DTextureCubeDataText(UTextureCube* InTextureCube, const TCHAR*& Buffer, FFeedbackContext* Warn);

private:
	/** This variable is static because in StaticImportObject() the type of the factory is not known. */
	static UBOOL bSuppressImportOverwriteDialog;

	/** Whether to suppress one time warnings or not */
	static UBOOL bSuppressImportResolutionWarnings;

	/**
	*	Tests if the given height and width specify a supported texture resolution to import; Can optionally check if the height/width are powers of two
	*
	*	@param	Width					The width of an imported texture whose validity should be checked
	*	@param	Height					The height of an imported texture whose validity should be checked
	*	@param	bAllowNonPowerOfTwo		Whether or not non-power-of-two textures are allowed
	*	@param	Warn					Where to send warnings/errors
	*
	*	@return	UBOOL					TRUE if the given height/width represent a supported texture resolution, FALSE if not
	*/
	UBOOL IsImportResolutionValid(INT Width, INT Height, UBOOL bAllowNonPowerOfTwo, FFeedbackContext* Warn) const;
};

/**
* Factory to handle texture reimporting from source media to package files
*/
class UReimportTextureFactory : public UTextureFactory, FReimportHandler
{
	DECLARE_CLASS_INTRINSIC(UReimportTextureFactory,UTextureFactory,CLASS_CollapseCategories,UnrealEd)    

	UReimportTextureFactory();
	UTexture2D* CreateTexture( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags );
	UTexture2D* pOriginalTex;    

public:
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();

	/**
	* Reimports specified texture from its source material, if the meta-data exists
	* @param Package texture to reimport
	*/
	virtual UBOOL Reimport( UObject* Obj );
};

class UVolumeTextureFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UVolumeTextureFactory,UFactory,CLASS_CollapseCategories,UnrealEd)
	UBOOL						NoAlpha,
								bDeferCompression;
	UVolumeTextureFactory();
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateBinary( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const BYTE*& Buffer, const BYTE* BufferEnd, FFeedbackContext* Warn );
};

enum EFontCharacterSet
{
	CHARSET_Default,
	CHARSET_Ansi,
	CHARSET_Symbol,
};

class UFontFactory : public UTextureFactory
{
	DECLARE_CLASS_INTRINSIC(UFontFactory,UTextureFactory,0,UnrealEd)
	UFontFactory();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateBinary( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const BYTE*& Buffer, const BYTE* BufferEnd, FFeedbackContext* Warn );
};

class UTrueTypeFontFactory : public UFontFactory, FReimportHandler
{
	DECLARE_CLASS_INTRINSIC(UTrueTypeFontFactory,UFontFactory,CLASS_CollapseCategories,UnrealEd)

	/** Import options for this font */
	UFontImportOptions* ImportOptions;


	UTrueTypeFontFactory();
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew( UClass* InClass, UObject* InParent, FName InName, EObjectFlags Flags, UObject* Context, FFeedbackContext* Warn );

	virtual UBOOL Reimport( UObject* Obj );

	/** Creates the import options structure for this font */
	void SetupFontImportOptions();

#if __WIN32__
	/**
	 * Win32 Platform Only: Creates a single font texture using the Windows GDI
	 *
	 * @param Font (In/Out) The font we're operating with
	 * @param dc The device context configured to paint this font
	 * @param RowHeight Height of a font row in pixels
	 * @param TextureNum The current texture index
	 *
	 * @return Returns the newly created texture, if successful, otherwise NULL
	 */
	UTexture2D* CreateTextureFromDC( UFont* Font, HDC dc, INT RowHeight, INT TextureNum );

	/**
	 * Win32 Platform Only: Imports a TrueType font
	 *
	 * @param Font (In/Out) The font object that we're importing into
	 * @param Warn Feedback context for displaying warnings and errors
	 * @param NumResolutions Number of resolution pages we should generate 
	 * @param ResHeights Font height for each resolution (one array entry per resolution)
	 *
	 * @return TRUE if successful
	 */
	UBOOL ImportTrueTypeFont(
		UFont* Font,
		FFeedbackContext* Warn,
		const INT NumResolutions,
		const TArray< FLOAT >& ResHeights );
#endif

};



class UTrueTypeMultiFontFactory : public UTrueTypeFontFactory
{
	DECLARE_CLASS_INTRINSIC(UTrueTypeMultiFontFactory,UTrueTypeFontFactory,CLASS_CollapseCategories,UnrealEd)

	TArray<FLOAT>			ResTests;
	TArray<FLOAT>			ResHeights;
	TArrayNoInit<UFont*>	ResFonts;

	UTrueTypeMultiFontFactory();
	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();

	UObject* FactoryCreateNew( UClass* InClass, UObject* InParent, FName InName, EObjectFlags Flags, UObject* Context, FFeedbackContext* Warn );
};

class USphericalHarmonicMapFactorySHM : public UFactory
{
	DECLARE_CLASS_INTRINSIC(USphericalHarmonicMapFactorySHM,UFactory,0,UnrealEd);
public:

	USphericalHarmonicMapFactorySHM();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateBinary(
		UClass* InClass,
		UObject* InOuter,
		FName InName,
		EObjectFlags InFlags,
		UObject* Context,
		const TCHAR* Type,
		const BYTE*& Buffer,
		const BYTE* BufferEnd,
		FFeedbackContext* Warn
		);
};

class USequenceFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC(USequenceFactory,UFactory,0,UnrealEd);
	USequenceFactory();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateText( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn );
};

class ULinkedObjectFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC(ULinkedObjectFactory,UFactory,0,UnrealEd);
	
	UClass* AllowedCreateClass;
	
	ULinkedObjectFactory();
	/**
	* Initializes property values for intrinsic classes.  It is called immediately after the class default object
	* is initialized against its archetype, but before any objects of this class are created.
	*/
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateText( UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn );
	
	
};

struct	FNoiseParameter;
struct	FFilterLimit;
class	UTerrainLayerSetup;
struct	FTerrainFilteredMaterial;
struct	FTerrainDecorationInstance;
struct	FTerrainDecoration;
struct	FTerrainDecoLayer;
struct	FTerrainLayer;
class	UTerrainHeightMapFactory;
struct	FAlphaMap;

class UTerrainFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UTerrainFactory, UFactory, 0, UnrealEd);
	UTerrainFactory();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateText(UClass* InClass, UObject* InParent, FName InName, EObjectFlags Flags, UObject* Context, const TCHAR* Type, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn);

	TMap<AActor*,FString>*	ActorMap;

	UBOOL	ParseNoiseParameter(FNoiseParameter* Noise, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn);
	UBOOL	ParseFilterLimit(FFilterLimit* Limit, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn);
	UBOOL	ParseLayerSetupMaterial(ATerrain* Terrain, UTerrainLayerSetup& Setup, FTerrainFilteredMaterial& Material, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn);
	UBOOL	ParseLayerSetup(ATerrain* Terrain, FTerrainLayer& Layer, UTerrainLayerSetup& Setup, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn);
	UBOOL	ParseLayer(ATerrain* Terrain, FTerrainLayer& Layer, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn);
	UBOOL	ParseLayerData(ATerrain* Terrain, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn);
	UBOOL	ParseDecorationInstace(ATerrain* Terrain, FTerrainDecorationInstance& Instance, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn);
	UBOOL	ParseDecoration(ATerrain* Terrain, FTerrainDecoration& Decoration, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn);
	UBOOL	ParseDecoLayer(ATerrain* Terrain, FTerrainDecoLayer& DecoLayer, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn);
	UBOOL	ParseDecoLayerData(ATerrain* Terrain, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn);
	UBOOL	ParseAlphaMap(FAlphaMap& AlphaMap, INT Count, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn);
	UBOOL	ParseAlphaMapData(ATerrain* Terrain, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn);

	static	UTerrainHeightMapFactory*	GetHeightMapImporter(const TCHAR* FactoryName);
};

class UTerrainHeightMapFactory : public UObject
{
	DECLARE_CLASS_INTRINSIC(UTerrainHeightMapFactory, UObject,CLASS_Abstract|0,UnrealEd);
	UTerrainHeightMapFactory();
	void StaticConstructor();
	virtual UBOOL ImportHeightDataFromText(ATerrain* Terrain, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn, UBOOL bGenerateTerrainFromHeightMap = false);
	virtual UBOOL ImportHeightDataFromBinary(ATerrain* Terrain, const BYTE*& Buffer, const BYTE* BufferEnd, FFeedbackContext* Warn, UBOOL bGenerateTerrainFromHeightMap = false);
};

class UTerrainHeightMapFactoryTextT3D : public UTerrainHeightMapFactory
{
	DECLARE_CLASS_INTRINSIC(UTerrainHeightMapFactoryTextT3D, UTerrainHeightMapFactory, 0,UnrealEd);
	UTerrainHeightMapFactoryTextT3D();
	void StaticConstructor();
	virtual UBOOL ImportHeightDataFromText(ATerrain* Terrain, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn, UBOOL bGenerateTerrainFromHeightMap = false);
};

class UTerrainHeightMapFactoryG16BMP : public UTerrainHeightMapFactory
{
	DECLARE_CLASS_INTRINSIC(UTerrainHeightMapFactoryG16BMP, UTerrainHeightMapFactory, 0,UnrealEd);
	UTerrainHeightMapFactoryG16BMP();
	void StaticConstructor();
	virtual UBOOL ImportHeightDataFromFile(ATerrain* Terrain, const TCHAR* FileName, FFeedbackContext* Warn, UBOOL bGenerateTerrainFromHeightMap = false);
	virtual UBOOL ImportHeightDataFromBinary(ATerrain* Terrain, const BYTE*& Buffer, const BYTE* BufferEnd, FFeedbackContext* Warn, UBOOL bGenerateTerrainFromHeightMap = false);
	virtual UBOOL ImportLayerDataFromFile(ATerrain* Terrain, FTerrainLayer* Layer, const TCHAR* FileName, FFeedbackContext* Warn);
	virtual UBOOL ImportLayerDataFromBinary(ATerrain* Terrain, FTerrainLayer* Layer, const BYTE*& Buffer, const BYTE* BufferEnd, FFeedbackContext* Warn);
};

class UTerrainHeightMapFactoryG16BMPT3D : public UTerrainHeightMapFactoryG16BMP
{
	DECLARE_CLASS_INTRINSIC(UTerrainHeightMapFactoryG16BMPT3D, UTerrainHeightMapFactoryG16BMP, 0,UnrealEd);
	UTerrainHeightMapFactoryG16BMPT3D();
	void StaticConstructor();
	virtual UBOOL ImportHeightDataFromText(ATerrain* Terrain, const TCHAR*& Buffer, const TCHAR* BufferEnd, FFeedbackContext* Warn, UBOOL bGenerateTerrainFromHeightMap = false);
	virtual UBOOL ImportHeightDataFromBinary(ATerrain* Terrain, const BYTE*& Buffer, const BYTE* BufferEnd, FFeedbackContext* Warn, UBOOL bGenerateTerrainFromHeightMap = false);
};


/** morph target import error codes */
enum EMorphImportError
{
	// success
	MorphImport_OK=0,
	// target mesh exists
	MorphImport_AlreadyExists,
	// source file was not loaded
	MorphImport_CantLoadFile,
	// source file format is invalid
	MorphImport_InvalidMeshFormat,
	// source mesh vertex data doesn't match base
	MorphImport_MismatchBaseMesh,
	// source mesh is missing its metadata
	// needs to be reimported
	MorphImport_ReimportBaseMesh,
	// LOD index was out of range by more than 1
	MorphImport_InvalidLODIndex,
	// Missing morph target
	MorphImport_MissingMorphTarget,
	// max
	MorphImport_MAX
};

/**
 * Utility class for importing a new morph target
 */
class FMorphTargetBinaryImport
{
public:
	/** for outputing warnings */
	FFeedbackContext* Warn;
	/** raw mesh data used for calculating differences */
	FMorphMeshRawSource BaseMeshRawData;
	/** base mesh lod entry to use */
	INT BaseLODIndex;
	/** the base mesh */
	UObject* BaseMesh;

	FMorphTargetBinaryImport( USkeletalMesh* InSrcMesh, INT LODIndex=0, FFeedbackContext* InWarn=GWarn );
	FMorphTargetBinaryImport( UStaticMesh* InSrcMesh, INT LODIndex=0, FFeedbackContext* InWarn=GWarn );

	UMorphTarget* ImportMorphMeshToSet( UMorphTargetSet* DestMorphSet, FName Name, const TCHAR* SrcFilename, UBOOL bReplaceExisting, EMorphImportError* Error=NULL );
	void ImportMorphLODModel( UMorphTarget* MorphTarget, const TCHAR* SrcFilename, INT LODIndex, EMorphImportError* Error=NULL );
    virtual USkeletalMesh* CreateSkeletalMesh(const TCHAR* SrcFilename, EMorphImportError* Error ) = 0;
};

class FMorphTargetBinaryPSKImport : public FMorphTargetBinaryImport
{
public:
    FMorphTargetBinaryPSKImport( USkeletalMesh* InSrcMesh, INT LODIndex=0, FFeedbackContext* InWarn=GWarn );
    virtual USkeletalMesh* CreateSkeletalMesh(const TCHAR* SrcFilename, EMorphImportError* Error );
};

/** CurveEdPresetCurve factory */
class UCurveEdPresetCurveFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UCurveEdPresetCurveFactoryNew,UFactory,CLASS_CollapseCategories,UnrealEd);
public:

	void StaticConstructor();
	/**
	 * Initializes property values for intrinsic classes.  It is called immediately after the class default object
	 * is initialized against its archetype, but before any objects of this class are created.
	 */
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};

/** ProcBuildingRuleset factory */
class UProcBuildingRulesetFactoryNew : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UProcBuildingRulesetFactoryNew,UFactory,0,UnrealEd)
	void StaticConstructor();
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};

/** CameraAnim factory */
class UCameraAnimFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UCameraAnimFactory,UFactory,0,UnrealEd);
public:
	void StaticConstructor();
	/**
	* Initializes property values for intrinsic classes.  It is called immediately after the class default object
	* is initialized against its archetype, but before any objects of this class are created.
	*/
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);

};

class USpeedTreeFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC(USpeedTreeFactory, UFactory, 0, UnrealEd)

	USpeedTreeFactory(void);
	void       StaticConstructor(void);
	void       InitializeIntrinsicPropertyValues(void);

	UObject*   FactoryCreateBinary(UClass* InClass,
		UObject* InOuter,
		FName InName,
		EObjectFlags InFlags,
		UObject* Context,
		const TCHAR* Type,
		const BYTE*& Buffer,
		const BYTE* BufferEnd,
		FFeedbackContext* Warn);
};

/** TemplateMapMetadataFactory factory */
class UTemplateMapMetadataFactory : public UFactory
{
	DECLARE_CLASS_INTRINSIC(UTemplateMapMetadataFactory,UFactory,0,UnrealEd);
public:
	void StaticConstructor();
	/**
	* Initializes property values for intrinsic classes.  It is called immediately after the class default object
	* is initialized against its archetype, but before any objects of this class are created.
	*/
	void InitializeIntrinsicPropertyValues();
	UObject* FactoryCreateNew(UClass* Class,UObject* InParent,FName Name,EObjectFlags Flags,UObject* Context,FFeedbackContext* Warn);
};

#pragma pack(push,1)

struct FTGAFileHeader
{
	BYTE IdFieldLength;
	BYTE ColorMapType;
	BYTE ImageTypeCode;		// 2 for uncompressed RGB format
	WORD ColorMapOrigin;
	WORD ColorMapLength;
	BYTE ColorMapEntrySize;
	WORD XOrigin;
	WORD YOrigin;
	WORD Width;
	WORD Height;
	BYTE BitsPerPixel;
	BYTE ImageDescriptor;
	friend FArchive& operator<<( FArchive& Ar, FTGAFileHeader& H )
	{
		Ar << H.IdFieldLength << H.ColorMapType << H.ImageTypeCode;
		Ar << H.ColorMapOrigin << H.ColorMapLength << H.ColorMapEntrySize;
		Ar << H.XOrigin << H.YOrigin << H.Width << H.Height << H.BitsPerPixel;
		Ar << H.ImageDescriptor;
		return Ar;
	}
};

#pragma pack(pop)

/**
 * This helper allows to decompress TGA data in a pre-allocated memory block.
 * The pixel format is necessarily PF_A8R8G8B8.
 */
UBOOL DecompressTGA_helper(
	const FTGAFileHeader* TGA,
	DWORD*& TextureData,
	const INT TextureDataSize,
	FFeedbackContext* Warn );

#endif // __FACTORIES_H__
