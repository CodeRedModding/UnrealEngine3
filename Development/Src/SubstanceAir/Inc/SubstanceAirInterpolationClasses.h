/*===========================================================================
    C++ class definitions exported from UnrealScript.
    This is automatically generated by the tools.
    DO NOT modify this manually! Edit the corresponding .uc files instead!
    Copyright 1998-2013 Epic Games, Inc. All Rights Reserved.
===========================================================================*/
#if SUPPORTS_PRAGMA_PACK
#pragma pack (push,4)
#endif

#include "SubstanceAirNames.h"

// Split enums from the rest of the header so they can be included earlier
// than the rest of the header file by including this file twice with different
// #define wrappers. See Engine.h and look at EngineClasses.h for an example.
#if !NO_ENUMS && !defined(NAMES_ONLY)

#ifndef INCLUDED_SUBSTANCEAIR_INTERPOLATION_ENUMS
#define INCLUDED_SUBSTANCEAIR_INTERPOLATION_ENUMS 1


#endif // !INCLUDED_SUBSTANCEAIR_INTERPOLATION_ENUMS
#endif // !NO_ENUMS

#if !ENUMS_ONLY

#ifndef NAMES_ONLY
#define AUTOGENERATE_FUNCTION(cls,idx,name)
#endif


#ifndef NAMES_ONLY

#ifndef INCLUDED_SUBSTANCEAIR_INTERPOLATION_CLASSES
#define INCLUDED_SUBSTANCEAIR_INTERPOLATION_CLASSES 1
#define ENABLE_DECLARECLASS_MACRO 1
#include "UnObjBas.h"
#undef ENABLE_DECLARECLASS_MACRO

class UInterpTrackInstSubstanceInput : public UInterpTrackInst
{
public:
    //## BEGIN PROPS InterpTrackInstSubstanceInput
    TArrayNoInit<INT> ResetValue;
    class UInterpTrackSubstanceInput* InstancedTrack;
    //## END PROPS InterpTrackInstSubstanceInput

    DECLARE_CLASS(UInterpTrackInstSubstanceInput,UInterpTrackInst,0,SubstanceAir)
	virtual void InitTrackInst(UInterpTrack* Track);
	virtual void SaveActorState(UInterpTrack* Track);
	virtual void RestoreActorState(UInterpTrack* Track);
};

class UInterpTrackSubstanceInput : public UInterpTrackLinearColorBase
{
public:
    //## BEGIN PROPS InterpTrackSubstanceInput
    FName ParamName;
    INT NumSubcurve;
    //## END PROPS InterpTrackSubstanceInput

    DECLARE_CLASS(UInterpTrackSubstanceInput,UInterpTrackLinearColorBase,0,SubstanceAir)
	// InterpTrack interface
	virtual INT AddKeyframe(FLOAT Time, UInterpTrackInst* TrInst, EInterpCurveMode InitInterpMode);
	virtual void PreviewUpdateTrack(FLOAT NewPosition, UInterpTrackInst* TrInst);
	virtual void UpdateTrack(FLOAT NewPosition, UInterpTrackInst* TrInst, UBOOL bJump);
	
	virtual void PreEditChange(UProperty* PropertyThatWillChange);
	virtual void PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent);

	INT		GetNumSubCurves() const;
};

#undef DECLARE_CLASS
#undef DECLARE_CASTED_CLASS
#undef DECLARE_ABSTRACT_CLASS
#undef DECLARE_ABSTRACT_CASTED_CLASS
#endif // !INCLUDED_SUBSTANCEAIR_INTERPOLATION_CLASSES
#endif // !NAMES_ONLY


#ifndef NAMES_ONLY
#undef AUTOGENERATE_FUNCTION
#endif

#ifdef STATIC_LINKING_MOJO
#ifndef SUBSTANCEAIR_INTERPOLATION_NATIVE_DEFS
#define SUBSTANCEAIR_INTERPOLATION_NATIVE_DEFS

#define AUTO_INITIALIZE_REGISTRANTS_SUBSTANCEAIR_INTERPOLATION \
	UInterpTrackInstSubstanceInput::StaticClass(); \
	UInterpTrackSubstanceInput::StaticClass(); \

#endif // SUBSTANCEAIR_INTERPOLATION_NATIVE_DEFS

#ifdef NATIVES_ONLY
#endif // NATIVES_ONLY
#endif // STATIC_LINKING_MOJO

#ifdef VERIFY_CLASS_SIZES
VERIFY_CLASS_OFFSET_NODIE(UInterpTrackInstSubstanceInput,InterpTrackInstSubstanceInput,ResetValue)
VERIFY_CLASS_OFFSET_NODIE(UInterpTrackInstSubstanceInput,InterpTrackInstSubstanceInput,InstancedTrack)
VERIFY_CLASS_SIZE_NODIE(UInterpTrackInstSubstanceInput)
VERIFY_CLASS_OFFSET_NODIE(UInterpTrackSubstanceInput,InterpTrackSubstanceInput,ParamName)
VERIFY_CLASS_OFFSET_NODIE(UInterpTrackSubstanceInput,InterpTrackSubstanceInput,NumSubcurve)
VERIFY_CLASS_SIZE_NODIE(UInterpTrackSubstanceInput)
#endif // VERIFY_CLASS_SIZES
#endif // !ENUMS_ONLY

#if SUPPORTS_PRAGMA_PACK
#pragma pack (pop)
#endif
