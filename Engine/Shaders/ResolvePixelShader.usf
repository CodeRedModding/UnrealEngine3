/*=============================================================================
	ResolvePixelShader.usf: Resolve pixel shader source.
	Copyright 1998-2013 Epic Games, Inc. All Rights Reserved.
=============================================================================*/

#include "Common.usf"

#if SM5_PROFILE

Texture2DMS<float4> UnresolvedSurface;

void MainDepth(
	float2 InUV : TEXCOORD0,
	out float OutDepth : DEPTH
	)
{
	float2 SurfaceDimensions;
	int NumSurfaceSamples;
	UnresolvedSurface.GetDimensions(SurfaceDimensions.x,SurfaceDimensions.y,NumSurfaceSamples);

	int2 IntUV = trunc(InUV);

	// Compute the minimum depth of all samples.
	// Note that minimum depth actually means farthest depth, since 1/depth is stored.
	float MinDepth = 1000000;
	for(int SampleIndex = 0;SampleIndex < NumSurfaceSamples;++SampleIndex)
	{
		float Sample = UnresolvedSurface.Load(IntUV,SampleIndex).r;
		MinDepth = min(MinDepth,Sample);
	}

	OutDepth = MinDepth;
}

uint SingleSampleIndex;

void MainSingleSample(
	float2 InUV : TEXCOORD0,
	out float4 OutColor : COLOR0
	)
{
	float2 SurfaceDimensions;
	int NumSurfaceSamples;
	UnresolvedSurface.GetDimensions(SurfaceDimensions.x,SurfaceDimensions.y,NumSurfaceSamples);

	int2 IntUV = trunc(InUV);

	OutColor = UnresolvedSurface.Load(IntUV,SingleSampleIndex);
}

#endif